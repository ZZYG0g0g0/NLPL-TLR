
Thrown when a problem occurs running code in ensj.
Class used to model an address.

This class represents the exception generated when it is not possible get a connection to the database
Realization of the connection pool through the implementation of the java interface. sql. DataSource. The pool periodically monitors the active connections and those that are pools, i.e. those released but still usable (present i.e. in memory). The release time of the active connections and those pools are represented by two parameters present within the class and which are connectionPoolCloseTimeout and inactiveMaxTimeout; such values as well as all the others relating to the pool have their default value, parameterizable via the file of properties connection.properties
ConnectionWrapper is a class that adds to all methods of the class Connection the setting of the time in which the operation on the particular connection was made informing the pool of what happened.
Implementation of the thread able to maintain the connection to the database Mysql if there are no more active connections (troubleshooting) Mysql autoreconnect ). This class is also responsible for recalling the method of releasing active connections that have not performed operations in a certain interval of time.
Class that interfaces with the connection pool. In particular, it creates a single ConnectionPoolDataSource object (the pool of connections) and gets the its configuration parameters from the properties file connection. properties.
This class is the default exception generated by the system.

This class represents the exception generated when a user attempts to delete the only Admin user in the database.
This class represents the exception generated when a user attempts to delete the only Manager user in the database.
This class represents the exception generated when you attempts to insert an entity already present in the database.
This class represents the exception generated when an entity is not found in the database.
Class used to contain the environment variables of GESA

This class represents the exception generated when a user enter an incorrect password during authentication

Address Manager Class


Teaching manager class.

Class vote manager.
This class represents the exception generated when attempting to enter an entity without specifying a mandatory field
This exception is thrown as a warning from a part of the code which has not been implemented yet, but will be in future.
Class modelling a note on the log
This class represents the exception generated when a user tries to perform an operation for which you do not have permission.

Class used to model a report card.
Class used to model a user's role.
Servlet used to assign Teachings to a teacher
Servlet used to assign Teachings to a teacher

Change server Password of the logged-in user.
Servlet modifying the student record with the id of the father.
Servlet used to assign one or more roles to a user.


Servlet used to delete an address from the database




Servlet used to delete a teaching.
Servlet used to delete a user.
Servlet used to initialize system parameters.
Servlet used to enter an address in the database



Servlet used to insert a student report card.
Servlet used to insert a course in the DataBase.
Servlet used to insert a user into the DataBase.
Servlet used to view all academic years present in the db.
Servlet used to upload a student report card.
Servlet used to load the list of courses associated with the student's class.
Servlet used to view all academic years present in the db.
Servlet used to login the user.
Servlet used to log out the user.


Servlet used to remove Teachings to a teacher
Servlet used to view a report of the teachings of a teacher
Servlet used to change an address.
Servlet used to view all addresses.

Servlet to show the details of a class







Servlet used to view all teachings.

Servlet used to view all academic years present in the db.
Servlet used to modify a teaching.
Servlet used to view all teachings.

Servlet used to retrieve user details.
Servlet used to view all users.
Servlet used to display the management form of user roles.




Servlet used to update a student's report card.
Servlet used to modify a teaching.
Servlet used to modify a user.
Class used to model a teaching.

Class used to model a user.
Class used to model core information of a user.

This class contains a set of system management utilities.
Class used to model a grade.
