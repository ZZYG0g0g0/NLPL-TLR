AccessDAO is for all queries related to authorization. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Used for Add Personnel page (addPersonnel.jsp). This just adds an empty HCP/UAP, creates a random password for them. Very similar to {@link AddOfficeVisitAction} and {@link AddPatientAction}
Used for Add Patient page (addPatient.jsp). This just adds an empty patient, creates a random password for that patient. Very similar to {@link AddOfficeVisitAction}
The validator used by {@link AddPatientAction}. Only checks first name, last name, and email
The validator used by {@link AddPatientAction}. Only checks first name, last name, and email
Handles adding remote monitoring patient data to the database
Used for Add Personnel page (addPersonnel.jsp). This just adds an empty HCP/UAP, creates a random password for them. Very similar to {@link AddOfficeVisitAction} and {@link AddPatientAction}
Used for the logging mechanism. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
AuthDAO is for anything that has to do with authentication. Most methods access the users table. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Used for managing CPT codes. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. The CPT code set accurately describes medical, surgical, and diagnostic services and is designed to communicate uniform information about medical services and procedures among physicians, coders, patients, accreditation organizations, and payers for administrative, financial, and analytical purposes.
Used to change the session timeout, sessionTimeout.jsp. Note that a change to this timeout only gets reflected on new sessions.
Used for chronicDiseaseRisks.jsp. Passes most of the logic off to {@link ChronicDiseaseMediator}, and the various subclasses of {@link RiskChecker}.
Used by the patient to declare HCPs as "designated", in editHCPs.jsp.
Validates an ICD9CM code
Used by EditDrugInteraction.jsp to edit and get information about drug interactions.
Used for managing drug interactions. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Edits the health history of a patient, used by editBasicHealth.jsp
Handles changes (adds and removes) to the monitoring list for a certain HCP.
Edits the office visits of a patient Used by editOfficeVisit.jsp.  This exists in two states: saved and unsaved.  If unsaved, data cannot be saved to sub actions (if this is attempted, exceptions will be raised).  Once it is saved, however, the sub actions can be saved.
Edits the patient health record for a given patient Used by editPHR.jsp
Edits a patient Used by editPatient.jsp
Edits the designated personnel Used by admin/editPersonnel.jsp, staff/editMyDemographics.jsp, editPersonnel.jsp
Edits a patient's personal representatives. Used by hcp/editRepresentatives.jsp
Sends email to users. Since we don't want to train spammers in 326, this just inserts into a database. If we put this into an actual system, we would replace this class with stuff from javax.mail
Creates a new Emergency Report Used by emergencyReport.jsp
Used for queries related to families. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Handles Getting the person's name associated with a certain mid Used by getUser.jsp
Gets the VisitReminders for a given patient Used by visitReminders.jsp
Used for all health records where a whole history is kept. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Checks to see if the given patient is at risk for Heart Disease For details on what each method does, see {@link RiskChecker}
Validates the input for hospital beans, {@link UpdateHospitalListAction}
Used for managing hospitals DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Used for managing all ICD codes. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. The International Statistical Classification of Diseases and Related Health Problems (most commonly known by the abbreviation ICD) provides codes to classify diseases and a wide variety of signs, symptoms, abnormal findings, complaints, social circumstances and external causes of injury or disease.
Validator used to validate LOINCbean
DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. Logical Observation Identifiers Names and Codes (LOINC) is a database and universal standard for identifying medical laboratory observations.
Action class for LabProcHCP.jsp.
Class for LabProcUAP.jsp.  Handles lab procedures for UAPs
A DAO for managing lab procedure codes. Database Access Object. All info coming into a DAO is already validated. Just worry about DB stuff here. Note that all DAOs need to have a DAOFactory with which to access other DAOs and to get connections. Also, every DAO must have a constructor with a DAOFactory as a parameter.
Validates ND code beans, from {@link UpdateNDCodeListAction}
Used for the logging mechanism. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.

Edits the privacy levels of diagnoses, used by myDiagnoses.jsp
Used for managing the ND Codes. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. The National Drug Code (NDC) is a universal product identifier used in the United States for drugs intended for human use.
Used for doing tasks related to office visits. Use this for linking diagnoses to office visits, and similar tasks. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs. Adds an override reason bean to the database. public long addReason(OverrideReasonBean orb) throws DBException { Connection conn = null; PreparedStatement ps = null; try { conn = factory.getConnection(); ps = conn .prepareStatement("INSERT INTO OVReactionOverride (OVMedicationID,OverrideCode,OverrideComment) VALUES (?,?,?)"); ps.setLong(1, orb.getPresID()); ps.setString(2, orb.getORCode()); ps.setString(3, orb.getDescription()); ps.executeUpdate(); return DBUtil.getLastInsert(conn); } catch (SQLException e) { e.printStackTrace(); throw new DBException(e); } finally { DBUtil.closeConnection(conn, ps); } }
Used for managing all static information related to a patient. For other information related to all aspects of patient care, see the other DAOs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Validates a patient bean, from {@link EditPatientAction}
Used for managing information related to personnel: HCPs, UAPs, Admins DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Validates a personnel bean, from {@link EditPersonnelAction}
Validates an ND code, from {@link UpdateNDCodeListAction}
Used to update referrals, and fetch lists of referrals sent to and from HCPs. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Used for the keeping track of remote monitoring data. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Validator used to validate adding new remote monitoring data in {@link AddRemoteMonitoringDataAction}

Used for handling data related to report requests. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Manages resetting the password Used by resetPassword.jsp
An abstract class which has a number of utlity methods for checking risks. When extending this class, use the methods to fill in all of the necessary information. Then use isAtRisk and getPatientRiskFactors to get the actual risks. See the known subclasses for an example

Validates the security question and answer. This doesn't follow the same format as the others because this validator is used for the various states of reset password, {@link SetSecurityQuestionAction}
Class for SendMessage.jsp.
A listener which will time the user out after a pre-specified time limit.
Handles setting and retrieving the security questions/answers for users Used by patient/editMyDemographics.jsp, staff/editMyDemographics.jsp, staff/editPersonnell.jsp
This class is used to add patient survey data to the database.  The office visit ID is linked with the survey ID.  Once the survey is added, the transaction is logged
A DAO for handling all Survey data. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
A DAO for handling all Survey results. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Used for the logging mechanism. DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
Checks to see if the given patient is at risk for Type 1 Diabetes. For details on what each method does, see {@link RiskChecker}
Checks to see if the given patient is at risk for Type II Diabetes. For details on what each method does, see {@link RiskChecker}
Updates the CPT Code (Medical Procedures) List Used by editCPTProcedureCodes.jsp The CPT code set accurately describes medical, surgical, and diagnostic services and is designed to communicate uniform information about medical services and procedures among physicians, coders, patients, accreditation organizations, and payers for administrative, financial, and analytical purposes.
Handles updating the list of hospitals Used by hospitalListing.jsp
Handles updating the ICD Code (Diagnosis) List Used by editICDCodes.jsp The International Statistical Classification of Diseases and Related Health Problems (most commonly known by the abbreviation ICD) provides codes to classify diseases and a wide variety of signs, symptoms, abnormal findings, complaints, social circumstances and external causes of injury or disease.
Handles updating the LOINC Used. Logical Observation Identifiers Names and Codes (LOINC) is a database and universal standard for identifying medical laboratory observations.
Handles updating the ND Code (Prescription) List Used by editNDCodes.jsp The National Drug Code (NDC) is a universal product identifier used in the United States for drugs intended for human use.
Handles retrieving beans for viewPrescriptionRecords.jsp
Handles retrieving the log of record accesses for a given user Used by viewAccessLog.jsp
Action class for ViewMyMessages.jsp
Handles patients viewing their own records Used by viewMyRecords.jsp
Handles retrieving the patient data for a certain HCP as used by viewTelemedicineData.jsp
Action class for ViewMyReports.jsp.  Allows the user to see all their reports
Action class for ViewPatientOfficeVisitHistory.jsp
Handles retrieving beans for viewPrescriptionRecords.jsp
This action returns a list of patients with a special-diagnosis-history who have the logged in HCP as a DHCP and whose medications are going to expire within seven days.
Action class for ViewReport.jsp
This class is used to handle retrieving survey results from the database.  It also logs the transaction.
Action class for ViewVisitedHCPs.jsp
Used for queries related to patient reminders DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is, one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are added. DAOs can assume that all data has been validated and is correct. DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC connections and/or accessing other DAOs.
