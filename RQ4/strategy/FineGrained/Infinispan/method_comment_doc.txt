
struct opaqu random opaqu session cipher suit enum null compress method struct protocol version random random session id cipher suit compress method select case fals struct case true extens extens client hello struct extens type opaqu extens enum extens type enum certif finish handshak type struct handshak type length select handshak type case hello request case client hello case server hello case certif certif case server key exchang case certif request case server hello do case certif verifi case client key exchang case finish finish bodi handshak struct major minor protocol version enum alert handshak content type struct content type type protocol version version length opaqu tl plaintext tl plaintext
jd alpn hack support method method remov jd alpn support long requir jd alpn hack support method method remov jd alpn support long requir jd alpn hack support method method remov jd alpn support long requir

remov alpn extens server hello






doc doc doc







give two runnabl return runnabl execut sequenc even first throw except throw except add except throw second suppress except first give two segment complet listen return segment complet listen execut sequenc even first throw except throw except add except throw second suppress except first primari true segment primari segment exist segment howev primari fals segment must provid non null use specif

copi abstract collect support array method copi abstract collect support array method copi abstract collect sinc need close iter copi abstract collect sinc need close iter copi abstract collect sinc need close iter





construct compon
block current cach instanc link compon statu run start phase block link state transfer configur millisecond throw illeg state except cach reach state even maximum wait time retriev compon specifi type registri null find retriev configur compon retriev compon factori instanc capabl construct compon specifi type factori exist registri one creat retriev compon one exist attempt find factori capabl construct compon factori annot link default factori annot capabl creat compon class instanc need construct depend automat wire instanc base method compon type annot link inject sum compon retriev happen follow order br look compon alreadi creat regist look appropri compon exist link configur may inject extern system look class definit pass link configur evict polici implement attempt creat look appropri factori annot link default factori return immut set contain compon exist repositori moment retriev state registri en publicli avail lifecycl method star actual intern lifecycl method set statu fail problem one declar type convert runtim except except cach except thing meta factori yet factori creat use method attempt use empti public constructor actual stop en actual intern lifecycl method assert whether invoc allow cach return tt true invoc allow tt fals otherwis origin call remot cach statu link compon statu initializin method block link state transfer configur milli check valid state scan regist compon lifecycl method add appropri list sort prioriti regist compon registri give type inject depend need compon type alreadi exist overwritten regist default class loader method must call compon regist typic call bootstrap code defens call constructor compon registri null paramet regist special null compon depend remov compon annot surviv restart rewir compon use rewir compon cr cach stop move state termin would almost empti registri compon rewir depend cach start star publicli avail lifecycl method method perform check appropri transit deleg similarli name intern method start compon registri connect channel start servic thread etc compon link compon statu initializin state initi first stop compon set statu link compon statu termin do compon link compon statu runnin state get compon wrapper properli handl code null compon wire object instanc depend annot link inject annot creat compon need base configur pass addit compon exist link compon registri strictli compon otherwis live registri lifecycl command

add element code src list alreadi exist code dest list latter

arbitrari valu need start j group transport need stop j group transport
method invok success remot invoc method invok remot invoc











method convert differ abstract deleg cach stream




actual doubl stream oper method convert differ abstract deleg cach stream method deleg origin cach stream


invok command handl invok command handl real link per cach inbound invoc handler
actual int stream oper method convert differ abstract deleg cach stream method deleg origin cach stream

actual long stream oper method convert differ abstract deleg cach stream method deleg origin cach stream



method invok success backup remot invoc method invok success remot invoc method invok backup remot invoc method invok remot invoc


set link configur builder use creat emb cach manag set link global configur builder use creat emb cach manag creat fulli configur emb cach manag instanc setter locat configur file p set link resourc code locat configur file use configur link emb cach manag emb cach manag link spring emb cach manag spring emb cach manag creat factori bean deleg locat suppli infinispan default configur use p note configur set defin via use explicit setter expos factori bean take preced defin configur file point file locat

invok transact manag make sure effici implement system hash code effici implement



look file see link default file lookup look file see link default file lookup











return session option paramet whether updat time access



deriv class must call init inject method keep one inject method per class
method support use use cach remov instead

tod initi tod initi tod initi tod initi tod initi

avoid weak refer cach manag garbag collect without shutdown





use specifi link connect factori handl connect databas use specifi link connect factori configur builder configur connect databas



regist set bean compon return true success regist fals otherwis


header key length key lifespan max idl valu length valu
creat keytab file give princip creat default infinispa server keytab overridden want use anoth sp password keytab file locat magic return absolut path keytab j boss credenti infinispa return absolut path conf file privat method return list jd encrypt type name use conf public method remov work directori kerbero relat gener file
remov listen notifi test class properli annot cach listen return listen annot loop valid method object pass cach relev method link listen invoc invoc reflect builder provid use creat listen invoc method set target subject sync method need valu need set invok pass method


need method extern read
normal bit spreader
method implement link stream marshal input stream input stream implement move rather keep class implement stream marshal order avoid code duplic conveni method convert object link byte buffer take estim size paramet link byte buffer allow direct access byte array minim array copi

miss ca uniqu valu randomli fail test variou platform





need overwritten test class add annot oper deploy join node name







follow properti pass server startup test pass dorg u decod allo encod sla


setter configur remot cach manag
creat configur valu properti file ispn properti file drop test load balanc featur check custom load balanc strategi node cycl server list oper execut default properti server list test constructor remot cach manag properti file properti classpath use defin properti confirm file properti pick test load balanc featur check default load balanc strategi round robin cycl server list oper execut oper execut would need obtain transport call server address discov address use difficult arrang instead simul make repeat call transport factori transport

implement callabl timeout task overrid complet except cancel cancel timeout task remov request map call timeout task schedul link timeout schedul executor servic long time unit expir schedul timeout task give executor complet request link timeout except task run timeout task alreadi regist request cancel




creat jaspi node child node creat link model node secur compon configur configur array empti null null return



add member offlin connect site add element onlin connect site

configur async cach loader enabl provid asynchron write cach store give cach true fetch persist state join cluster multipl cach store chain one properti enabl persist state transfer share cach store make sens persist store provid datum end receiv therefor share cach store use cach allow persist state transfer even cach store properti set true true oper modifi cach put remov clear store etc will appli cach store mean cach store could becom sync cach true purg cach store start singleton store deleg store use situat one instanc cluster interact underli store coordin cluster respons underli cach store singleton store simpli facad real cach store implement alway deleg read real cach store
doc doc doc doc doc true purg cach store start doc doc doc doc


extract valid valu read p except throw use link complet except retriev valid valu read initi weak valu regist instanc cluster listen p note must invok initi instanc



denorm segment hash segment find owner integ valu map hash wheel interv idx size idx size leeway hardcod first line function todo reli implement detail segment layout default consist hash will work ch

return remot caller invalid remot transact encount happen remot node propag transact call current node current node idea transact question happen rehash ownership reassign transact return null usual mean transact command succeed




besid acquir lock method also handl follow situat hash b prepar b node crash singl lock owner point also write k tri prepar b determin k alreadi lock anoth tx e wait tx finish acquir lock algorithm use step transact associ current topolog id everi remot local transact creat tt also keep track minim valu topolog id transact still present cach topolog id tx want acquir lock k id topolog id k might key whose owner crash obtain list lt transact start previou topolog tabl transact prepar l want write k block finish cach transact transact finish write key tri acquir lock k id topolog id tri acquir lock straight away note algorithm describ node leav cluster add perform burden cluster stabl link regist backup lock tx invoc context object long backup owner keep backup lock key receiv command normal mani transact hold backup lock time secondari owner becom primari owner new transact tri obtain real lock wait backup lock releas backup lock releas either command origin leav cluster recoveri disabl

invok receiv node link invoc context
default handler command visit call visit method call unless visit command appropri overridden helper method visit collect visit command tx command write command read command




call item insert transact complet instead call releas method use asynchron concurr strategi call item updat transact complet instead call releas method use asynchron concurr strategi forcibl evict item cach immedi without regard transact isol forcibl evict item cach immedi without regard transact isol call item insert transact complet instead call evict attempt cach object load databas attempt cach object load databas explicitli specifi put behavior call item becom stale transact complet call evict datum entir region call finish attempt may may success transact complet method use asynchron concurr strategi call item updat transact complet instead call evict






add listen invok action readi cancel check action link action statu read link action statu cancel final state method thread safe idempot sinc invok multipl time multipl thread invok except occur process command invok alway command execut
invok link action complet


get number activ execut remov key associ valu cach store updat activ counter key also remov share configur store remov key associ valu cach store updat activ counter
cach loader manag passiv manag


add new alia list model node exist alia attribut write handler perform special process alia attribut get whether link oper context stage runtim handler add default implement return code true link oper context process type process type sever link oper context boot boot return code fals




attribut add oper extra paramet specifi link attribut add oper











add custom interceptor interceptor chain specifi posit first interceptor chain posit last one nu interceptor add custom interceptor interceptor chain instanc specifi interceptor type throw cach except find interceptor specifi type add custom interceptor interceptor chain instanc specifi interceptor type throw cach except find interceptor specifi type appli give delta delta awar object store awar valu key acquir lock success obtain ident link cach set type return cach entri instead entri pleas see method descript behavior p method need sinc nest gener support covari overload form link comput k bi function take instanc link metadata use provid metadata inform entri store lifespan version valu etc overload link object bi function metadata link serializ bi function overload form link absent function take instanc link metadata use provid metadata inform entri store lifespan version valu etc link metadata store call success overload link absent object function metadata link serializ function overload form link present bi function take instanc link metadata use provid metadata inform entri store lifespan version valu etc link metadata store call success overload link present object bi function metadata link serializ bi function tod even well add call appli chang give function success way could comparison cach valu also base version etc get collect entri return link map valu associ set key request p cach configur get key would return null entri miss cach cach link cach loader call attempt load entri entri load give key return map contain null valu key p unlik bulk method invok exist transact entri store current transact context p return link map copi updat map reflect cach vice versa key valu howev may copi depend binari enabl valu retriev local node get collect entri link advanc cach return link map cach entri associ set key request p cach configur get key would return null entri miss cach cach link cach loader call attempt load entri entri load give key return map contain null valu key p unlik bulk method invok exist transact entri store current transact context p return link map copi updat map reflect cach vice versa key valu howev may copi depend binari enabl valu retriev local node execut equival link map map return previou valu modifi entri allow modif interceptor chain experiment abil modifi interceptor runtim may remov futur version retriev link author manag cach secur enabl otherwis return null return cach avail local mode method alway return link avail mode availabl cluster mode link partit handl manag queri obtain avail mode return compon charg batch cach oper retriev cach entri correspond specif key return cach loader associ associ cach altern set everi invoc user could also consid use link decor cach wrapper return contain datum store cach user interact compon care direct call bypass intern interceptor infrastructur place guarante consist datum retriev refer link distribut manag cach configur use distribut otherwis return null fetch key belong group semant iter key memori persist perform read oper key find multipl invoc insid transact ensur key previou read return may return newli add key group commit transact also know phantom read code map return immut repres group time invoc want add remov key group use link object object link object remov key group use link group string improv perform may use code flag link flag ski cach loa avoid fetch persist howev get inconsist snapshot group return compon charg manag interact cach oper context inform associ return compon deal aspect acquir releas lock cach entri return compon charg commun cach cluster cach link cluster configur mode link cach mode loca method return null return link stat object allow sever statist associ cach runtim return transact manag configur cach transact manag configur method return null return link xa resourc associ cach use transact recoveri lock give key key eagerli across cach node cluster p key lock eagerli context transact lock collect key eagerli across cach node cluster p collect key lock eagerli context transact whenev cach acquir lock use give object owner say lock p use lock may manual acquir wish reus lock across invoc p great care take command misus easili lead deadlock return sequenti stream use cach sourc stream similar use link cach stream return link cach set method collect return via link advanc cach entri set use lock stream entri process user entri lock invoc prevent differ thread modifi p note stream support use optimist transact simpl cach non transact pessimist transact cach support p stream share ongo transact user may code execut stream treat complet independ oper perform via stream requir user start transact do intrins invoc note ongo transact lock key cach caus deadlock p current simpl cach link configur builder cach set true optimist cach link transact configur builder mode lock mode set link lock mode optimisti support method case throw link unsupport oper except restrict may remov futur version also method use cach lock owner alreadi specifi via link advanc cach object could lead deadlock releas lock earli throw link illeg state except overload form link object object bi function take instanc link metadata use provid metadata inform entri store lifespan version valu etc link metadata store call success overload link object object bi function metadata link serializ bi function overload form link put k v take instanc link metadata use provid metadata inform entri store lifespan version valu etc overload form link map take instanc link metadata use provid metadata inform entri store lifespan version valu etc asynchron version link object object metadata store metadata alongsid valu method block remot call even cach mode synchron benefit link object object metadata use local mode overload form link extern read v take instanc link metadata use provid metadata inform entri store lifespan version valu etc link metadata store call success overload form link absent v take instanc link metadata use provid metadata inform entri store lifespan version valu etc link metadata store call success attempt remov entri expir due expir entri consist across node still attempt remov valu present note rais expir event even entri present normal method never invok except link expir manag p command remov valu valu lifespan also match provid p method may remov point includ minor releas support extern usag remov key belong group semant fetch recent group remov note concurr addit perform group may remov remov interceptor specifi posit first interceptor chain posit last one interceptor chain remov interceptor specifi type overload form link replac k v v take instanc link metadata use provid metadata inform entri store lifespan version valu etc link metadata store call success overload form link replac k v take instanc link metadata use provid metadata inform entri store lifespan version valu etc link metadata store call success manual chang avail cach chang anyth cach cluster link partit handl configur split set link partit handl allo rea write use oper user call link advanc cach oper give link class loader mean link class loader happen result cach oper do use link class loader give exampl p user store pojo instanc cach configur link store binari configur instanc transform byte array entri read cach lazi unmarshal process happen byte array transform back pojo instanc use link advanc cach class loader read enabl user provid class loader use tri locat class construct result unmarshal process pre loader note flag take effect cach oper b must invok instanc return method p altern set everi invoc user could also consid use link decor cach wrapper allow readabl code e g pre cach loader specif cach new decor cach loader loader specif cach loader specif cach loader specif cach perform cach oper use specifi link encod perform cach oper use specifi pair link encod method add flag api call exampl consid follow code snippet pre flag flag forc writ loc invok cach get write lock forc p note flag take effect cach oper b must invok instanc return method p altern set everi invoc user could also consid use link decor cach wrapper allow readabl code e g pre cach write lock cach new decor cach flag forc writ loc write lock cach write lock cach write lock cach perform cach oper use specifi link subject appli cach author enabl see link configur builder perform cach oper use specifi link wrapper perform cach oper use specifi pair link wrapper
use thread pool remov expir datum persist storag remov entri suppli listen invok prefer link advanc cach writer executor purg listen sinc allow valu metadata provid provid accur expir coordin requir
iter parallel entri storag use thread b executor pool entri link cach loader task entri marshal entri task context invok pass entri callback task entri valid b filter implementor build link task context instanc implement feed link cach loader task everi invoc link cach loader task might invok link advanc cach loader task context time implementor method verifi task context state earli termin iter method return iter complet soon possibl case task context invok return number element store


remov datum storag use thread pool remov expir datum persist storag remov entri suppli listen invok p method return entri purg task run due loader provid executor howev except throw could task still pend run executor

return integ identifi extern type use read time figur link advanc extern read content incom buffer use posit integ allow effici variabl length encod number much effici ship link advanc extern implement class inform around neg valu allow implement interfac use posit integ long clash identifi system find inform identifi rang http html highli recommend maintain identifi do central way make annot refer set static defin identifi separ class interfac give global view identifi use make easi assign new id implementor option avoid give meaning implement method e return null instead reli xml programmat configur provid advanc extern id id determin via implement xm configur error report id defin via implement xm configur valu defin via xm configur use ignor return collect class instanc repres type advanc extern marshal clearli empti set allow extern framework current requir individu type list sinc make assumpt base super class interfac








numer id use exclus storag affin infinispan

























add annot type declar add annot specifi field field alreadi present add add annot specifi field field alreadi present add add annot specifi method method alreadi present add add annot specifi method method alreadi present add add annot specifi method paramet method alreadi present add method paramet alreadi present add creat link annot type public member present underli class overridden builder automat add read annot exist java type annot alreadi present overwritten read annot exist java type overwrit true exist annot overwritten read exist annot type element present add class read annot alreadi exist element builder read annot use read exist annot type element present add class read overwrit true annot alreadi exist element builder overwrit determin whether origin read annot use remov annot type remov annot specifi field remov annot specifi field remov annot specifi method remov annot specifi method remov annot specifi method paramet

gener determinist signatur link annot callabl two annot callabl annot underli callabl gener signatur creat determinist signatur link field gener determinist signatur link annot field two annot field annot underli field gener signatur creat string represent give type set annot creat string represent link annot paramet gener uniqu string represent list link annot paramet gener uniqu signatur concret class annot read directli class read code annot code method code field code constructor argument gener determinist signatur link annot type two annot type annot underli type gener signatur use creat uniqu bean id passiv capabl bean add directli sp











perform applic delta specifi entri






creat set array array contain duplic object last object array place result set





asynchron version link clear method block remot call even cach mode synchron benefit link clear use local mode asynchron version link object allow user code retriev valu associ key later stage henc allow multipl parallel get request send normal method detect valu like retriev remot entiti span differ thread order allow asynchron get call return immedi call definit resolv local exampl cach configur local mode store configur get asynchron call act sequenti differ link object asynchron version link map method block remot call even cach mode synchron benefit link map use local mode asynchron version link map long time unit method block remot call even cach mode synchron benefit link map long time unit use local mode asynchron version link map long time unit long time unit method block remot call even cach mode synchron benefit link map long time unit long time unit use local mode asynchron version link object object method block remot call even cach mode synchron benefit link object object use local mode asynchron version link object object long time unit method block remot call even cach mode synchron benefit link object object long time unit use local mode asynchron version link object object long time unit long time unit method block remot call even cach mode synchron benefit link object object long time unit long time unit use local mode asynchron version link absent object object method block remot call even cach mode synchron benefit link absent object object use local mode asynchron version link absent object object long time unit method block remot call even cach mode synchron benefit link absent object object long time unit use local mode asynchron version link absent object object long time unit long time unit method block remot call even cach mode synchron benefit link absent object object long time unit long time unit use local mode asynchron version link object method block remot call even cach mode synchron benefit link object use local mode asynchron version link object object method block remot call even cach mode synchron benefit link object object use local mode asynchron version link object object method block remot call even cach mode synchron benefit link object object use local mode asynchron version link object object object method block remot call even cach mode synchron benefit link object object object use local mode asynchron version link object object object long time unit method block remot call even cach mode synchron benefit link object object object long time unit use local mode asynchron version link object object object long time unit long time unit method block remot call even cach mode synchron benefit link object object object long time unit long time unit use local mode asynchron version link object object long time unit method block remot call even cach mode synchron benefit link object object long time unit use local mode asynchron version link object object long time unit long time unit method block remot call even cach mode synchron benefit link object object long time unit long time unit use local mode



set interceptor call explicitli perform work command invoc interceptor respons invok next interceptor chain use link base async interceptor next invoc context visit command method link base async interceptor
insert give interceptor specifi posit chain base index add new interceptor list interceptor give type add new interceptor list interceptor give type append end check whether chain contain suppli interceptor instanc check whether chain contain interceptor give class check whether chain contain interceptor give class subclass return first interceptor extend give class code null none return first interceptor give class code null none walk command interceptor chain receiv ctx pass note reus context multipl invoc allow howev context implement walk command interceptor chain receiv ctx pass remov interceptor give posit remov occurr suppli interceptor type chain replac exist interceptor give type interceptor chain new interceptor instanc pass paramet return number interceptor chain
ensur interceptor type pass alreadi add
true modif cach store happen asynchron separ thread unus unus set size modif queue async store updat make rate fast underli cach store process queue async store behav like synchron store period block queue accept element unus unus size thread pool whose thread respons appli modif
true modif cach store happen asynchron separ thread unus unus set size modif queue async store updat make rate fast underli cach store process queue async store behav like synchron store period block queue accept element unus unus size thread pool whose thread respons appli modif
indic servic start asynchron indic servic stop asynchron



retriev atom map give cach store give key atom map exist one creat regist atom fashion retriev atom map give cach store give key retriev fine grain atom map give cach store give key fine grain atom map exist one creat regist atom fashion retriev atom map give cach store give key retriev atom map give cach store give key retriev atom map give cach store give key read atom map return support updat map fact exist empti map return remov atom map associ give key underli cach

remov object store key local state flag persist set persist copi current state object also store cach return atom object class clazz class object must initi serializ well paramet method furthermor class must determinist return object class clazz class object must initi serializ well paramet method furthermor class must determinist object atom read optim equal fals otherwis sequenti consist detail read optim set everi call object first execut local copi object case call modifi state object valu return result tent execut return object class clazz class object must initi serializ well paramet method furthermor class must determinist object atom read optim equal fals otherwis sequenti consist detail read optim set everi call object execut local copi object case call modifi state object valu return result tent execut method method null overrid default clazz equal test state object copi ident







add child node child alreadi exist increment usag counter return exist child decrement usag counter child node remov usag remain remov work recurs path root
return name attribut return attribut identifi suppli link attribut definit return whether attribut set contain specifi name attribut return whether set contain specifi attribut definit return whether attribut set modifi return whether attribut set protect return new valu set immut link attribut copi attribut anoth attribut set write attribut attributeset part current element write attributeset specifi xml stream writer element write specifi attribut attributeset specifi xml stream writer element writer singl attribut specifi link xml stream writer use attribut name writer singl attribut specifi link xml stream writer use suppli name writer singl attribut specifi link xml stream writer use suppli name









specifi link callback handler use authent handshak link callback need handl specif choos sasl mechan set client subject necessari sasl mechan requir access client credenti e gssap disabl authent enabl authent configur whether authent enabl specifi password use authent usernam also requir specifi password use authent usernam also requir specifi realm use authent usernam password also need suppli select sasl mechan use connect server set sasl properti set sasl qop properti multipl valu specifi determin prefer order set sasl strength properti multipl valu specifi determin prefer order set name server expect sasl protocol specifi usernam use authent use simpl callback handler mutual exclus explicitli provid callback handler



challeng specif link infinispan request authent




verifi link subject request permiss link secur except throw otherwis verifi link subject request permiss role link secur except throw otherwis verifi link subject associ current link access control context request permiss link secur except throw otherwis verifi link subject associ current link access control context request permiss role link secur except throw otherwis









call cluster view chang e g one node leav abruptli call node leav grace call node join call administr manual chang avail statu call two partit merg comput stabl current cach topolog merg cluster call rebal end use state cach appli pend chang
member cach includ node tri join cach yet part current code cach topolog includ node leav cluster either grace abruptli still current topolog whenev new cach topolog without code c least code owner owner segment instal cach link avail mode availabl current cach topolog mark stabl topolog happen rebal schedul start anyth current topolog alreadi balanc queue start rebal use configur link consist hash factori creat new balanc consist hash give member rebal progress start rebal right away rebal progress queue anoth rebal rebal queue well replac new one code consist hash null remov queue rebal enter new avail mode use configur link consist hash factori creat new ch give code member start rebal member miss current topolog ignor updat stabl current topolog instal current topolog cach member






failur polici set link backup failur polici custo polici class requir return fulli qualifi name class implement link custom failur polici return name site cach backup datum backup happen sync async
configur system behav backup call fail appli sync backup default valu link backup failur polici war configur whether site use back datum default true failur polici set link backup failur polici custo polici class requir return fulli qualifi name class implement link custom failur polici timeout use replic call site set strategi use back datum sync async specifi default link backup configur backup strategi asyn configur whether replic happen pc pc sync backup default valu fals


use method remot cach backup cach default cach



handl state transfer control remot site control command must broadcast entir cluster cach exist handl state transfer state remot site possibl singl node appli state forward state respect primari owner

return local cach associ defin backup provid remot site cach combo throw except site defin also start cach alreadi state cach need updat method invok

return local cach defin backup provid remot site cach combo throw except site defin also start cach alreadi start cach need updat method invok
return list site backup fail due bridg commun error oppos error caus infinispan e g due lock acquisit timeout return time milli oper initi
prepar transact remot site bring site give name back onlin process respons backup command might throw except case replic remot site fail base configur link custom failur polici return map entri site name valu boolean true site onlin boolean fals offlin





access decod ascii charact form byte array support automat gunzipp fanci featur end decod decod datum base notat automat detect datum decompress end decod e c n g e h decod four byte array var sourc write result byte three var destin sourc destin array manipul anywher along length specifi offset offset method check make sure array larg enough accomod offset var sourc array offset var destin array method return actual number byte convert base encod end byte conveni method read file decod end file conveni method decod datum file end file attempt decod base datum deseri java object within return tt null error end object e n c n g e h encod first three byte array byte return array base notat actual number signific byte array give sig byte array byte need big sig byte code reus byte array pass array var end encod three byte array var sourc write result four base byte var destin sourc destin array manipul anywher along length specifi offset offset method check make sure array larg enough accomod offset var sourc array offset var destin array actual number signific byte array give sig byte end encod byte array base notat g zip datum end byte encod byte array base notat p valid option pre gzi object encod brea line break line charact note technic make encod p exampl byte datum base gzip p exampl byte datum base gzip base brea line end byte encod byte array base notat g zip datum end byte encod byte array base notat p valid option pre gzi object encod brea line break line charact note technic make encod p exampl byte datum base gzip p exampl byte datum base gzip base brea line end byte conveni method read binari file end file serial object return base version serial object object serial anoth error method return tt null object g zip encod end object serial object return base version serial object object serial anoth error method return tt null p valid option pre gzi object encod brea line break line charact note technic make encod p exampl object obj base gzip p exampl object obj base gzip base brea line end encod conveni method encod datum file end file
suspend invoc code delay complet success invok next interceptor list empti null invok next interceptor immedi code delay complet except skip next interceptor continu except need wrap result link stage object need add anoth handler suspend invoc code delay complet success invok next interceptor code delay complet except skip next interceptor continu except need wrap result link stage object need add anoth handler suspend invoc code futur complet return result without run remain interceptor caller add callback run code futur complet e g code valu appli command ctx command rv next ctx command particular scenario howev simpl use link invok next invoc context visit command complet futur invok next interceptor possibl new command use link next appli invoc context visit command invoc success function link next accept invoc context visit command invoc success action instead need process return valu next interceptor note code next command throw except order handl except next interceptor em must use link next handl invoc context visit command invoc final function link next final invoc context visit command invoc final action link next except invoc context visit command invoc except function invok next interceptor possibl new command execut link invoc callback interceptor finish except need wrap result link stage object need add anoth handler invok next interceptor possibl new command execut link invoc callback interceptor finish without except need wrap result link stage object need add anoth handler invok next interceptor possibl new command execut link invoc callback interceptor finish without except need wrap result link stage object need add anoth handler invok next interceptor possibl new command execut link invoc callback interceptor finish success need wrap result link stage object need add anoth handler invok next interceptor possibl new command execut link invoc callback interceptor finish success need wrap result link stage object need add anoth handler encod result link next invoc context visit command link invoc stage may creat new instanc result alreadi code invoc stage use intern set interceptor return valu code throwabl null throw except otherwis



p creat new book return book alreadi exist throw except p remov code book identifi suppli code id store p look return code book identifi suppli code id code null book exist p updat provid code book return updat version
disabl track rehash event could occur underli cach rehash event occur termin oper perform possibl valu cach find note never entri duplic rehash awar disabl lose valu termin oper run fast rehash awar disabl even without rehash occur howev rehash occur disabl prepar possibl receiv subset valu control mani key return remot node use stream termin oper distribut cach back stream valu ignor termin oper track key use key track termin oper link cach stream link cach stream link cach stream consum pleas see method addit inform valu may affect valu may use case termin oper track key intermedi oper perform requir bring key local comput exampl intermedi oper link cach stream link cach stream compar link cach stream link cach stream link cach stream valu b alway ignor stream back cach distribut valu alreadi local filter entri return segment present method substanti effici use regular link cach stream predic method control node ask datum entri read underli cach store present filter entri return return one map give key method fast regular link cach stream predic filter hold refer key would enabl send request remot node termin oper perform requir addit overhead must process result concurr variou node perform fast major case parallel distribut enabl default except link cach stream link cach stream allow registr segment complet listen notifi segment complet process termin oper short circuit listen may never call method design sole purpos use link cach stream allow user track complet segment return iter behavior method specifi pleas see link cach stream inform multipl listen may regist upon multipl invoc method order notifi listen specifi would disabl send request remot node compar one time reduc memori pressur origin node cost perform parallel distribut enabl default except link cach stream link cach stream set give time wait remot oper respond timeout noth termin oper go remot timeout occur link timeout except throw termin oper invok thread next call link iter link spliter note rehash occur timeout valu reset subsequ retri rehash awar enabl

return topmost condit never code null deleg parent queri builder




creat compar use order result return link iter creat iter result queri particular order order provid link compar return link compar



sort field contain doc valu hibern search forc uninvert


obtain event type correspond give event annot

doc

sinc lucen method releas renam close
decor match instanc present caller link object filter object execut regist filter notifi one whether satisfi give instanc creat new link matcher eval context capabl deal multipl filter context creat give instanc recogn type filter regist filter code null return signal condit make evalu fast method must call hold intern write lock creat new link matcher eval context capabl deal singl filter singl type context creat give instanc recogn type filter regist filter code null return signal condit make evalu fast method must call hold intern write lock

subclass must implement method order provid way lookup link serial context
return queri string return name paramet map return queri string reset intern state pagin queri paramet modifi need ensur next execut queri use new valu ensur name paramet valu



check region valid oper store new datum region retriev datum region doc support return doc support return invalid region use satisfi transact datum region transact awar subclass tell transact manag resum give transact tell transact manag suspend ongo transact









retriev name cach retriev version infinispan doc return valu oper ignor applic user strongli encourag use link flag ignor retur valu flag invok method order make behav effici possibl e avoid needless remot network call overload form link object object take lifespan paramet overload form link object object take lifespan paramet overload form link map take lifespan paramet note lifespan appli map map pass overload form link map take lifespan paramet note lifespan appli map map pass overload form link absent object object take lifespan paramet overload form link absent object object take lifespan paramet doc return valu oper ignor applic user strongli encourag use link flag ignor retur valu flag invok method order make behav effici possibl e avoid needless remot network call overload form link object object object take lifespan paramet overload form link object object object take lifespan paramet overload form link object object take lifespan paramet overload form link object object take lifespan paramet
retriev default cach associ cach contain method alway guarante return default cach unless one suppli cach contain p n share cach support fact encourag use user respons ensur least one one caller call stop cach awar other may use cach retriev name cach system cach previous creat name run cach instanc return otherwis method attempt creat cach first case link emb cach manag creat new cach method use configur pass emb cach manag construct templat option appli overrid previous defin name cach use link emb cach manag configur string configur link emb cach manag configur string string configur method declar configur file p n share cach support fact encourag use user respons ensur least one one caller call stop cach awar other may use cach

basic event logger collect anyth



start batch





complet batch one start use link batch batch start start batch oper current client thread perform part batch lock hold durat batch remot call delay till end batch

simpli check ongo tx ul one pass call chain one batch progress resum batch tx pass final suspend batch tx batch progress pass call chain
add qualifi use bean creation add qualifi use bean creation add qualifi use bean creation add type closur use bean creation add type closur use bean creation add type closur use bean creation defin creat bean altern defin bean class use bean creation defin link contextu lifecycl use bean creation p use bean builder current state defin bean bean class current defin bean creation link contextu lifecycl current defin bean creation bean manag use chang link bean builder id current defin bean creation inject point current defin bean creation name bean current defin bean creation qualifi current defin bean creation scope current defin bean creation stereotyp current defin bean creation string use link string call bean type closur current defin bean creation defin id use bean creation defin inject point use bean creation whether creat bean altern whether creat bean nullabl whether creat bean passiv capabl defin name bean use bean creation defin creat bean nullabl defin creat bean passiv capabl defin qualifi use bean creation defin qualifi use bean creation p read link annot type creat bean class annot p default bean lifecycl wrap result call link bean manag inject target annot type p link bean builder em support read member class creat produc observ method defin scope use bean creation defin stereotyp use bean creation defin string use link string call bean defin type closur use bean creation defin type closur use bean creation

clean final bean manag map deploy get valid prevent prematur load inform jndi case contain might fulli setup yet might happen someon use bean manag provid extens startup cleanup contain shutdown activ link bean manag current applic link class loader method throw link illeg state except bean manag find get creat bean manag info give class loader detect right class loader lookup order determin ol context class loader current thread class loader give object class loader class util class allow get current provid instanc provid access current link bean manag return link bean manag provid initi usual need call method applic code e g use framework check delta spike cdi contain gener start get bean manag jndi registri basic matter system event use basic use link bean discoveri event sinc allow use link bean manag provid event occur link bean discoveri event function exist prevent findbug complain set static member function
retriev setter name base field name pass return method object correspond getter retriev instanc class target return getter give class return method object correspond setter set instanc class target return setter give class retriev setter name base field name pass
return new set default add need given method bean method declar creat collect inject point repres paramet method

















check task readi process link executor servic invoc do asynchron invok never block execut give command time futur command less probabl block thread




creat less restrict expand queri match object input queri plu potenti fals posit queri execut fulli index result filter second pass remov fals posit method eventu return true case expans useless good run entir queri unindex full scan p field use input queri index expans ident input queri






creat thread pool reus fix set thread oper share bound queue thread termin due failur execut prior shutdown new one take place need execut subsequ task creat thread pool reus fix set thread oper share bound queue use provid thread factori creat new thread need
method invok add new entri address end lru node occur newli creat entri method invok acquir lock method repeatedli remov head lru list current size less equal size p need hold lru lock order check current size read head entri need hold head entri write lock order remov problem correct acquisit order entri write lock first lru lock second need hold lru lock know entri write lock acquir p work around first tri acquir entri write lock without block fail releas lru lock acquir lock correct order hope lru head chang wait entri write lock strip actual toler lru head chang long new head entri lock stripe lru list head chang releas lock tri method invok move exist lru node end occur entri access node method invok acquir lock





modifi buffer counter specifi valu acquir read lock block buffer empti object current lock write releas read lock reset buffer counter specifi number acquir write lock consum specifi amount buffer space block object current lock read buffer full count great releas write lock
provid next buffer size take account object store buffer record size datum last buffer use
set posit integ forc specif datum distribut hash function resolv key use store variou entri result index own specifi segment id use caution obvious lead sever unbalanc distribut set size option directori creat creat directori instanc provid executor handl delet oper background thread overrid default segment read locker case might abl provid effici implement default one control index reader lifecycl overrid index writer lock factori set true list file directori propag node asynchron impli commit chang index immedi access search thread node gap time long time singl rpc gap measur unless form congest current default fals safe
build servic specifi target






return new byte instanc size link length contain byte own buffer return underli buffer length byte start offset within underli byte return link buf own buffer instanc return offset within underli byte return link buf own buffer instanc





get number byte intern buffer resiz enough space doubl size intern buffer reach configur max size default begin grow buffer increment intend help prevent memori error resiz larg buffer
















transfer element common oper model


method invok cach inject




similar link cach collector collector serializ supplier except supplier provid must marshabl ispn marshal techniqu note detect runtim creat collector serializ upon usag creat collector use serializ supplier provid user


add region command clear shutdown clear region command factori


build instanc link evict command give region
attribut write handler perform cach oper


transfer element common oper model creat configur object initi oper model node







return name default cach



attribut write handler perform special process alia attribut



test attribut pick jboss infinispan default servic depend executor also test start attribut cach contain default start mode laz mode servic activ eager start mode mode servic deman
two constraint need deal may start cach contain instanc avail interrog lazi deploy cach contain instanc start upon deploy applic use cach instanc attribut name pass may correspond defin metric read attribut easi way throw except without neg impact part system therefor case messag log model node undefin return
method servic associ exist local cach



return appropri servic name specifi contain name


return code header valu return code header valu

check transact alreadi prepar anoth node p client send multipl request server case timeout similar request ignor origin still aliv transact prepar p transact prepar origin leav cluster previou transact new one start handl commit request client creat transact respons specif commit rollback transact second phase valid valu read still valid write oper proceed handl prepar request client handl rollback request client transform lifespan pass second millisecond follow rule inspir memcach p lifespan big number second day consid unix time convert millisecond subtract current time result return p otherwis consid number second return millisecond unit check configur transact manag abl handl client transact




retriev entri evict
commit chang commit chang retriev key entri retriev valu entri test whether entri repres null valu typic use repeat read roll back chang see link lookup set valu entri return previou valu entri mark remov undelet valid flag set true remov flag set fals


retriev valu entri activ


retriev valu entri creat true write command caus retri due topolog chang could sign event duplic anoth event drop replac eg modifi event replac creat event

retriev metadata associ entri retriev valu affect cach entri


retriev valu entri expir note event rais valu expir p


retriev valu entri invalid



retriev valu entri load


retriev valu entri modifi p true write command caus retri due topolog chang could sign event duplic anoth event drop replac eg modifi event replac creat event indic whether cach entri modif event result cach entri creat method help determin cach entri creat pre tt fals


retriev valu entri passiv p


regardless whether pre tt true tt fals method return valu entri delet method use situat cach listen need know old valu delet get pre tt fals callback retriev valu entri delet p true write command caus retri due topolog chang could sign event duplic anoth event drop replac eg modifi event replac creat event



retriev valu entri visit

convert give valu someth differ possibl

retriev cach event convert instanc factori
whether event rais listen attach

filter entri pass subsequ convert valu new valu return valu null symbol valu pass filter ensur convers return null want entri return

retriev cach event filter convert instanc factori
retriev cach event filter instanc factori
add event holder add event holder get event base cach annot class event

add need intermedi oper provid stream return possibl new stream result oper method keep contract filter convers perform call link key valu filter convert design key valu metadatum use determin whether valu return convert valu creat new link function use provid convert basi oper use use link stream function method distribut stream key valu metadatum use determin convert valu creat new link predic use provid key valu filter basi oper use use link stream predic method distribut stream key valu metadatum use determin predic return true
return cach name return cach health statu

regist link counter manag notif manag listen cach hold instanc p invok link counter manag notif manag cach method protect avoid regist multipl time
ignor give cach queri whether cach ignor replac ignor cach set provid long ignor give cach


return cach name default cach return friendli name return string represent compon statu enumer order avoid class find except jmx tool access infinispan class transact cach commit set true start transact transact call return version infinispan cach support extend advanc cach realli call cach method take metadata paramet sinc cach support method declar final easi cach impl stop extend cach support implement base method directli wrap return valu futur need typic stack oper configur support handl futur retval alreadi futur case method noth except cast futur otherwis futur wrapper creat alreadi complet simpli return retval use api consist

invok specifi oper specifi cach
registr perform unregist cach stop


return aggreg paramet meta datum give method return cach key invoc context correspond give invoc context return method meta datum give method



return true storag contain entri associ give key use initi cach loader typic invok link persist manag set cach loader fetch entri storag link marshal entri need creat link initi context marshal entri factori link initi context byte buffer factori use

disabl store give type give type find one store type configur store give type disabl method return collect cach loader type fulli qualifi class name configur enabl load cach loader entri give key find valu load current context method return whether valu find even cach loader check
resolv creat instanc link cach key gener resolv cach key gener class algorithm defin jcach specif use resolv cach name method annot jcach annot return default cach name associ give method accord j



start mbean regist stop mbean unregist
handler
notifi regist listen chang event note chang notif alway send immedi


two constraint need deal may start cach instanc avail interrog lazi deploy cach instanc start upon deploy applic use cach instanc attribut name pass may correspond defin metric read attribut easi way throw except without neg impact part system therefor case messag log model node undefin return
return number second sinc cach start map valu

return true mode invalid either sync async




notifi regist listen link cach entri evict event event notifi regist listen link cach entri activ event event notifi regist listen link cach entri creat event event notifi regist listen cach entri expir event notifi regist listen link cach entri invalid event event notifi regist listen link cach entri load event event notifi regist listen link cach entri modifi event event notifi regist listen link cach entri passiv event event notifi regist listen link cach entri remov event event notifi regist listen link cach entri visit event event notifi regist listen transact complet event notifi regist listen transact registr event
add listen use provid filter convert class loader provid builder use add addit configur includ cluster primari identifi use method complet see valu use addit listen configur event datum current use event configur event datum current use event configur event datum current use event
clear event event map
implement http delet request invok root context implement http delet request invok key implement http get http head request invok key implement http get request invok root context implement http put http post request invok key







disabl give filter name enabl give filter name return lucen link explan object describ score comput match current queri allow lucen filter result set result give index first result get total number result match queri ignor pagin result result return result search link result iter call link cach queri fetch option option default fetch option impli eager load result return result search link result iter warn return type extens link iter introduc link result iter method close method need invok iter complet avoid resourc leakag return result search list set maximum number result number pass paramet defin lucen field name project return queri result field convert back object represent object return row project field must store lucen index use link two way field bridg unless notifi java doc bridg document id field project design project field project field null return object allow lucen sort result integ sort descend order set timeout queri queri finish process timeout except throw
disabl give filter name enabl give filter name take lucen filter set filter field class set result give integ valu first result
read handler perform special process mode attribut













get origin command set origin command



doc

return appropri servic name specifi contain cach name


add member connect server base code onlin paramet




add valu local statist valu associ transact add valu remot statist valu associ transact print cach statist valu link print stream dump cach statist valu link string builder merg transact statist cach statist reset statist collect far
add valu statist signal start transact print cach statist valu link print stream increment statist valu equival code add stat transact local mark transact write transact instead read transact invok link prepar command receiv transact reset cach statist collect far set transact outcom commit rollback depend transact commit success respect signal end transact statist updat transact valu measur merg cach statist





return new instanc base link store configur
add new factori process remov factori associ registri creat new object base configur

link cach stream match predic except predic must also implement serializ p compil pick overload lambda paramet make serializ link cach stream match predic except predic must also implement serializ p compil pick overload lambda paramet make serializ perform mutabl reduct reduct oper element stream use code collector lazili creat code supplier provid method behav exactli link collector enhanc capabl work even mutabl reduct oper run remot node oper link serializ otherwis marshal method special design situat user want use link collector instanc creat link collector static factori method particular case function instanti link collector marshal use infinispan link extern class one subtyp doc note use distribut back cach stream collector must marshal prevent usag link collector class howev use link cach collector static factori method creat serializ wrapper creat actual collector lazili deseri use use method link collector class would normal altern call link serializ supplier perform mutabl reduct reduct oper element stream use code collector lazili creat code serializ supplier provid method behav exactli link collector enhanc capabl work even mutabl reduct oper run remot node oper link serializ otherwis marshal method special design situat user want use link collector instanc creat link collector static factori method particular case function instanti link collector marshal accord link serializ rule link cach stream supplier bi consum bi consum except variou argument must also implement serializ p compil pick overload lambda paramet make serializ doc doc oper invok remot local use distribut cach back stream oper act intermedi iter oper requir datum bring local proper behavior describ detail link cach stream document intermedi iter oper perform local remot requir possibl subset element memori subsequ intermedi oper termin oper perform local doc doc link cach stream predic except predic must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc link cach stream map function except function must also implement serializ p compil pick overload lambda paramet make serializ doc link cach stream map doubl function except function must also implement serializ p compil pick overload lambda paramet make serializ doc link cach stream map int function except function must also implement serializ p compil pick overload lambda paramet make serializ doc link cach stream map long function except function must also implement serializ p compil pick overload lambda paramet make serializ link cach stream consum except take link bi consum provid access underli link cach back stream p note cach awar interfac support inject use method cach provid consum directli doc oper perform remot node primari owner key tie entri stream method rehash awar low consist oper oper perform everi entri least cluster long origin go perform due distribut action perform essenti link cach stream batch size valu control mani element process per node time rehash enabl complet key send origin confirm process node go respons key process second time possibl cach local node inject instanc provid consum also implement link cach awar interfac method invok consum code accept method invok method run distribut default distribut back cach howev wish oper run local use code remain singl thread variant wish parallel variant use link stream support spliter boolean pass spliter stream either case rememb b must close stream do process iter spliter link cach stream bi consum except bi consum must also implement serializ link cach stream consum except consum must also implement serializ p compil pick overload lambda paramet make serializ doc usag oper requir close stream do iter prefer usag use tri resourc block stream method special usag link cach stream segment complet listen entri retriev next method complet segment method obey link cach stream batch size note use method link cach stream map function possibl element map give key guarante mani number entri return per batch note link iter method support intermedi oper appli stream stream creat link cach collect doc intermedi oper perform remot local reduc mani element send back node specif oper appli remot node return size valu aggreg result limit local node oper act intermedi iter oper requir datum bring local proper behavior describ detail link cach stream document subsequ intermedi oper termin oper perform local doc link cach stream function except function must also implement serializ p compil pick overload lambda paramet make serializ doc link cach stream doubl doubl function except doubl function must also implement serializ p compil pick overload lambda paramet make serializ doc link cach stream int int function except int function must also implement serializ p compil pick overload lambda paramet make serializ doc link cach stream long long function except long function must also implement serializ p compil pick overload lambda paramet make serializ link cach stream compar except compar must also implement serializ p compil pick overload lambda paramet make serializ link cach stream compar except compar must also implement serializ p compil pick overload lambda paramet make serializ link cach stream match predic except predic must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc link cach stream consum except consum must also implement serializ p compil pick overload lambda paramet make serializ link cach stream object bi function binari oper except binari oper must also implement serializ p compil pick overload lambda paramet make serializ link cach stream object binari oper except binari oper must also implement serializ p compil pick overload lambda paramet make serializ link cach stream binari oper except binari oper must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc doc oper perform entir local node irrespect back cach oper act intermedi iter oper requir datum bring local proper behavior describ detail link cach stream document depend termin oper may may requir entri subset skip appli memori subsequ intermedi oper termin oper perform local doc oper perform entir local node irrespect back cach oper act intermedi iter oper requir datum bring local proper behavior bewar mean requir entri cach memori one time describ detail link cach stream subsequ intermedi oper termin oper also perform local doc oper perform entir local node irrespect back cach oper act intermedi iter oper requir datum bring local proper behavior bewar mean requir entri cach memori one time describ detail link cach stream subsequ intermedi oper termin oper perform local link cach stream compar except compar must also implement serializ p compil pick overload lambda paramet make serializ doc usag oper requir close stream do spliter prefer usag use tri resourc block stream doc link cach stream array int function except binari oper must also implement serializ p compil pick overload lambda paramet make serializ doc
intent method mean integr point bytecod manipul remov alter signatur even might look like unreach code implementor perform put oper optim return valu requir
current consist hash futur consist hash code null rebal progress read oper alway go current owner id late start rebal union current futur consist hash code null rebal progress rebal progress write oper go union current futur owner

invok state transfer start caller consid local rebal do method return instead handler call link local topolog manag rebal phase string int int throwabl invok ch immedi updat leav state transfer complet instal perman ch ch null state transfer alway requir


set version read key version set first time e multipl invoc method chang state note use repeat read write skew cluster version clean backup lock transact prevent new modif prepar commit start return modif visibl within current transact includ use flag cach mod loca return list never null return transact identifi return modif visibl within current transact modif use flag cach mod local exclud return list never null return link complet futur complet lock code key releas code key lock transact return code null link releas futur key object return pair key futur note use repeat read write skew cluster version check modif give class subclass present transact modif use flag cach mod local ignor set version read fr key replac old version exist e invoc updat version key method use remot get perform key note use repeat read write skew cluster version check transact hold lock give key wait transact complet timeout expir return code true transact complet code fals otherwis key lock transact alreadi complet return code true immedi method subject spuriou return way similar link object sometim return specifi time elaps without guarante transact complet caller respons call method transact complet reach time budget spend



tod implement put map command

remov provid key store singl batch oper support underli store key remov store individu via link object use initi cach loader typic invok link persist manag set cach loader persist entri storag persist provid entri store singl batch updat support underli store entri write store individu via link marshal entri




p remov book identifi suppli code id databas annot method code cach evict book key id make sure spring remov book cach key code id link cach cach quot book quot p look return code book identifi suppli code id annot method code cacheabl book key id achiev follow ol li code book instanc return method cach name link cach cach quot book quot li key use cach code book instanc suppli code id p note strong import explicitli tell spring use code id cach key otherwis spring would strong deriv cach key paramet pass case code id cach key control would get we troubl link book book need book cach key remov cach would know cach key sinc know spring key gener algorithm therefor consist use code key id code key book id tell spring strong alway use book id cach key p store suppli code store databas sinc annot code cach evict book key book id condit book id null method tell spring remov book cach key code id link cach cach quot book quot evict trigger id code null






transform give cach cach write cach entri without wait complet add extra flag broadcast command give cach instanc transform give cach cach fail silent cach read fail transform give cach cach fail silent cach write fail transform give cach cach fail silent cach write fail add extra flag transform give cach cach ignor return valu oper return previou valu e link advanc cach object object transform give cach cach ignor return valu oper return previou valu e link advanc cach object object add extra flag indic whether give cach configur cluster content cach consid cluster configur cach mode except link cach mode loca indic whether give cach configur link cach mode invalidatio asyn link cach mode invalidatio syn indic whether give cach configur link cach mode rep syn link cach mode invalidatio syn link cach mode di syn transform give cach local cach call oper within transact method guarante right pattern use make sure transact alway either commit rollback call oper within transact method guarante right pattern use make sure transact alway either commit rollback









return uuid command
cancel invok thread thread give thread id regist thread link cancel servic give uuid id unregist thread link cancel servic give id


hack allow cast work properli sinc java work well nest gener hack allow cast work properli sinc java work well nest gener





return protocol stack configur channel factori determin whether specifi messag respons indic fork stack fork channel requir handl request exist recipi node







return appropri servic name default channel return appropri servic name specifi channel

push cach entri valu onto websocket channel browser cach key valu json string p note valu object like string number charact convert
creat link charset base link media type string creat java link charset object



get size get id get name get name chang encod could break backward compat



method throw io except assum get id network extern id probabl use map integ class instead array


add listen compon typic listen would need annot link listen contain method annot appropri otherwis listen regist see link listen annot inform add listen provid filter convert use give classload invok see link filter listen listen object cach event filter cach event convert detail
add listen along class loader use invoc
get valu map put valu map previou map discard silent get string summari represent map









append new command





creat cach entri key provid access version creat cach entri version use invok condit oper server link remot cach version object object long link remot cach version object long true write command caus retri due topolog chang could sign event duplic anoth event drop replac eg modifi event replac creat event
custom event datum type long convert binari format ship server client true write command caus retri due topolog chang could sign event duplic anoth event drop replac eg modifi event replac creat event

creat cach entri key

modifiedcach entri key provid access version modifi cach entri version use invok condit oper server link remot cach version object object long link remot cach version object long true write command caus retri due topolog chang could sign event duplic anoth event drop replac eg modifi event replac creat event

creat cach entri key true write command caus retri due topolog chang could sign event duplic anoth event drop replac eg modifi event replac creat event





regist client listen use queri dsl base filter listen expect annot link client listen raw datum true link client listen factori name link client listen factori name equal link filter quer d filt factor nam

defin convert factori client listen convert factori creat event convert custom content event send listen event custom enabl link client cach entri creat link client cach entri modifi link client cach entri remov callback receiv link client cach entri custom event instanc paramet instead correspond event event custom help reduc payload event increas send even inform back client listen default event custom appli defin filter factori client listen filter factori creat filter help decid event send client listen help reduc traffic server client default filter appli flag enabl cach state send back remot client either add cach listen first time node remot listen regist chang enabl state send back cach entri creat event client special case node remot listen regist chang send cach entri creat event client receiv failov event awar chang node use order local clean receiv state exampl client build local near cach keep date remot event might decid clear failov event receiv state receiv disabl state send back client add listen get state node listen regist chang default includ state disabl order provid good perform client must receiv event enabl includ state option affect type paramet receiv configur filter convert use raw datum filter convert class receiv raw binari array paramet instead unmarshal instanc default top raw datum enabl custom event produc convert expect byte array option use tri avoid marshal cost involv unmarshal datum pass callback cost involv marshal custom event poj os use raw datum also help potenti classload issu relat load callback paramet class custom event poj os use raw datum need class share server client default use raw binari datum callback disabl





doc p iter explicitli close iter upon complet failur could caus resourc free properli doc p stream explicitli close use failur could caus resourc free properli doc p spliter explicitli close use failur could caus resourc free properli doc p stream explicitli close use failur could caus resourc free properli








creat closeabl iter give iter noth close call creat closeabl iter close close underli stream well creat closeabl spliter give spliter noth close call creat closeabl spliter close close underli stream well take provid closeabl iter wrap appropri use closeabl spliter close iter spliter close creat stream close also close underli iter creat stream close also close underli spliter

method invok node give cluster listen regist gener give id note notifi cluster listen regular listen notifi event fire event order iter collect method invok node send detail requir new node bootstrapp exist cluster listen alreadi instal


jmx inform
call handl cluster view leav rebal phase call handl cluster view leav rebal phase call handl cluster view leav rebal phase helper work immut list tod member realli use invalid member use member call member list updat way link member address link member etc







add addit cluster event need send remot event origin local event send time regist rather link cluster event manag event invok event gather per thread basi batch reduc number rp c requir drop ignor previous add event thread send previous add event thread



command submit submit command avail node pass provid filter fail support configur default submiss method doc p command run desir node result return notifi user complet failur command return immedi runnabl process asynchron link executor runnabl except runnabl must also implement serializ p method use automat lambda prevent user manual cast serializ lambda allow filter address node allow address collect contact note method overrid previou filter do ie call link cluster executor target predic allow filter address node dynam per invoc predic appli member cluster invoc determin target contact note method overrid previou filter do ie call link cluster executor target collect allow filter address node allow address match give execut polici use note method overrid previou filter do ie call link cluster executor target collect p execut polici use address configur topolog awar link transport configur topolog info method return true fals method throw link illeg state except allow filter address node dynam per invoc predic appli member part execut polici note method overrid previou filter do ie call link cluster executor target collect p execut polici use address configur topolog awar link transport configur topolog info method return true fals method throw link illeg state except appli filter send invoc current node command submit submit one node avail node strict requir node choos implement specif fail use return executor desir use fail invok link cluster executor node submiss instead command submit submit one node avail node strict requir node choos implement specif howev command fail either command via network issu command fail retri provid number time use avail node except meet number fail count reach link timeout except throw retri except throw use link cluster executor time unit time fail occur avail node choos requir choos leav implement decid submit runnabl desir node return complet futur complet desir node complet give command p node encount except first one respond except set respond futur except state pass give except link cluster executor runnabl except runnabl must also implement serializ p p method use automat lambda prevent user manual cast serializ lambda submit give command desir node allow handl result return user provid link tri consum call back time desir node note callback call differ thread time complet futur return caller use sole purpos complet node send respons back p cluster executor run failov mode via link cluster executor node submiss consum call back time failur occur well satisfi order retri resubmit callback complet p note link tri consum run node task submit thu need serial link cluster executor consum function tri consum except callabl must also implement serializ p method use automat lambda prevent user manual cast serializ lambda set durat command timeout caus command return link timeout except throwabl timeout paramet use local remot node guarante whether time command interrupt


return name cluster return total cluster health return node name return number node cluster



test check whether cach start state call make channel may properli start block due state transfer may progress etc






reset collect statist
await complet give request return true request complet otherwis return fals time elaps free resourc relat oper signal ongo remot oper long continu process test whether oper still pend receiv respons give request key track remot oper rehash enabl perform remot stream oper without rehash awar key track remot oper rehash enabl perform remot stream oper rehash awar

retriev rebalanc statu cach signal new member join cach return code cach statu respons topolog current cach topolog node join node first join cach return topolog includ joiner never code null signal member leav cach mark rebal complet sender return whether rebalanc enabl disabl contain set id initi topolog give cach necessari use entri version contain topolog id start topolog id new version would recogn properli global enabl disabl whether automat rebalanc occur enabl disabl rebalanc specifi cach

wait receiv view code view id finish recov cluster state p return earli node shut p method invok lock hold






creat configur object initi datum oper
test test across testsuit also default

creat cach use default configur

two constraint need deal may start cach instanc avail interrog lazi deploy cach instanc start upon deploy applic use cach instanc attribut name pass may correspond defin metric read attribut easi way throw except without neg impact part system therefor case messag log model node undefin return
number result node cluster




invok logic get key remot cach return result

invok queri remot cach return result list key


broadcast cluster queri command cluster node command also invok local node retriev valu use doc index remot queri instanc


monitor cach event updat local cach monitor cach event updat local cach bring datum distribut cach local cach



cach mode see link cach mode inform variou cach mode avail configur hash sub element scatter cach threshold batch invalid send method allow configur cach distribut cach method call automat enabl want disabl make sure call link configur builder configur cluster behaviour presenc partit node failur timeout use wait acknowledg make remot call call abort except throw timeout use wait acknowledg make remot call call abort except throw configur sync sub element method invok user subsequ invok code async two mutual exclus
cach mode see link cach mode inform variou cach mode avail configur hash sub element scatter cach threshold batch invalid send method allow configur cach distribut cach explicitli enabl call link configur builder timeout use wait acknowledg make remot call call abort except throw timeout use wait acknowledg make remot call call abort except throw configur code transfer sub element distribut replic cach effect local invalidatio cach
allow rehash characterist must use cach mode configur cach behavior cach instanc cach mode element ignor configur cach react cluster partit configur state transfer new cach join cluster use distribut replic cluster mode configur commun synchron whenev thread send messag send wire block receiv acknowledg recipi sync config mutual exclus async config




logger hot rod client codec read stream datum read respons header transport return statu respons read unmarshal byte array write stream datum write client listen paramet write paramet write request header give paramet transport return updat header paramet

import hot rod protocol agre calcul virtual node address hash code calcul chang implement requir modif protocol

















creat set back specifi array

write oper support

creat link set give element
except result primari owner write oper return valu


acknowledg write oper complet backup owner acknowledg except oper execut p collector complet without wait acknowledg creat collector singl key write oper creat collector link put map command acknowledg link put map command complet backup owner notifi chang member list





retriev next interceptor chain sinc return code null next interceptor extend code command interceptor default behaviour xxx method ignor call pass call next interceptor chain note unlik link next method ignor interceptor extend code command interceptor invok next interceptor chain interceptor implement pass call chain next interceptor noth sinc


accept code nth invoc match b condit default code count match invoc use code count match one invoc e g code count match first invoc note code null origin mean origin includ local need match local command use link

build appli delta command use appli delta object delta awar contain store cach build cancel command command use cancel command execut infinispan cluster build clear command build cluster get command remot lookup command build cluster get command remot lookup command build commit command build complet transact command command build comput command build comput absent command code creat cach command name configur name fals build creat cach command use cach around infinispan cluster build distribut execut command use migrat execut distribut callabl runnabl build entri set command build evict command build get command build get cach entri command build link get doubt transact command build get key valu command build link get key group command use fetch key belong group build invalid command build invalid command build key set command link lock control command object long global transact lock singl key vs collect key build lock control command control explicit remot lock build prepar command build put key valu command build put map command build remov command build expir remov command use remov specif expir entri build replac command build rollback command build singl rpc command envelop contain singl replic command build singl rpc command use perform link visit command backup site build size command build state request command use request transact lock start cancel transfer cach entri build state respons command use push cach entri anoth node respons state request command build link stream respons command use send back respons either intermedi complet origin node inform stream request build link tx complet notif command build version commit command build version prepar command build x site admin command use perform system administr oper build x site state push command use transfer singl chunk datum site build x site state transfer control command use control site state transfer retriev cach name command factori set construct command initi link replic command read datum stream compon specif target cach instanc implement also deep command contain command recurs
need happen earli


tri commit cach entri entri commit origin state transfer oper alreadi updat start track key commit key commit flag flag state transfer receiv key track discard stop track key commit















disabl compat mode emb enabl compat mode emb differ remot endpoint hot rod memcach re set whether compat mode enabl disabl set marshal instanc use interoper layer


marshal instanc use protobuf
wait long time link complet futur complet wait link complet futur complet p ignor link complet futur complet normal except




usag compon metadata persist path contain class file scan output file gener
locat metadata give compon type regist regist consult final empti instanc link compon metadata return effect declar compon depend lifecycl method declar locat metadata give compon type regist regist null return locat fulli qualifi class name factori capabl construct instanc type typic factori annot link default factori initi repositori iter pass contain link modul metadata file finder instanc load infinispan modul note core modul alway load need contain iter inject factori give compon type

invok link bootstrap factori regist link modul command initi good place regist compon depend invok last servic wire cach shortcut compon stream marshal know compon name cach marshal cach shortcut local compon command factori cach shortcut compon per cach inbound invoc handler cach shortcut compon respons gener cach shortcut compon state transfer manag cach shortcut compon state transfer manag cach shortcut local compon version gener



perform bean registr unregist bean regist link bean





creat file append return file name append associ
return file manag







remov map map legaci method test key map specifi valu tabl method ident function link valu exist sole ensur full compat class link hashtabl support method prior introduct java collect framework test specifi object key tabl return tt true map map one key specifi valu note method requir full intern travers hash tabl much slow method key return enumer valu tabl return link set view map contain map set back map chang map reflect set set support element remov remov correspond map map via iter set tt clear oper support tt add oper view tt iter weakli consist iter never throw link concurr modif except guarante travers element exist upon construct iter may guarante reflect modif subsequ construct return valu specifi key map code null map contain map key formal map contain map key code k valu code v code key equal k method return code v otherwis return code null one map small util appli supplement hash function give code defend poor qualiti hash function critic concurr refer hash map use length hash tabl otherwis encount collis code differ low upper bit return tt true map contain map return link set view key contain map set back map chang map reflect set set support element remov remov correspond map map via iter set tt clear oper support tt add oper view tt iter weakli consist iter never throw link concurr modif except guarante travers element exist upon construct iter may guarante reflect modif subsequ construct return enumer key tabl remov stale entri whose key final use method normal necessari sinc stale entri automat remov lazili block oper requir howev case oper perform eagerli clean old refer class loader environ note method acquir lock one time across segment tabl use use sparingli map specifi key specifi valu tabl neither key valu null valu retriev call tt get method key equal origin key copi map specifi map one map replac map map key current specifi map doc remov key correspond valu map method noth key map doc doc doc return segment use key give hash return number map map map contain integ valu element return integ valu return link collect view valu contain map collect back map chang map reflect collect collect support element remov remov correspond map map via iter collect tt clear oper support tt add oper view tt iter weakli consist iter never throw link concurr modif except guarante travers element exist upon construct iter may guarante reflect modif subsequ construct







add new remot server cluster list regular express class deseri use standard java deseri read datum might store differ endpoint e g re add new remot server add list remot server form port port configur executor servic use asynchron work transport includ asynchron marshal cach oper cach async replic vs distribut hot rod server cluster client balanc request server accord strategi replic vs distribut hot rod server cluster client balanc request server accord strategi replic vs distribut hot rod server cluster client balanc request server accord strategi set batch size intern iter ie set default build configur object specifi link class loader use find certain resourc use configur specifi name e g certif store infinispan search classload load class system classload tccl os gi classload applic specifi level intellig client configur connect pool properti defin maximum socket connect timeout give connect server defin link consist hash implement use specifi version default link consist hash use version link consist hash use version defin link consist hash implement use specifi version default link consist hash use version link consist hash use version whether implicitli forc retur valu call hint allow size byte buffer serial deseri key minim array resiz default allow specifi custom link marshal implement serial deseri user object method mutual exclus link marshal allow specifi custom link marshal implement serial deseri user object method mutual exclus link marshal allow specifi instanc link marshal serial deseri user object method mutual exclus link class set maximum number retri request valid valu great equal zero zero mean retri make case network failur default properti defin protocol version client use default late protocol version support client secur configur properti defin maximum socket read timeout millisecond give wait byte server default minut affect tcp keepal tcp stack default disabl affect tcp nodelay tcp stack default enabl control transport use current tcp transport support control transport use current tcp transport support hint allow size byte buffer serial deseri valu minim array resiz default properti defin protocol version client use default late protocol version support client configur builder use specifi properti






extract boolean valu configur properti retriev configur properti pars integ exist return null properti set undefin get string properti default present pars string recogn exactli either true fals case valu null empti string valu return pars string integ valu
entri point configur parser get pass link xml extend stream reader posit root element associ parser accord regist map
version previou includ


return builder use build class determin instanc class link build annot present one present link cach configur except throw link configur util object except will throw except builder class find instead null return

name cach configur valu provid configur cach default one

get cach entri exist give key note concurr call method key utilis complet futur insid method consequ return result invoc method invok state transfer block rehash complet similarli state transfer initi invoc method rehash affect segment provid key initi request entri version cancel state transfer complet method utilis address local link distribut info owner request valu give key valu exist key one address null valu map say address return stream conflict detect cluster stream search conflict sequenti fetch cach segment respect owner node rebal initi whilst stream fetch cach segment cach except throw execut stream utilis link conflict manag conflict discov conflict key replica utilis configur link entri merg polici determin entri take preced result link cach entri appli replica cluster utilis link conflict manag conflict discov conflict key replica utilis provid link entri merg polici determin entri take preced result link cach entri appli replica cluster



fetch connect factori construct link connect factori base suppli class name construct link connect factori base suppli class name destroy connect import null might pass valid argument start connect factori pool factori might creat connect close connect factori includ alloc connect etc





specifi happen ask connect server pool pool exhaust set lifo statu true mean object return recent use last idl object pool idl instanc avail fals mean pool behav fifo queue object take idl object pool order return default set true control maximum number connect per server alloc check client thread idl pool one time limit number connect per server activ reach connect pool server say exhaust default set paramet e limit control maximum number idl persist connect per server time neg limit number connect may idl per server default set paramet set global limit number persist connect circul within combin set server limit total number persist connect circul total exceed connect pool exhaust default set paramet limit amount time millisecond wait connect becom avail exhaust action link exhaust action wai link element except throw neg valu suppli pool block indefinit specifi minimum amount time connect may sit idl pool elig evict due idl time connect drop pool due idl time alon set effect unless evict run milli default set paramet minut set target valu minimum number idl connect per server alway avail paramet set posit number evict run milli time idl connect evict thread run tri creat enough idl instanc idl idl instanc avail server default set paramet indic maximum number connect test idl evict run default set indic whether connect valid take pool send tcp packet server connect fail valid drop pool default set paramet fals indic whether connect valid return pool send tcp packet server connect fail valid drop pool default set paramet fals indic whether idl connect valid send tcp packet server idl connect evict run connect fail valid drop pool set effect unless evict run milli default set paramet true indic long evict thread sleep run examin idl connect evict thread launch default set paramet minut configur connect pool paramet accord properti

comput hash code give object normal ensur posit valu alway return















add cach link site statu connect site add cach mix connect site






throw link wrong context except context incorrect



callback invok creat bean link bean creation context call callback invok creat bean link bean object creation context call
creat instanc destroy bean get instanc
add listen continu queri add listen continu queri add listen continu queri get list current regist listen unregist listen remov continu queri listen
regist continu queri listen use queri dsl base filter listen receiv notif cach entri join leaf match set defin queri
receiv notif cach entri join match set invok initi receiv exist entri match queri subsequ whenev previous entri updat start match receiv notif cach entri leav match set happen due updat remov receiv notif cach entri match set updat continu match queri modifi attribut caus updat necessarili part queri


assert give paramet code null
set code flag code set









wrap link intern cach entri immut link intern cach entri copi involv




set counter initi valu p default valu zero set counter name p attribut requir set counter storag mode p default valu link storag volatil





gener link counter event p code valu new valu link counter event






defin counter specif code name link counter configur p overwrit exist configur return link strong counter specif name p link strong counter exist creat base link counter configur p note counter must defin prior method invoc use link counter manag counter string counter configur via global configur method support link counter type bound stron link counter type unbound stron counter return link weak counter specif name p link weak counter exist creat base link counter configur p note counter must defin prior method invoc use link counter manag counter string counter configur via global configur method support link counter type wea counter

clear configur counter set number copi counter valu avail cluster p high valu provid good avail cost expens updat p default valu set link reliabl mode p default valu link reliabl availabl
regist cach listen alreadi regist regist new counter creat local regist user link counter listen specif counter executor use user link counter listen invok





creat new valid link counter valu valu creat new link counter valu valu state base boundari creat new link counter valu valu state creat initi link counter valu base link counter configur

wait get respons start request
























invok initi phase

specifi list link interceptor configur instanc refer build interceptor chain
add new custom interceptor definit add cach cach start

























return capac underli contain support contain bound link unsupport oper except throw otherwis remov entri contain comput new valu key see link datum contain comput action object intern cach entri intern entri factori code key must activ invok link activ manag remov object boolean link activ manag updat object boolean depend valu return link datum contain comput action null respect p note entri provid link datum contain comput action may expir entri filter mani method test whether entri exist contain return mutabl set immut cach entri expos immut map entri instanc client method cach set oper implementor free convert set immut set need common use case client need iter mutabl set mutabl cach entri iter contain rather iter return set p set read back view entri underneath set show non expir entri invok size method set count expir entri purpos time cost compar n count expir entri atom remov key code datum contain passiv persist passiv must do invok method link passiv manag intern cach entri execut task specifi give action contain filter use specifi key filter execut task specifi give action contain filter use specifi keyvalu filter retriev cach entri doc iter return entri expir howev remov link datum contain except also return expir entri return set key contain iter contain use method client never call link object method instead link object order avoid chang order underli collect side effect iter p set key includ expir entri wish retriev non expir key pleas use link datum contain set method retriev key retriev cach entri way link object except updat reorder intern construct e expir happen case lru contain entri move end chain method use instead link object call iter datum contain use method like link iter avoid chang underli collect order put entri cach along metadata add inform lifespan entri max idl time version inform etc code key must activ invok link activ manag updat object boolean remov entri cach code key must activ invok link activ manag remov object boolean resiz capac underli contain support contain bound link unsupport oper except throw otherwis return valu contain includ expir entri wish receiv valu expir recommend use link datum contain set pull valu directli
datum contain implement use
add properti pair datum contain configur specifi datum contain use set link equival instanc use compar key store datum contain link equival implement allow custom comparison provid jd extern librari provid adequ comparison implement e array set link equival instanc use compar valu store datum contain link equival implement allow custom comparison provid jd extern librari provid adequ comparison implement e array set properti link datum contain configur











initi link backup write rpc command send updat backup owner key p method invok primari owner

name chang name chang name chang name chang method simul singl cach manag test multipl cach manag test method name chang name chang abstract infinispan test method name chang abstract cach test method name chang



check deadlock p accept two argument code owner lock owner tri acquir lock code owner current lock owner deadlock detect code owner must rollback must return code true deadlock find code owner must rollback must return code fals p method may invok multipl time multipl thread thread safe advis

whether deadlock detect enabl disabl time period determin often lock acquisit attempt within maximum time allow acquir particular lock
disabl deadlock detect enabl deadlock detect enabl disabl deadlock detect time period determin often lock acquisit attempt within maximum time allow acquir particular lock time period determin often lock acquisit attempt within maximum time allow acquir particular lock


expos interfac




doc doc doc doc doc doc doc doc doc doc


doc retriev default cach associ cach manag note default cach need explicitli creat link cach string string string sinc automat creat lazili first use method alway guarante return default cach retriev name cach system cach previous creat name run cach instanc return otherwis method attempt creat cach first creat new cach method use configur pass cach manag construct templat option appli overrid previous defin name cach use link configur string configur link configur string string configur method declar configur file doc doc doc doc doc
reli automat discoveri enforc registr requir extern



merg two consist hash object number segment owner hash function segment primari owner first ch prioriti primari owner becom backup
merg two consist hash object number segment owner hash function segment primari owner first ch prioriti primari owner becom backup leaver remov segment without owner assign new owner joiner might get segment otherwis take account happen rebal




main mechan essenti copi link abstract executor servic invok except replac link executor complet servic link distribut execut complet servic
compon may construct factori annot annot

















return definit object


stop handl invoc call listen unregist














merg current delta instanc give link delta awar instanc return coher complet link delta awar instanc implement abl deal null valu pass valu differ type expect delta awar instanc usual approach would ignor pass creat new instanc delta awar implement current delta implement write appli chang pass back
indic delta collect date extract via call link delta discard often use optim delta realli need clean reset intern state desir extract chang make implement effici format easili cheapli serial deseri method call changeset assum implement intern changelog wipe reset gener submit delta caller


creat new document one field contain string return list valu store field return list address member cluster run queri return store field match document pars queri use singl field default





add depend two element return depend check element depend remov element graph remov depend calcul topolog sort graph linear time







base deploy web archiv cdi extens packag individu jar



start point creat directori instanc

part directori contract lucen x

verifi file exist specifi valu lock consid null interpret valu give file cach key return total size chunk relat file verifi garbag element leav cach type object expect valu store also assert proper size metadata compar actual byte use chunk assum one index store inspect cach index use index reader index writer
close underli directori close invoc expect adapt check explicitli directori instanc take care contain key implement chunk element contain key implement chunk element guess mani chunk split file return valu consist file segment immut full segment rebuild upper layer without anyon actual specifi chunk number index segment file might larg g possibl chunksiz low contain byte singl array overkil anyway case ramp tri split larg size valu load valu specif key load entri cach loader consid actual lucen index go transform segment entri specif order simpl entri first load implement file list cach key must return concurr hash set contain name file directori load actual byte array segment rang specif size size specifi case like deriv invoc load method load implement file cach key must return metadata request file load key collector exclud maximum number collect key
doc doc doc doc forc releas lock directori make sure understand consequ doc doc doc doc




distribut manag write command








implement abstract method model node suitabl distribut cach


doc note method pay attent order constraint sort perform stream ignor termin oper wish order collector use link distribut cach stream collector method make sure link collector characterist unorder properti set intermedi oper store lazi evalul next one key track termin oper termin oper custom add method cach stream hack allow cast work properli sinc java work well nest gener

invok execut environ distribut callabl migrat execut specif infinispan node
rest termin oper custom add method cach stream
perform invoc callabl return result
doc complet servic doc complet servic doc complet servic doc complet servic doc complet servic

return distribut task builder distribut executor servic give callabl name impli client use distribut task builder creat distribut task instanc submit give callabl task execut singl infinispan node p execut environ choos arbitrari node n host key specifi input key avail local node n retriev cluster submit give distribut task execut singl infinispan node p execut environ choos arbitrari node n host key specifi input key avail local node n retriev cluster submit give callabl task execut specifi target infinispan node p submit give distribut task execut specifi target infinispan node p submit give callabl task execut avail infinispan node submit give callabl task execut avail infinispan node use input key specifi k input p execut environ choos node infinispan cluster input key local migrat give callabl instanc node execut return result list futur submit give distribut task execut avail infinispan node submit give distribut task execut avail infinispan node use input key specifi k input p execut environ choos node infinispan cluster input key local migrat give callabl instanc node execut return result list futur
rest termin oper custom add method cach stream



reset termin oper custom add method cach stream




acquir readlock chunk file make sure chunk delet iter group need avoid eager lock element valu find cach disambigu procedur need valu might mean exist readlock delet progress also exist file first possibl code valu avoid store readlock perman store would unnecessarili slow provid unwant long term storag lock valu treat one find obvious also find concurr delet file delet releas specifi filenam mark delet link infinispan index input instanc read effect delet evalu file potenti store fragment multipl chunk singl chunk need appli readlock link directori file string delet element cach instead flag file delet method realli remov element cach invok link releas read lock string verifi user leav need read chunk





return link callabl task return custom link distribut task execut polici task return custom link distribut task failov polici task return timeout execut task
complet creation distribut task current provid attribut distribut task builder provid relev link callabl link distribut task provid link distribut task execut polici task build provid link distribut task failov polici task build provid link distribut task task timeout

part distribut execut task fail due task throw except infinispan system caus failur e g node fail left cluster task execut etc maximum number fail attempt permit distribut task failov polici




return datum local characterist give key return first address contain key equival return first element link object test whether give key affect rehash may progress rehash progress method return fals help determin whether addit step necessari handl oper give key test whether current instanc complet join cluster test whether rehash progress locat key cluster return address may owner key rehash happen progress pend queri server invalid respons check next address check accordingli locat list key cluster like link object return address may owner key rehash happen progress pend queri server invalid respons check next address check accordingli

test whether rehash progress start rpc manag impl
return key transact intend lock set random number defin coin toss coin toss random number use deadlock detect decid transact commit rollback


link doubl cach stream match doubl predic except doubl predic must also implement serializ p compil pick overload lambda paramet make serializ link doubl cach stream match doubl predic except doubl predic must also implement serializ p compil pick overload lambda paramet make serializ doc link doubl cach stream supplier obj doubl consum bi consum except argument must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc doc link doubl cach stream doubl predic except doubl predic must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc link doubl cach stream map doubl function except doubl function must also implement serializ p compil pick overload lambda paramet make serializ link doubl cach stream doubl consum except take link obj doubl consum provid access underli link cach back stream p note cach awar interfac support inject use method cach provid consum directli link doubl cach stream doubl consum except doubl consum must also implement serializ p compil pick overload lambda paramet make serializ link doubl cach stream obj doubl consum except bi consum must also implement serializ doc doc link doubl cach stream doubl unari oper except doubl unari oper must also implement serializ p compil pick overload lambda paramet make serializ doc link doubl cach stream int doubl int function except doubl int function must also implement serializ p compil pick overload lambda paramet make serializ doc link doubl cach stream long doubl long function except doubl long function must also implement serializ p compil pick overload lambda paramet make serializ doc link doubl cach stream obj doubl function except doubl function must also implement serializ p compil pick overload lambda paramet make serializ link doubl cach stream match doubl predic except doubl predic must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc link doubl cach stream map doubl function except doubl function must also implement serializ p compil pick overload lambda paramet make serializ link doubl cach stream doubl binari oper except doubl binari oper must also implement serializ p compil pick overload lambda paramet make serializ link doubl cach stream doubl binari oper except doubl binari oper must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc doc doc doc doc
doc set inclus low bound valid set exclus low bound valid set inclus upper bound valid set exclus upper bound valid
return arithmet mean see valu null valu see valu to n sum point to n averag to averag return vari depend upon order valu see return sum see valu valu to n sum point to n averag to averag return vari depend upon order valu see use comput right sum input





start new transact associ call thread commit transact associ call thread get statu transact associ call thread get transact associ call thread resum associ call thread give transact roll back transact associ call thread mark transact associ call thread rollback use unit test chang transact timeout transact start call thread link begin method suspend associ call thread transact return suspend transact return method call thread long associ transact
add new environ properti environ context properti alreadi exist valu overwritten see class descript detail environ properti bind name object see link name object detail bind name object intermedi context target context name termin atom compon name must alreadi exist close context method releas context resourc immedi instead wait releas automat garbag collector p method idempot invok context alreadi close effect invok method close context allow result undefin behaviour compos name context name rel context see link name name name detail compos name context name rel context give name code name rel context name code prefix context rel one ancestor method return composit two name use syntax appropri name system involv code name name object rel context result name object rel ancestor context none name may null exampl context name wiz com rel initi context pre name wiz com might return code east wiz com instead context name pre name might return code pre name research return code creat bind new context see link subcontext name detail creat bind new context creat new context give name bind target context name termin atom compon name intermedi context target context must alreadi exist destroy name context remov namespac see link subcontext name detail destroy name context remov namespac attribut associ name also remov intermedi context destroy p method idempot succeed even termin atom name bind target context throw name find except intermedi context exist p feder name system context one name system may bind name anoth one subsequ look perform oper foreign context use composit name howev attempt destroy context use composit name fail context except foreign context subcontext context bind instead use tt unbind remov bind foreign context destroy foreign context requir subcontext perform context foreign context nativ name system retriev environ effect context see class descript detail environ properti p caller make chang object return effect context undefin environ context may chang use environ environ retriev full name context within namespac p mani name servic notion full name object respect namespac exampl ldap entri distinguish name dn record fulli qualifi name method allow client applic retriev name string return method jndi composit name pass directli context method name system notion full name make sens oper support except throw retriev parser associ name context see link name parser name detail retriev parser associ name context feder namespac differ name system pars name differ method allow applic get parser pars name atom compon use name convent particular name system within singl name system name parser object return method must equal use tt equal test enumer name bind name context along class name object bind see link name detail enumer name bind name context along class name object bind content subcontext includ p bind add remov context effect enumer previous return undefin enumer name bind name context along object bind see link bind name detail enumer name bind name context along object bind content subcontext includ p bind add remov context effect enumer previous return undefin retriev name object see link name detail retriev name object tt name empti return new instanc context repres name context context environ may modifi independ may access concurr retriev name object follow link except termin atom compon name see link link name detail retriev name object follow link except termin atom compon name object bind tt name link return object bind name object overwrit exist bind see link name object detail bind name object overwrit exist bind intermedi context target context name termin atom compon name must alreadi exist p object dir context exist attribut associ name replac object otherwis exist attribut associ name remain unchang remov environ properti environ context see class descript detail environ properti bind new name object bind old name unbind old name see link name name detail bind new name object bind old name unbind old name name rel context attribut associ old name becom associ new name intermedi context old name chang unbind name object see link name detail unbind name object remov termin atom name code name target context name termin atom part code name p method idempot succeed even termin atom name bind target context throw name find except intermedi context exist p attribut associ name remov intermedi context chang
creat initi context begin name resolut special requir context suppli use code environ environ paramet own caller implement modifi object keep refer although may keep refer clone copi


true write store artifici slow valu dummi memori store slo stor wai millisecond name utilis lookup exist dummi memori store instanc associ provid string instanc alreadi map provid string instanc utilis otherwis new instanc creat associ give string use test share store across multipl cach manag instanc



implement effici code critic perform






attempt commit transact de xa resourc transact enlist xa resourc transact get statu transact must defin increas perform regist link synchron callback transact roll back transact run second phase protocol code rollback code true link rollback except throw messag link forc rollbac messag mark transact possibl outcom rollback


start new transact associ call thread attempt commit transact get statu transact roll back transact mark transact possibl outcom rollback chang transact timeout transact start call thread link begin method


creat new link default cach manag default link configur test fail cdi extens regist will set cach manag name








hsearc





add depend two cach cach manag make sure cach stop depend cach consid exist creat start via one link cach method yet remov via link cach string environ cach continu creat remov method offer possibl find whether cach either start start whether remov alreadi defin name cach configur use first read templat configur appli overrid afterward gener configur way defin name cach configur declar xml file pass cach manag name null name cach name method work exactli like link configur string configur cach alreadi configur either declarit programmat method throw link cach configur except defin name cach configur use provid configur unlik previou version infinispan method build exist configur default name want behavior use link configur builder configur way defin name cach configur declar xml file pass cach manag cach alreadi configur either declarit programmat method throw link cach configur except providess cach manag base executor use execut give oper upon cluster singl node desir manag cluster execut local p note link emb cach manag implement may implement throw link unsupport oper except upon invoc retriev name cach system way link cach string except offer possibl name cach retriev yet start remov start configur exist name use configur cach retriev name cach system way link cach string except offer possibl specifi specif configur templat multipl cach creat use configur retriev name cach system way link cach string except offer possibl specifi specif configur templat multipl cach creat use configur tih method also offer possibl name cach retriev yet start remov start return configur give cach method return collect cach configur name contain cach configur defin via xml programmat cach configur defin runtim via cach manag instanc cach configur regist cach creat method return empti set default cach never includ set cach name well cach use link intern cach registri return global configur cach manag method return collect cach name contain cach defin via xml programmat cach creat runtim via cach manag instanc name cach regist cach creat method return empti set default cach never includ set cach name well cach use link intern cach registri return default configur cach manag return entri point health check ap return statist cach manag sinc test whether default cach run test whether name cach run remov cach give name system cluster wide oper result stop cach give name node cluster also delet content memori back cach store start set cach parallel infinispan support symmetr asymmetr cluster multipl node differ set cach run respect call method server startup cach name ensur cluster symmetr remov configur set defin configur configur current use one cach link illeg state except throw name configur exist noth happen
































cach name use store session datum session timeout second default set second minut integ
cach name use store session datum session timeout second default set second minut integ
convert storag format format encod associ uniqu id order optim serial know id keep link encod id convert datum format storag format

hac











decod object storag format encod object storag format










log inform messag indic endpoint start log inform messag indic endpoint start log inform messag indic endpoint start









todo anistor type predeclar could abl resolv unqualifi type name




wrap entri read usual raw link cach entri certain combin isol level presenc ongo jta transact may forc proper wrap mvcc entri entri also typic place invoc context insert entri exist datum contain context anyth key alreadi wrap insert extern entri e g load cach loader remot node context



retriev map entri look within current scope retriev entri collect look entri current scope put entri registri look entri current scope
method call link conflict manag conflict conflict discov determin link cach entri utilis merg polici use user explicitli call link conflict manag conflict well partit merg occur link partit handl allo rea write set event partit merg defin prefer partit partit coordin coordin current merg




method use calcul much memori size key valu use

compar give version current instanc


conveni lambda might decid return entri view receiv paramet make easi return valu meta paramet back client p lambda function decid return view launder immut view avoid user tri appli modif entri view outsid lambda function p view captur datum snapshot cach entri avoid chang underneath

lock valu key access command avoid overrid remot get lock valu key access command avoid overrid remot get total order condit commit remot context prepar flag pc set






compar two give object order return neg integ zero posit integ first object less equal great second object futur support object compar e array indic whether object pass equal exampl implementor provid altern implement equal array instead reli link object object call link array object object return hash code valu object pass exampl implementor provid altern implement hash code calcul array instead reli link object code call link array code return whether give object compar word give instanc object sensibl comparison comput use link object object method futur support object compar e array return string represent give object


add specifi element set alreadi present remov element set return code true set contain specifi element return hash code valu set use link equival function associ hash code set defin sum hash code element set hash code tt null element defin zero ensur link equival object object impli link equival code object link equival code object two set tt tt requir gener contract link object code implement iter set call code method element set add result return code true set contain element return iter element set remov specifi element set present return number element set set contain code integ valu element return code integ valu




setter




replac event logger provid one

set context event log set cach context event log name cach use indic context set detail event log could includ addit inform set throwabl includ detail event local messag throwabl well stack trace record event detail log messag event log use link event log level erro sever log messag event log use link event log level fata sever retriev event log cluster within specifi rang log messag event log use link event log level inf sever log messag event log specifi level set scope event log e g node address use event refer singl node cluster set node address scope event log log messag event log use link event log level war sever set secur name event log set secur princip event log name princip record log set secur subject event log name main user princip subject record log








maximum number entri cach instanc cach size guarante exceed upper limit specifi max entri howev due natur evict unlik ever exactli maximum number entri specifi make sens use count type evict strategi avail option unorder lr lir non disabl evict thread polici evict
maximum number entri cach instanc backward shortcut evict type coun entri defin maximum size evict occur see link evict type evict strategi avail option unorder lr lir non disabl evict thread polici evict set evict type either ul count entri evict number entri exceed link size long memori entri evict approxim combin size valu exceed link size long cach size guarante exceed upper limit specifi max entri howev due natur evict unlik ever exactli maximum number entri specifi


call back entri activ call back entri evict call back entri evict call entri specif remov contain
handl notif evict entri





need object default java serial marshal use memcach endpoint



tod initi tod initi tod initi tod initi
execut specifi context





add properti pair executor factori configur specifi factori class executor specifi factori class executor set properti executor factori configur

get high intern buffer size capac need buffer grow increment rather get number byte intern buffer resiz get intern buffer array note length array almost certainli long datum write call code size get number byte actual datum overriden avoid unneed synchron


return expiri give cach oper return null expiri time determin case client updat expiri set cach entri
maximum lifespan cach entri entri expir millisecond mean entri never expir note overridden basi use cach ap maximum idl time cach entri maintain cach millisecond idl time exceed entri expir mean entri never expir note overridden basi use cach ap determin whether background reaper thread enabl test entri expir regardless whether reaper use entri test expir lazili touch interv millisecond subsequ run purg expir entri memori cach store wish disabl period evict process altogeth set interv
disabl background reaper test entri expir test entri expir regardless whether reaper use entri test expir lazili touch enabl background reaper test entri expir regardless whether reaper use entri test expir lazili touch maximum lifespan cach entri entri expir millisecond mean entri never expir note overridden basi use cach ap maximum lifespan cach entri entri expir millisecond mean entri never expir note overridden basi use cach ap maximum idl time cach entri maintain cach millisecond idl time exceed entri expir mean entri never expir note overridden basi use cach ap maximum idl time cach entri maintain cach millisecond idl time exceed entri expir mean entri never expir note overridden basi use cach ap enabl background reaper test entri expir regardless whether reaper use entri test expir lazili touch interv millisecond subsequ run purg expir entri memori cach store wish disabl period evict process altogeth set interv interv millisecond subsequ run purg expir entri memori cach store wish disabl period evict process altogeth set interv



invok pass entri expir method may attempt lock key preserv atom invok store entri expir method may attempt lock key preserv atom p note method current take link intern cach entri due limit cach store ap may caus valu remov updat time invok store entri expir valu metadata avail use method prefer link expir manag store expir object allow specif expir possibl occur process expir event queue invok write know occur prevent expir happen way will swarm remot call requir alway invok regist write perform oper requir

delet key store well notifi cach listen expir give key valu metadata combin make sure start persist manag
handler


get high intern buffer size capac need buffer grow increment rather get number byte intern buffer resiz get intern buffer array note length array almost certainli long datum write call code size get number byte actual datum overriden avoid unneed synchron




read byte possibl present reader index reset last mark read rang byte prefix length encod sign v int read rang byte possibl present reader index reset last mark read string possibl present reader index reset last mark read variabl size int possibl present reader index reset last mark read variabl long possibl present reader index reset last mark read option rang byte neg length translat none length repres empti array read option string length empti string neg length translat none read length string return ut format string length length empti string return


cancel link lock promis possibl

return number unread buffer byte


public use test jmx expos method go replac lock manag rpc manag set deadlock detect lock manag default prioriti rpc manag impl prioriti



add valu statist statist exist contain fail silent merg code statist valu code reason code merg fail silent










read instanc stream instanc write link object object output object method implement free creat instanc object read stream way feel like could via constructor factori reflect write object refer stream



add packag class name extern marshal white list


return throwabl caus task failur includ system except relat infinispan transient failur node crash transient error etc well applic level except return throwabl like contain chain except interest client inspect desir find root caus return throwabl return list candid possibl repeat execut govern instal link distribut task failov polici return address node task fail return list input key task note method return key use input link distribut task rather input key use input part task execut fail




return string represent map string represent consist list map order return map set view iter enclos brace tt adjac map separ charact tt comma space map render key follow equal sign tt follow associ valu key valu convert string link string object

set fetch mode use fetch match result set fetch size batch load match


get name get name chang encod could break backward compat

guarante power two
get name chang encod could break backward compat
add filenam set exist remov filenam set exist
add new name list file make index delet file list file activ part index optim implement perform remov add make sure cach updat
look file see link file lookup factori default file lookup look file see link file lookup factori default file lookup look file see link file lookup factori default file lookup



get name get name

receiv notif instanc match filter

creat new context connect current one use boolean new context add current one two condit group oper preced result condit might chang effect b connect give context current one use boolean new context add current one group oper preced unaffect due group effect b creat new context connect current one use boolean new context add current one effect b connect give context current one use boolean new context add current one group effect b get link queri builder creat context infinispan long need

check leav argument give rang limit limit inclus default chang use method return link rang condit context check leav argument expect array collect contain give element check leav argument expect array collect contain give element order check leav argument expect array collect contain element give collect order check leav argument expect array collect contain give element check leav argument expect array collect contain element give collect check leav argument equal give valu alia link object check leav argument great give valu check leav argument great equal give valu check leav operand equal one fix list valu give argument check leav operand equal one element collect valu give argument check leav argument null check leav argument expect string match wildcard pattern follow jpa rule check leav argument less given valu check leav argument less equal give valu



return result filter method call evalu predic except one suspend

start handl invoc use link index filter start provid call depend inject stop provid report whether provid support give filter type










associ callback notifi success match compar correspond claus fulli qualifi entiti type name accept filter event type array separ path name project field code null otherwis array sort specif defin code null otherwis

regist listen limit specif event annot pass paramet exampl listen pass contain callback link cach entri creat link cach entri modifi filter annot contain link cach entri creat listen regist link cach entri creat callback callback filter appli link cach entri creat link cach entri modifi link cach entri remov link cach entri expir annot listen contain annot preserv method enabl dynam registr listen interest runtim without need creat sever differ listen class add listen compon typic listen would need annot link listen contain method annot appropri otherwis listen regist see link listen annot inform regist listen notifi event pass filter condit valu present notif first convert use provid convert one p implement may provid optim link cach event filter convert provid argument b filter b convert argument note provid object must refer equal ie recogn allow filter convers step take place method call reduc possibl overhead


warn pessimist lock without w map remov new key add remov transact commit map may remov key left dangl
alloc shard round robin fashion server ignor without segment associ segment shard

add singl flag command add set flag command add set flag command check whether flag code bit set paramet present command use constant link flag bit set check whether particular flag present command set flag replac exist flag set flag replac exist flag

creat copi flag bit set remov instanc fai silentl


































call link bean instanc forward deleg unless overrid
alreadi break equal contract sever place compar variou cach entri type one alreadi break hashcod contract sever place compar variou cach entri type one

call link observ method instanc forward deleg unless overrid
calcul hash code sum hash code element compar fqn anoth return true obj fqn element retriev fqn repres array element pass en privat constructor use factori method retriev fqn repres list element pass retriev fqn repres array element pass rel base fqn retriev fqn repres absolut fqn rel fqn pass retriev fqn repres list object element pass rel base fqn return new fqn string element delimin one separ link separato charact br br exampl use br pre fqn string br equival br pre fqn element b c obtain ancestor current fqn liter perform list gener code gener fqn return valu fqn current gener code gener fqn return valu code fqn parent e one gener behind current gener code gener would return fqn roo root return link fqn separato return parent fqn parent root node link roo exampl pre fqn string fqn string fqn string fqn string equal parent equal fqn roo parent parent equal fqn roo fqn roo parent obtain fqn give fqn liter perform list index index return hash code fqn element return true fqn child fqn exampl usag pre fqn string fqn string fqn string fqn string true child fals child fals child return true fqn equal child fqn exampl usag pre fqn string fqn string fqn string fqn string true child equal true child equal fals child equal return true fqn direct child give fqn return true root fqn peek element build fqn list return maintain immut natur fqn creat new fqn whose ancestor replac new ancestor pass declar final compil optimis return fqn string prefix first element link fqn separato join subsequ element link fqn separato root fqn return link fqn separato exampl pre new fqn object b c string fqn roo string
return first come second fqn come code null alway come first compar two fqn element class implement compar return otherwis return string string














function map name function map statu tell underli cach use encod tweak function map execut provid link param instanc
find first decor cach deleg surround otherwis null
notifi regist link read write listen instanc creat entri notifi regist link read write listen instanc modifi entri pass previou new valu notifi regist link read write listen instanc remov entri pass remov entri notifi regist link write listen instanc write entri








tri figur transact manag use get use transact manag





















































instanc link audit logger use track oper perform cach cachemanag default logger link null audit logger also use link log audit logger send audit messag log class mapper convert link princip associ link subject set role
remov cach give name return true cach remov
set list sequenc state interceptor code class return invoc accept code matcher next state list noth list exhaust set list sequenc state interceptor code class call invoc accept code matcher next state list noth list exhaust
get classload use configur
helper method get default construct global configur preconfigur use default cluster stack helper method get default construct global configur preconfigur use local mode
configur asynchron oper thread pool build link global configur object use set appli builder set name cach act default cach return link emb cach manag cach pleas use link global configur child builder thread pool configur expir thread pool global jmx configur global state configur configur listen thread pool global modul configur configur persist thread pool secur configur global serial e marshal configur shutdown configur cross replic configur configur thread pool transport e cluster configur


true multipl cach manag instanc could configur configur jmx domain cach manag practic use differ jmx domain calcul base configur one add increment index jmx statist enabl properti repres name cach manag offer possibl client provid name cach manag later use identifi cach manag within jmx base manag tool amongst cach manag might run jv jmx statist enabl jmx object appear name option specifi object name creat default set instanc link bean server lookup class use bind jmx bean set properti pass bean server lookup implement specifi
start extern tabl transport stop transport avoid marshal readi

add permiss role add permiss role



defin global role group permiss defin timeout millisecond cach user access role valu mean entri never expir valu disabl cach defin timeout cach user access role valu mean entri never expir valu disabl cach
flush acl cach node return global acl cach


return filesystem path persist state datum need surviv contain restart store default user dir system properti usual applic start return filesystem path temporari state store default valu java io tmpdir system properti
enabl disabl storag global state defin filesystem path persist state datum need surviv contain restart store datum store locat requir grace shutdown restor default user dir system properti usual applic start valu overrid appropri locat defin filesystem path temporari state store default valu java io tmpdir system properti

read persist state specifi scope regist state provid within state manag persist global state contact regist scope provid persist specifi scop state

must start everyth els
method invok link global state manag persist global state method invok link global state manag start notifi global state restor

return simplifi represent transact











check whether parent directori present directori absent true creat miss dir guarante power two return path file avoid issu aris file separ differ differ oper system path return alway use unix path separ charact client code call method bear disect path verifi whether child child dir file parent
return file denot pathnam return file denot pathnam file yet exist initi give size howev file pathnam alreadi exist size paramet ignor file actual size use open input stream read give file open input stream read file denot pathnam open output stream write file denot pathnam file pathnam alreadi exist write return output stream overwrit content file open output stream write file denot pathnam output stream either overwrit exist file append open output stream write file denot pathnam open output stream write give file open readabl grid file channel read file denot give file path one benefit use channel input stream possibl randomli seek posit file see readabl grid channel open writabl grid file channel write file denot pathnam file pathnam alreadi exist write return channel overwrit content file open writabl grid file channel write file denot pathnam channel either overwrit exist file append open writabl grid file channel write file denot pathnam remov file denot path



relat isp


get group give key return primari owner group check node owner group check node primari owner group






group support enabl link group annot honor configur grouper invok get current grouper use
add grouper clear grouper disabl group support link group annot use configur grouper invok enabl group support link group annot honor configur grouper invok enabl group support link group annot honor configur grouper invok set grouper use





remov link counter listen
hash byte array effici increment version hash function spread hash code one deriv link object code helper calcul hashcod object choos optim mechan hash calcul consid type object byte array string object
control proport entri resid local node compar node cluster suggest guarante node capac factor code twice mani entri node capac factor code consist hash factori use configur variou grouper definit see user guid inform hash function use use bit spreader gener hash code gener typic one mani default link consist hash implement ship number replica cach entri control total number hash space segment per cluster hash space segment granular key distribut cluster node one full segment fraction segment larg code segment valu mean even distribut key node hand usag new consist hash grow linearli code segment recommend keep code segment size fals rebalanc rehash take place new node join cluster node leav rehash timeout
control proport entri resid local node compar node cluster suggest guarante node capac factor code twice mani entri node capac factor code consist hash factori use hash function use use bit spreader gener hash code gener typic use conjunct mani default link consist hash implement ship current infinispan use object instanc instead instanti new instanc class therefor expect state surviv provid constructor instanc resolv infinispan key partition control map key hash segment p default implement code hash function partition use hash function configur via link hash futur version may ignor hash function number replica cach entri control total number hash space segment per cluster hash space segment granular key distribut cluster node one full segment fraction segment larg code segment valu mean even distribut key node hand usag new consist hash grow linearli code segment recommend keep code segment size disabl rebalanc rehash would take place new node join cluster node leaf enabl rebalanc rehash take place new node join cluster node leaf enabl rebalanc rehash take place new node join cluster node leav rehash timeout



return per cach health return cluster health get basic inform host

return per cach statu return cluster health statu return cluster name return amount free memori k host return total amount cp we jv return total node cluster return amount total memori k host





return give valu convert type give properti determin via field bridg properti determin whether give properti path denot emb entiti properti entiti

get actual type resolv type paramet
load hikari properti prioriti properti file specifi configur hikari properti classpath

get free memori k return number cp we instal host get total memori k















read header return whether tri continu call state transfer also mark buffer read posit can read byte reset













magic messag id op code statu topolog chang marker
isp test hot rod client except public void reader buld read throw privileg action except login except reader cach bulk










test correct behaviour remot cach manag function br current oper complet new oper suppos issu check server statu test involv shut server conveni method kill server accord number pariti test basic memori consumpt differ standard api stream api test behaviour one server kill test behaviour one server grace shutdown refresh resourc test conveni method start server accord number pariti conveni method stop server accord number pariti test basic function multipl stream test behaviour cach stream object collect test cach behaviour key manipul multipl time test stream reaction neg one valu stream



build link hot rod router configur set tcp keep aliv set receiv buffer size set send buffer size set tcp delay
return tcp keep aliv set return receiv buffer size return send buffer size return tcp delay set

configur authent endpoint set extern address node e address client connect set extern port node e port client connect configur whether enabl wait initi state transfer topolog cach see link state transfer configur builder initi transfer configur lock acquisit timeout topolog cach see link lock configur builder acquisit timeout default second configur replic timeout topolog cach see link sync configur builder timeout default second configur whether enabl state transfer topolog cach disabl link cluster loader use lazili retriev topolog inform node default true

set extern address node e address client connect set extern port node e port client connect configur whether enabl wait initi state transfer topolog cach see link state transfer configur builder initi transfer configur lock acquisit timeout topolog cach see link lock configur builder acquisit timeout default second configur replic timeout topolog cach see link sync configur builder timeout default second configur whether enabl state transfer topolog cach disabl link cluster loader use lazili retriev topolog inform node default true













creat handler htt htt upgrad get htt handler get htt handler



configur pipelin cleartext upgrad http htt configur pipelin tl npn negoti htt
wait handler add upgrad htt initi prefac handshak complet


wait sequenti time durat anticip respons creat associ anticip respons stream id link channel promis








acquir matcher instanc compon registri give cach object




acquir matcher instanc compon registri give cach object



return project pars queri repres dot path case refer field emb entiti e g code foo bar qaz return entiti type pars queri return origin entiti name give queri return filter creat walk pars tree











set list illeg import statement






see link extern object output serial format format entri array size int element object



creat new immut copi specifi collect wrap collect immut collect copi involv wrap key valu immut link map entri copi involv wrap link map entri immut link map entri copi involv convert collect immut list copi creat immut copi list creat new immut list contain union combin entri list wrap array immut list copi involv creat immut copi specifi map wrap map immut map copi involv convert collect immut set copi creat immut copi specifi set wrap set immut set copi involv creat immut copi properti whether collect type immut





handl link replic command node belong local site handl link replic command remot site

set list sequenc state interceptor code class return invoc accept code matcher next state list noth list exhaust set list sequenc state interceptor code class call invoc accept code matcher next state list noth list exhaust
cancel subset segment happen segment cancel whole task mark cancel complet signal send star stat transfer request sourc node termin abruptli regardless segment receiv use sourc node long aliv




get posit record without expir get posit null expir get record null expir

delet current index lock even anyth activ write index notifi writer way use care
return soon lock avail second
give configur defin index modif strategi go use
call bottom node call singl writer thread therefor write lock guard reader call intern root
appli configur



numer id use exclus storag affin infinispan includ equal hashcod implement differ index requir use differ name







receiv index updat oper search engin receiv transact index updat oper search engin signal current implement discard pend updat oper buffer deleg process replac index backend mostli use test diagnost
determin autoconfig enabl index configur whether index enabl fals default return index mode cach true index chang make local ignor remot chang use index share across cluster prevent redund index updat check index share current ram base index allow sort share p properti pass directli emb hibern search engin complet date document avail properti refer hibern search refer version use infinispan queri
p defin singl properti use multipl time defin need properti full set overridden link properti properti p properti pass directli emb hibern search engin complet date document avail properti refer hibern search refer version use infinispan queri enabl appli properti default configur base cach type disabl index enabl index enabl disabl index indic index mode true index chang make local ignor remot chang use index share across cluster prevent redund index updat p defin singl valu use multipl time defin need properti valu full set overridden link properti properti p properti pass directli emb hibern search engin complet date document avail properti refer hibern search refer version use infinispan queri p queri engin reli properti configur p properti pass directli emb hibern search engin complet date document avail properti refer hibern search refer version use infinispan queri

todo anistor index name ignor type get index index protobuf valu wrapper
recogn annot index default boolean argument default true argument deprec option string attribut default empti string analyz definit definit name index field index default true store default true deprec annot prefer field instead field name option string index default true analyz default true store default fals analyz analyz definit name sortabl field
field see end messag miss index default valu null none declar null valu replac special null token placehold lucen index null





return element present present without chang content neither give collect transform collect map give link map maker function give map well known type make shallow copi time transform valu type desir output type transform valu type do use give function
resolv infinispan configur file use hibern search classload return infinispan configur templat also overrid infinispan runtim classload one hibern search pars infinispan configur file might want overrid specifi j group configur file


shut cach creat factori bean alway return code true p set link cach contain cach contain use creat link cach cach instanc note strong mandatori properti




initi bean dispos bean shut emb cach manag instanc creat factori bean factori bean alway return code true



doc doc
default cach manag instanc link default cach manag initi default configur either produc link default emb configur bean bean manag provid user default cach manag overrid creat produc produc new default cach manag cach manag produc must scope link applic scop linkplain default default qualifi default emb cach configur overrid creat produc produc new default configur configur produc must scope linkplain depend depend linkplain default default qualifi

default remot cach manag overrid creat produc produc new default remot cach manag remot cach manag produc must scope link applic scop linkplain default default qualifi
lucen might tri seek po use illeg po valu ram directori teach posit cursor end previou chunk case





tri acquir lock invok multipl time owner link extend lock promis return link object invok lock free immedi acquir otherwis lock owner queue test lock lock owner return code true lock owner current lock owner queue forc deadlock check check lock acquir code fals return valu mean lock free sinc may queue lock owner tri releas lock hold code owner lock acquir wait time code owner link extend lock promis cancel code owner current lock owner lock releas next lock owner avail acquir lock code owner never tri acquir lock method noth test purpos
log inform messag indic infinispan subsystem activ log debug messag indic name cach contain instal log warn messag indic modul attribut cach element long valid log inform messag indic cach start log inform messag indic cach stop log debug messag start deploy cach servic log debug messag stop deploy cach servic log warn messag indic eager attribut transact element long valid log warn messag indic attribut element long valid log info messag instal implement servic log info messag instal implement servic log error request cach store load within minut log debug messag start deploy task log warn messag indic attribut element long valid log warn messag indic specifi topolog attribut transport element long valid log debug messag stop deploy task log warn messag state attribut deprec



creat except indic cach abort specifi number retri creat except indic attribut deprec creat except indic cach loader add one alreadi exist creat except indic cach store add one alreadi exist creat except indic unabl remov alia empti list alia creat except indic failur resolv outbound socket bind repres code bind paramet return messag fail oper messag indic resourc could pars creat except indic invalid cach loader creat except indic invalid cach store creat except indic invalid compat marshal creat except indic invalid cach store creat except indic executor properti invalid creat except indic incompat paramet size creat except indic incompat paramet type creat except indic oper paramet invalid creat except indic transport properti invalid messag indic resourc could locat creat except indic cach store add one alreadi exist creat except indic singleton resourc alreadi exist error messag throw subsystem can instanti give class

api introduc customis link configur builder overrid default configur alreadi avail class strong use link configur templat mode string set custo initi bean dispos bean shut cach creat factori bean factori bean alway return code true bean name awar properti p set link cach name name link cach cach creat explicit name set factori bean use link bean name string name name p set link emb cach manag emb cach manag use creat link cach cach instanc note strong mandatori properti
initi bean factori bean alway return true bean name awar properti p set link cach name name link cach cach creat explicit name set factori bean use link bean name string name name p set link remot cach manag remot cach manag use creat link cach cach instanc note strong mandatori properti





method overrid wild fli signatur must chang w global configur set ignor

initi bean dispos bean link remot cach manag code stop remot cach manag creat factori factori bean alway return code true



return request payload return accept header valu return author header valu return cach name return content type header valu return netti context return match header valu return modifi sinc header valu return none match header valu return unmodifi sinc header valu return whether client wish return extend header return key return idl time second header valu return netti context return netti request return htt stream id return live second header valu return whether request do asynchron creat new link infinispan request base netti type

creat link infinispan respons error add code header add cach control header add charset add cluster node name header add cluster primari owner header add cluster server address header add content binari array add content text convert intern ut add content type header add eta add code expir header add http version header creat link infinispan respons repli specif link infinispan request check whether keep aliv type respons add code header add idl time second header add statu code render link full http respons object
get id process listen use window note method close input stream



avoid pull test util plethora depend




doc
doc




use build link byte buffer object use build link marshal entri object




get bean manag use inject method get inject paramet method invok method caus paramet inject accord cdi type safe resolut rule invok method call paramet redefin paramet allow caller overrid default valu obtain via cdi type safe resolv











link int cach stream match int predic except int predic must also implement serializ p compil pick overload lambda paramet make serializ link int cach stream match int predic except int predic must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc link int cach stream supplier obj int consum bi consum except argument must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc doc link int cach stream int predic except int predic must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc link int cach stream map int function except int function must also implement serializ p compil pick overload lambda paramet make serializ link int cach stream int consum except take link obj int consum provid access underli link cach back stream p note cach awar interfac support inject use method cach provid consum directli link int cach stream int consum except int consum must also implement serializ p compil pick overload lambda paramet make serializ link int cach stream obj int consum except bi consum must also implement serializ doc doc link int cach stream int unari oper except int unari oper must also implement serializ p compil pick overload lambda paramet make serializ doc link int cach stream doubl int doubl function except int int function must also implement serializ p compil pick overload lambda paramet make serializ doc link int cach stream long int long function except int long function must also implement serializ p compil pick overload lambda paramet make serializ doc link int cach stream obj int function except int function must also implement serializ p compil pick overload lambda paramet make serializ link int cach stream match int predic except int predic must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc link int cach stream map int function except int function must also implement serializ p compil pick overload lambda paramet make serializ link int cach stream int binari oper except int binari oper must also implement serializ p compil pick overload lambda paramet make serializ link int cach stream int binari oper except int binari oper must also implement serializ p compil pick overload lambda paramet make serializ doc doc doc doc doc doc doc


insert give interceptor specifi posit chain base index add new interceptor list interceptor give type add new interceptor list interceptor give type append end return unmofi list interceptor sequenc first chain null empti list return check whether chain contain suppli interceptor instanc return interceptor extend give command interceptor return interceptor fulli qualifi name class equal suppli class name walk command interceptor chain receiv ctx pass note reus context multipl invoc allow howev two invoc must overlap call code invok ctx command interceptor allow interceptor need invok new command entir chain must first copi invoc context link invoc context remov interceptor give postion remov occur suppli interceptor type chain replac exist interceptor give type interceptor chain new interceptor instanc pass paramet mainli use unit test replac interceptor chain start point pass return number interceptor chain


dictat custom interceptor appear immedi specifi interceptor specifi interceptor find interceptor chain link cach configur except throw cach start dictat custom interceptor appear immedi specifi interceptor specifi interceptor find interceptor chain link cach configur except throw cach start clear interceptor properti specifi posit interceptor chain place new interceptor index start go number interceptor give configur link illeg argument except throw index less great maximum number interceptor chain instanc new custom interceptor add configur warn use configur multipl cach interceptor instanc share corrupt interceptor stack use link class instead class new custom interceptor add configur specifi posit denot link posit enumer place new interceptor set interceptor properti


set list sequenc state interceptor code class return invoc accept code matcher next state list noth list exhaust set list sequenc state interceptor code class call todo add invok next invok next





handl inject compon variou depend intermedi oper perform actuali intermedi oper return result stream


use entri lifespan determin entri due expir reincarn entri essenti reset timestamp entri current time reincarn entri essenti reset timestamp entri current time creat represent entri link intern cach valu main purpos provid represent refer key use situat key alreadi know store elsewher make serial deseri effici note use optim memori overhead sinc save addit refer key singl object refer warrant cost construct intern cach valu make sens marshal involv sinc cost marshal key sidestep use intern cach valu key alreadi updat access timestamp instanc updat access timestamp instanc specifi time
bootstrap factori configur compon registri implement clone configur pass use
remov privat cach specifi set cach name retriev name intern cach return whether particular intern cach specif flag return whether cach intern e regist use link intern cach string configur method return whether cach privat e regist use link intern cach string configur enum set flag method without link flag use flag regist intern cach cach mark privat volatil regist intern cach specifi flag unregist intern cach
synchron prevent user regist configur time


creat copi cach entri synchron serial copi process link intern cach entri metadata requir reader entri get consist snapshot valu red creat new link intern cach entri instanc base version inform reflect link cach entri instanc pass key valu pass explicitli creat new link intern cach entri instanc deprec metadata object retriev remot creat new link intern cach entri instanc creat new link intern cach entri instanc creat new link intern cach entri instanc creat new link intern cach entri instanc base key valu version inform reflect link cach entri instanc pass creat entri creat link intern cach valu base link intern cach entri pass retriev link intern cach valu provid link invoc context link intern cach entri exist otherwis creat link intern cach entri context link cach entri return valu similar link intern cach entri metadata also updat link intern cach entri valu intern cach entri return mortal cach entri return instanc need reincarn tod adjust javadoc updat exist link intern cach entri new metadata may result new link intern cach entri instanc creat differ link intern cach entri implement may appropri suit new metadata valu one consid link intern cach entri pass paramet pass valu refer
tod need indic whether entir metadata object need store check do avoid keep entir metadata object around lifespan idl time store inform need store e version metadata object emb one keep entir metadata object around









add code interv code interv tree return node possibl duplic find exist node return instead add new one compar two interv check code interv tree interv remov interv find interv contain give valu





perform invalid specifi entri
return true write caus invalid perform node formal put k happen node ch b invalid messag might multicast b cluster member includ method return true node invok


attempt retriev object cach attempt cach object load databas explicitli specifi put behavior
use creat subsystem descript









track give key lock invoc context clone invoc context return class loader associ invoc return behalf lock acquir return set key lock write return true lock test alreadi hold current scope fals otherwis return true call perform context transact fals otherwis return true call origin local fals result remot rpc set class loader associ invoc set object use lock owner
remov store invoc context call thread must call thread exist interceptor chain return link invoc context current associ call thread import implement method like expens involv thread local recommend cach result method rather repeat call associ invoc context paramet call thread
creat link clear invoc context link clear invoc context origin local return true tx scope return link tx invoc context otherwis return link non tx invoc context either way context mark local e link invoc context origin local true creat invoc context creat link non tx invoc context link non tx invoc context origin local return true return link non tx invoc context whose link non tx invoc context origin local flag true link remot invoc context address return flag context command flag set return link remot tx invoc context creat link non tx invoc context link non tx invoc context origin local return true return link local tx invoc context
cach stoppin invoc transact invoc transact other ongo one allow method return true circumst meet otherwis return fals





stage complet success invok code function return either result







pa url protocol support karaf method use one unsupport protocol requir ur l resolv outsid karaf bundl provid stream bundl test packag split across sever maven modul option repackag expos singl bundl set system variabl use insid persist xml use pax url need know locat local maven repo resolv mvn ur l run test ci machin team citi pass custom local repo locat use dmaven isol build target pax url awar custom repo use tri load default local repo locat option pass locat specifi use dmaven appropri system properti contain wrap specifi test jar bundl fragment attach specifi host bundl host bundl must one export packag contain test jar run test uberjar default























doc
fetch next avail entri satisfi filter underli iter doc doc doc






run task give link cach provid
creat canon name manag bean access cach trough hr client confirm exist insert datum attempt access trough j cach api retriev datum test manag command j cach ap br fix pend isp test statist command j cach api br br fix pend isp test whether cach find cach name list j cach ap fix pend br br fix pend isp




doc doc






retriev j group channel pass properti use configur channel
remov failur detect relat protocol give j group stack
doc doc
log inform messag indic j group subsystem activ messag indic resourc could locat messag indic file could pars


format string use specifi pattern get namespac uri schema version indic whether version schema great equal version specifi schema





doc

per c cl use cm cl initi transport global cach configur properti send command multipl target send command unless code order tota send command entir cluster send command unless code order tota




set fals statist gather enabl runtim perform optim
set fals statist gather enabl runtim perform optim disabl statist gather report enabl statist gather report enabl disabl statist gather report

creat new code properti instanc properti code properti start give











use specifi link connect factori handl connect databas use specifi link connect factori configur builder configur connect databas configur connect pool use jdbc cach store handl connect databas configur datum sourc use jdbc cach store handl connect databas configur jdbc cach store use singl connect databas

method public static reus custom cach configur parser method public static reus custom cach configur parser



class link key string mapper use map key string suitabl storag databas tabl default link default two way key string mapper class name link key string mapper use map key string suitabl storag databas tabl default link default two way key string mapper allow configur paramet column name type







isp channel protocol bean test regist isp


return whether interceptor statist captur reset interceptor cach statist enabl interceptor cach statist true interceptor captur statist make avail mbean
return whether interceptor statist captur reset statist gather overridden meaning
build jmx domain name look link bean server instanc base configur paramet regist give dynam jmx bean unregist bean locat give link object name unregist mbean whose object name match give filter

















creat ldap server start return instanc return ldap server instanc start return instanc infer configur stack trace give instanc link ldap server without start get run ldap server instanc see link ldap server creat ldap server directori servic

must return uniqu string suppli key support key type
return key distribut node suppli key return key distribut cluster node identifi address check weather servic start
creat key affin servic use specifi cach gener key use specifi gener


invok lock avail
add listen link lock promis p listen invok link lock promis avail return true info check link key awar lock listen






obtain segment key must initi partition also use inject access global compon method call inject method need infinispan safe publish instanc initi





handl inject compon variou intermedi oper invok key awar oper desir without rehash enabl invok key rehash awar oper desir method invok local key track oper serial new node
get key transform handler instanc use suppli cach retriev link transform instanc key key link transform transform regist key class null return regist link transform suppli key class




filter entri pass subsequ convert valu new valu return valu null symbol valu pass filter ensur convers return null want entri return
















entri cach store directli main cach fetch remot distribut node trace see remot get key key cach remot retriev entri key key number hit increas cach issu get hit still cach entri increas number store number entri
determin often cleanup thread run clean intern log requestor specif key p determin whether multicast web unicast use perform invalid p default multicast use p threshold set unicast alway use threshold set multicast alway use maximum lifespan entri place cach default minut
often requestor map clean stale item often requestor map clean stale item p determin whether multicast web unicast use perform invalid p default multicast use p threshold set unicast alway use threshold set multicast alway use maximum lifespan entri place cach maximum lifespan entri place cach


record request cach anoth node regist give write synchron notifi whenev remot valu look give key synchron long need signal user unregist use link manag write synchron object write synchron unregist give write synchron present note synchron unregist match use instanc equal due possibl concurr usag write synchron





attempt updat set valu updat mark skip instead set valu releas blocker null valu provid run updat alert waiter null give attempt mark updat retriev valu actual updat cach skip success mean current run mean consist write wait updat complet sinc updat acquir lock



















invok compon start invok compon stop

dynam index uninvert deprec use caus warn log encourag person use annot sortabl field default hibern search throw except rather log warn opt lenient default infinispan use case match behaviour previou version hibern search regist search interceptor cach get start check index class declar user realli index







stop cancel queue task


add listen compon typic listen would need annot link listen contain method annot appropri otherwis listen regist see link listen annot inform remov listen compon
defin whether annot listen cluster import cluster listen notifi cach entri remov cach entri creat set true entir exist state within cluster evalu exist match valu cach entri creat event trigger listen registr support listen also link listen p use distribut cluster cach possibl retriev new event initi transfer complet handl sinc new event queue segment belong complet iter also help reduc memori strain sinc distribut cluster listen need eventu retriev valu cach return type observ level listen defin specifi whether event fire primari datum owner affect key node see updat p note valu ignor link listen true specifi whether callback class annot annot happen synchron caller thread asynchron use separ thread default tt true

listen instanc notifi event invok event







use creat subsystem descript

use creat subsystem descript


method inject cach consum note support consum time




method inject cach consum note support consum time



method inject cach consum note support consum time

doc doc
method inject cach consum note support consum time










stream oper key awar oper without rehash enabl stream oper non key awar oper without rehash enabl stream oper key awar oper rehash enabl stream oper non key awar oper rehash enabl
need listen datum rehash event case datum move iter rehash occur caus node lose segment someth iter stream look valu segment can guarante datum see correctli must therefor suspect node send back owner
initi cach shutdown specifi cach confirm local cach code name finish receiv new datum topolog code id coordin chang state transfer make rebal rpc async send respons differ command retriev avail state cach return local uuid node global state persist enabl uuid save reus across restart retriev rebalanc statu specifi cach handl local oper relat grace shut cach perform state transfer updat stabl cach topolog mostli need backup new coordin recov stabl topolog cluster recov current topolog inform run cach return coordin todo add new class hold cach join info cach topolog updat current pend consist hash without transfer state check whether rebalanc enabl specifi cach check whether rebalanc enabl entir cluster check cach defin code name use total order compon run code name defin return code fals forward join request coordin forward leav request coordin updat avail state cach entir cluster enabl disabl rebalanc specifi cach enabl disabl rebalanc entir cluster

updat cach topolog local cach statu pass cach topolog handler call coordin arbitrari valu need start option global state manag j group transport start call lock run compon access thread need stop j group transport synchron requir prevent topolog updat prepar statu respons
calcul list node need send base node prepar send send id param return back current id differ id transact link topolog id method return reunion link remot lock acquir discard member leav replic use return oper happen result back datum remot site set commit rollback send transact set prepar send transact


per jta spec xa resourc call enlist method also set xid local transact






forc deadlock check exist lock


invok lock avail
retriev owner lock code key test code key lock attempt lock code key lock alreadi hold code owner p method return immedi link lock promis link lock promis use invok check lock realli acquir invok link lock promis link object object long time unit multipl key p ensur deadlock method invok differ lock owner set subset key test code owner own lock code key print lock inform lock releas lock code key code owner lock owner p note method b unlock lock key owner link object object multipl key p note method b unlock lock key owner code lock key key lock owner p note method b unlock lock key owner


add link lock listen invok lock avail p code acquir paramet indic lock acquir code true time code fals test lock avail p lock consid avail success acquir timeout expir case return code true link lock never block lock key key associ promis p method block lock avail timeout expir

return lock stream consist element stream match give predic p filter lock acquir give key way filter see valu consum give link lock stream predic except predic must also implement serializ p compil pick overload lambda paramet make serializ perform action element stream primari owner give key p method perform hold exclus lock give entri releas consum complet entri directli modifi via link map entri valu object method link map object object invok p use pessimist transact lock hold use transact thu user start transact consum also must complet return transact start consum do share lock use obtain key p rememb use explicit transact async method must complet consum return guarante oper within scope lock give key failur lead possibl inconsist perform oper without proper lock p method provid cach may work expect includ link advanc cach extern read object object link advanc cach object link advanc cach collect link advanc cach group string method use insid consum cach throw link illeg state except due possibl interact transact use command link lock stream bi consum except bi consum must also implement serializ p compil pick overload lambda paramet make serializ method support use link lock stream method support use link lock stream method support use link lock stream set timeout acquisit lock entri
method overridden subclass chain method return correct implement
concurr level lock contain adjust valu accord number concurr thread interact infinispan similar level tune paramet see jd concurr hash map cach isol level infinispan support rea commit repeatabl read isol level see isol isol discuss isol level maximum time attempt particular lock acquisit option appli cach cluster local set true default valu cach keep datum consist case concurr updat cluster cach come cost addit rp expect applic write datum concurr disabl flag increas perform true pool share lock maintain entri need lock otherwis lock creat per entri cach lock stripe help control memori footprint may reduc concurr system set applic case repeatabl rea write skew check set fals writer commit time discov work entri underli entri differ version work entri overwrit underli entri true version conflict know throw except
concurr level lock contain adjust valu accord number concurr thread interact infinispan similar level tune paramet see jd concurr hash map cach isol level infinispan support rea commit repeatabl read isol level see isol isol discuss isol level maximum time attempt particular lock acquisit maximum time attempt particular lock acquisit true pool share lock maintain entri need lock otherwis lock creat per entri cach lock stripe help control memori footprint may reduc concurr system set applic case repeatabl rea write skew check set fals writer commit time discov work entri underli entri differ version work entri overwrit underli entri true version conflict know throw except



id log trac isp







link long cach stream match long predic except long predic must also implement serializ p method use automat lambda prevent user manual cast serializ lambda link long cach stream match long predic except long predic must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc doc link long cach stream supplier obj long consum bi consum except argument must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc doc doc doc link long cach stream long predic except long predic must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc doc doc link long cach stream map long function except long function must also implement serializ p method use automat lambda prevent user manual cast serializ lambda link long cach stream long consum except take link obj long consum provid access underli link cach back stream p note cach awar interfac support inject use method cach provid consum directli link long cach stream long consum except long consum must also implement serializ p method use automat lambda prevent user manual cast serializ lambda link long cach stream obj long consum except bi consum must also implement serializ doc doc link long cach stream long unari oper except long unari oper must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc link long cach stream doubl long doubl function except long long function must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc link long cach stream int long int function except long int function must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc link long cach stream obj long function except long function must also implement serializ p method use automat lambda prevent user manual cast serializ lambda link long cach stream match long predic except long predic must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc doc doc link long cach stream map long function except long function must also implement serializ p method use automat lambda prevent user manual cast serializ lambda link long cach stream long binari oper except long binari oper must also implement serializ p method use automat lambda prevent user manual cast serializ lambda link long cach stream long binari oper except long binari oper must also implement serializ p method use automat lambda prevent user manual cast serializ lambda doc doc doc doc doc doc doc






boolean queri static reconfigur limit number claus node abl bypass limit need assum limit somehow relax point time need appli configur node

look directori adapt alreadi know attempt initi index attempt open lucen f directori specifi path might directori store yet directori map make sure initi serv method link key filter advanc cach loader cach loader task executor boolean boolean

method perform invers transform key use lucen directori string object implement strongli coupl string method key type
index affin enabl return segment id current index bind segment size larg number byte separ segment creat particular size locat root directori index
index store affin base set affin id index instanc ignor use index affin featur segment file larg amount byte segment split multipl chunk size path root directori contain index index load immedi subdirectori specifi path subdirectori name index name must match name paramet directori constructor



return project pars queri repres path field emb entiti return creat lucen queri return option lucen sort specif return entiti metadata usual class resolv origin entiti name return origin entiti name queri










collect document index count document read term field











retriev link bean server instanc
doc

make intern copi entri updat return whether entri mark expir check entri load cach oppos gener applic use command mostli purpos write skew check replac link cach transact read object reset current valu entri valu commmand execut first time invok command retri mark alreadi commit link datum contain mark entri expir special form remov mark entri load cach oppos gener applic use command mostli purpos write skew check replac link cach transact read key object updat previou valu entri set current valu invok command successfuli finish will retri valu updat extern sourc








doc doc doc doc doc doc doc doc doc doc doc doc doc


doc doc doc doc
























marshal array p method support code null code array link array object object output special byte array marshal link collect p method support code null code collect marshal link collect p method support code null code collect marshal collect integ marshal code map code object output p code null map support marshal code map code object output p code null map support special marshal implement integ p method support neg valu handl link nul valu mean real valu lose link nul valu return link size object input p integ marshal variabl length byte neg valu alway marshal byte marshal link string p behavior link object output ut string check code null code string never code null good use link object output ut string marshal link uui send lest signific bit p method support code null code null set link true unmarshal array link array object input array builder special byte array p link array builder necessari unmarsh link collect unmarsh link collect link collect object input collect builder p use size link collect need construct unmarshal collect integ unmarshal link map p marshal map link null link map builder invok unmarshal link map p marshal map link null link map builder invok unmarshal integ unmarshal link string unmarshal link uui


clear cach marshal type hint get serial form size predictor particular type return whether hint whether particular type marshal avail method use avoid attempt marshal type hint type alreadi calcul return whether type serial order type consid marshal type must mark marshal use link marshal class boolean method earli pass true paramet type yet mark marshal method return fals mark particular type marshal marshal
return key link key byte unmarshal return key serial format return valu link key byte unmarshal return valu serial format




return marshal payload size predictor particular type accur predict type serial payload size help avoid unnecessari copi speed applic perform method check whether give object marshal per rule marshal unmarshal object byte array unmarshal object specif portion byte array method return instanc link byte buffer allow direct access byte array minim array copi marshal object byte array marshal object byte array size paramet hint pass allow effici size byte array attempt marshal object accur estim less like byte need resiz hold byte stream gener marshal object





regist proto file marshal







obtain object filter instanc capabl test singl filter condit test give instanc subscrib filter notifi callback regist instanc instanc type code delta paramet callback code fals test two instanc actual snapshot instanc subscrib filter notifi callback regist instanc instanc type code delta paramet callback code true
instanc match filter
get maven properti defin project


convert text link media type return link output printer associ link media type




return delet foun depend whether key exist return valu key return valu key return server time retriev via stat command time stat return







transform lifespan pass second millisecond follow rule p lifespan big number second day consid unix time convert millisecond substract current time result return p otherwis consid number second return millisecond unit







use link protocol server configur builder cach name string instead






return stream long variou memori locat link memori address hash stream except memori address also clear set

address pointer count configur evict type size evict disabl storag type use datum contain
configur set use defin mani address pointer number round next power two help perform address pointer less collis improv perform read write oper set evict type either ul count entri evict number entri exceed link size long memori entri evict approxim combin size valu exceed link size long cach size guarante exceed upper limit specifi max entri howev due natur evict unlik ever exactli maximum number entri specifi defin maximum size evict occur see link type evict type detail size interpret set link storag type determin datum store datum contain











return valu meta paramet

construct collect link meta param instanc multipl instanc link meta param present last valu consid sinc one instanc per type link meta param collect


transform string properti name path intern represent path might string base attribut id integ protobuf case
get metadata cach entri set metadata cach entri
get metadata command set metadata command













appli version sourc metadata target metadata version target metadata method use scenario sourc version inform must keep around e write skew read metadata cach store set code metadata cach entri entri alreadi version copi version new metadata

definit metric
execut specifi metric specifi context




expect extern string list id class












deleg mockito invoc target object return mock instead target object use code mockito work mock class fluent interfac






return valu node enum valu null node undefin return valu node enum valu specifi default valu node undefin return valu node float null node undefin return valu node string specifi default valu node undefin return valu node modul identifi null node undefin return valu node modul identifi specifi default node undefin return valu node string null node undefin return valu node string specifi default valu node undefin




construct initi link replic command base command id construct initi link cach rpc command base command id provid map command d command type command handl command factori instanc unmarshal request command d dispatch implement

initi command construct use link modul command factori stream necessari compon



retriev iter contain metadata file finder declar modul




call link base async interceptor next invoc context visit command sequenc p stop one throw except return invoc stage except success return code stage code stage except skip return code stage



return builder hot rod return builder re return builder rout tabl
get intern link router implement give protocol start router stop router
get hot rod configur get rest configur get link rout tabl
return assembl configur

asynchron method return link boolean tru multimap cach contain pair asynchron method return link boolean tru multimap cach contain key asynchron method return link boolean tru multimap cach contain valu key asynchron method return view collect valu associ key multimap cach chang retriev collect will chang valu multimap cach method return empti collect mean key find retriev cach entri correspond specif key multimap cach asynchron method put pair multimap cach ul multimap cach support duplic valu alway add multimap cach support duplic valu exist key noth done asynchron method remov entri associ key multimap cach exist asynchron method remov pair multimap cach exist return true pair remov key p ul case duplic b support b one pair remov exist case duplic support b pair remov valu remain remov call empti whole entri remov asynchron method remov everi valu match link predic p method b block use explicit transact context overload method link multimap cach predic link serializ predic compil pick method make give predic link serializ return number pair multimap cach return distinct number key p method b block explicit transact context p link complet futur multimap support duplic key k b k b depend configur p return duplic support multimap cach
defin name multimap cach configur use provid configur cach alreadi configur either declarit programmat method throw link cach configur except currenli multimap cach give name foo also access regular cach name foo retriev name multimap cach system


hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash byte array effici
hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash valu use bit variant murmur hash hash byte array effici
tod initi tod initi
mutat view
need occupi extern id limit set option














construct compon


get uri namespac
recurs pars current element xml stream use appropri link configur parser depend element namespac










initi netti channel














add child node give link fqn current node return newli creat node child exist return child node anyway guarante return node link fqn pass rel current node new child node absolut fqn calcul follow pre new fqn fqn f see link fqn oper constructor remov map node datum map return valu node map specifi key return code null node contain map key return child node return immut set child node return immut set child node name return map contain datum link node return link fqn repres locat link node cach structur link fqn return absolut return link set contain datum link node return parent node root node method return code return true child node denot object name pass exist return true child node denot rel link fqn pass exist test node refer still valid node refer may becom invalid remov invalid move either local remot node invalid fetch cach valid parent node oper invalid node throw link node valid except associ specifi valu specifi key node node previous contain map key old valu replac specifi valu copi map specifi map node map datum exist exist key overwritten key new map behavior equival pre node node map entri set key valu specifi key alreadi associ valu associ give valu return object occupi space null equival call pre key return node put key valu els return node get key except atom remov map key node present return valu node previous associ key code null node contain map key remov child node specifi give name remov child node specifi give rel link fqn wish remov child base absolut link fqn use link tree cach interfac instead replac entri key current map valu act pre key return node put key valu els return null except atom replac entri key current map give valu act pre valu node put key valu return true els return fals except atom similar link map except remov entri exist datum map first note happen atom singl lock analog link datum follow link map transact
multipl thread might call method time get call remot cach upon receiv toplog updat among caller
multipl thread might call method time get call reemot cach upon receiv toplog updat among caller





















assum function run primari owner give segment





anyth return true anyth















alway return liter null


transport

test object instanc match filter compar correspond claus fulli qualifi entiti type name accept filter return paramet name empti set paramet array separ path name project field code null otherwis array sort specif defin code null otherwis creat new object filter base current one give paramet


convert give properti valu usual string represent come right user queri string type expect queri backend return give valu convert type give properti determin via field bridg properti lookup type name return metadata repres return type primit properti test attribut path contain repeat attribut



clear memori lookup cach datum invok entri creat new address fulli address write lock alreadi acquir give segment key map invok entri remov read valu method complet memori address may free write lock alreadi acquir give segment key map invok entri replac new one old new address address howev address may free method return write lock alreadi acquir give segment key map invok entri success retriev read lock alreadi acquir give segment key map perform actual put oper put new address memori lookup write lock give key b must hold call method perform actual remov oper remov new address memori lookup write lock give key b must hold call method
creat heap entri use provid key valu metadata return whether give key byte key key store entri give address creat entri heap pointer return code address return key given address return address next link pointer one bucket one return mani byte memori address locat use assum link intern cach entri call updat next pointer index collis occur requir link list within entri
creat entri first byte alway reserv futur refer anoth entri assum address point entri exclud pointer refer begin assum address contain link pointer begin


alloc new chunk memori size give length dealloc memori alloc give address dealloc memori give address assum give size

configur site use suppli configur determin take site offlin also trigger state reset


handl websocket channel oper
definit oper
execut specifi oper specifi context


creat composit oper use specifi oper step creat composit oper use specifi oper step creat describ oper use specifi address creat oper use specifi address name creat oper use specifi address name creat oper use specifi address namem valu return attribut name specifi oper return attribut valu specifi oper return name specifi oper return address specifi oper
construct fault toler ping request oper capabl deal node find first node success node respond ping construct ping request direct particular node
todo anistor must also valid argument type compat oper
prepar logic appli optimist transact henc present local transact object











load class break first find match tod throw differ except warn multipl class find name collis happen os gi load resourc break first find match tod throw differ except warn multipl resourc find name collis happen os gi load resourc return enumer note sinc enumer cach result

set list sequenc state interceptor code class return invoc accept code matcher next state list noth list exhaust set list sequenc state interceptor code class call invoc accept code matcher next state list noth list exhaust
cancel whole task cancel segment segment get cancel whole task cancel todo anistor check thread interrupt statu loop implement fast cancel

convert specif valu desir output format convert valu cach desir output format






paramet valu paramet identifi paramet must differ id numer id make flexibl enough store collect take low resourc array

creat instanc link key valu filter convert

return name paramet map set valu name paramet set multipl name paramet paramet name empti code null paramet valu must code null


build valid
callback allow default paramet valu would inject accord cdi type safe resolut rule overrid

add paramet return new paramet collect check whether paramet pass alreadi present current paramet method use optimis decis whether paramet collect need updat retriev param give identifi caller expect know exact type paramet return assumpt possibl indic link param implement come infinispan bridg method flag param provid effici check

get except report attribut give name alreadi declar scope get except report element give type name alreadi declar scope get except report invalid xml attribut valu get except report miss requir xml attribut get except report miss requir xml child element read element contain singl boolean attribut read element contain singl string attribut requir name attribut return valu order check current element attribut throw link xml stream except one find consum remaind current element throw link xml stream except contain child element requir current element singl attribut give name get except report unexpect xml attribut get except report unexpect xml attribut get except report unexpect xml element get except report unexpect end tag xml element

method public static reus custom cach configur parser
method public static reus custom cach configur parser






convert time represent millisecond







add partial commit transact transact commit one phase regist sure transact commit success affect node add partial commit transact transact commit second phase regist sure transact commit success affect node add partial abort transact transact regist sure abort happen success affect node check transact abort origin leav cluster case possibl abort partit handl enabl origin leav grace transact complet partit heal test use remov updat test check transact resourc exampl lock releas transact resourc can releas transact partial commit notifi link partit handl manag cach topolog updat detect partit merg tri complet partial complet transact



mode current cluster determin oper run cluster

skip passiv cach stop








creat new probe reus default pax exam reus default one mean test address previou run present probe header extend class depend avail current probe bundl class def find except occur





peak valu give key note updat expir evict inform perform map unlik get method
invok link pend lock promis readi
wait transact old topolog id complet may lock key code key acquir wait transact old topolog id complet may lock code key acquir link pend transact key tx invoc context object long time unit p multipl invoc transact return link pend lock promis cleanup purpos link pend transact key tx invoc context object long time unit must invok afterward link pend transact key tx invoc context collect long time unit p multipl invoc transact return link pend lock promis cleanup purpos link pend transact key tx invoc context collect long time unit must invok afterward
add listen promis p listen must invok link readi return code true code listen immedi invok invok thread


handl link cach rpc command node




loop individu cach loader config check persist state set true datum write cach store evict memori phenomenon know next time datum request mean datum bring back memori remov persist store give abil disk similar swap oper system br br fals cach store contain copi content memori write cach result cach store write essenti give configur loop individu cach loader config check preload set
add cluster cach loader add singl file cach store add cach loader use specifi builder class build configur add cach loader use specifi builder instanc build configur remov configur store builder true datum write cach store evict memori phenomenon know next time datum request mean datum bring back memori remov persist store give abil disk similar swap oper system br br fals cach store contain copi content memori write cach result cach store write essenti give configur


invok link advanc cach writer store alo perform commit oper provid transact tx store remov entri underli store singl batch mark give storag disabl return store one configur fetch persist state null none exist load datum extern store memori cach startup perform prepar phase pc tx store remov expir entri exist storag perform rollback oper provid transact tx store write entri underli store singl batch write store transact store consid transact follow true p ul store implement link transact cach writer store configur transact cach transact mode transactiona






add map link address link persist uui provid remap oper translat address persistentuuid retriev link address node give link persist uui retriev link persist uui node give link address return list link persist uui suppli link address provid remap oper translat persistentuuid address remov address map specifi link address remov address map specifi link persist uui









protect order demonstr direct field access use instead method access









gener xml report give know test result reset member variabl next test




option paramet defin order method call default

callback invok everi xx method defin tx command read command




check two predic ident opposit remov duplic occurr predic conjunct disjunct also detect remov tautolog contradict follow translat rule appli ul x x x x x x x x x x x x x x true tautolog x x fals contradict

expect member stabl member know split brain heal occur howev topolog size know new coordin


tod complet align prefetch



set true key touch transact wrap origin one discard
prepar transact advanc transact prepar state rollback transact fail prepar start transact

handler


return leav child valu express predic attach link valu expr alway link properti valu expr tree normal constant express remov
return unsaf suitabl use parti packag replac simpl call unsaf unsaf integr jdk

resolv princip name e g user name base session
map princip name set role name princip name depend sourc princip exampl ldap princip might use distinguish name format mapper return null recogn princip set context link princip role mapper
return link emb cach manag role mapper instanti






suppli custom programmat map












obtain link serial context associ give remot cach manag




todo anistor miss tag need fire default valu defin proto schema null admit null miss messag need fire null end nest level bt seem like good includ protostream featur



start need method must invok cach use protobuf obtain cach lazili obtain protobuf metadata manag impl instanc associ cach manag defin configur intern cach
preload need copi cach mod local flag put command also need remov ski cach store flag exist error key updat
get error messag caus pars link etc associ proto schema file get full name file error get content regist proto schema file get full name regist schema file regist proto schema file syntax semant error proto error key creat underli cach valu actual error messag error messag retriev use link file error string name method list offend file retriev use link file error method regist multipl proto schema file syntax semant error proto error key creat underli cach offend file valu actual error messag error messag retriev use link file error string name method list offend file retriev use link file error method unregist proto schema file unregist multipl proto schema file







doc




return configur use start server get decod protocol server decod respons read client request method return null get encod protocol server encod respons write back common header respons back client method return null server encod find exampl server encod memcach server return pipelin factori start server back give cach manag correspond configur stop server


indic link admin oper handler use handl admin oper build configur object specifi cach use default cach protocol specifi host ip address server listen specifi maximum time connect client keep open without activ set cach ignor specifi custom name server order easili distinguish server e g via jm default empti string specifi port server listen set size receiv buffer set size send buffer configur ssl indic whether transport implement start affect tcp nodelay tcp stack default enabl set number worker thread






return appropri servic name default stack return appropri servic name specifi stack












acquir lock give call thread right put datum cach give key p call method return code true alway match call link put load lock object lock besid call constructor call test mock valid invalid link pend put session implementor object long previous regist pend put disabl registr ensur subsequ call link put load lock session implementor object long return code fals p method block concurr thread link put load lock session implementor object long acquir load lock give key releas lock allow caller certain load execut method return possibl cach stale datum transact complet link invalid key object object need call invalid link pend put session implementor object long previous regist pend put ensur subsequ call link put load lock session implementor object long return code fals p method block concurr thread link put load lock session implementor object long acquir load lock key releas lock allow caller certain load execut method return possibl cach stale datum call transact complet allow cach entri possibl method call without previou invoc link invalid key object object call region invalid finish privat can use session impl string concurr notifi valid expect databas read follow subsequ link put load lock session implementor object long call occur intent method would call follow cach miss wherein expect databas read plu cach put occur call method allow valid treat subsequ put load lock databas read occur method invok allow valid compar timestamp call timestamp subsequ remov notif releas lock previous obtain call link put load lock session implementor object long method call test remov exist valid cach structur order replac new one




non transact cach support concurr write default command forward node e g command execut node key lock node b command send main owner b b tri acquir lock key own forward command owner well last stage command forward flag set true





get total number result match queri ignor pagin result result todo anistor probabl long return result search list
id queri box get index valu correct document extractor kill queri document extractor regist queri document extractor lazili load result
build queri object build queri immut except name paramet
get cach queri object key use lookup object pair contain queri string discrimin valu usual class cach queri object option link list link field accumul obtain cach start lazili need creat configur intern queri cach

build lucen index queri make new filter pars result normal queri filter pars result suppos swap occurr properti path give express tree claus new properti path accord map find code column map



creat queri base ickl queri string creat queri builder give entiti type creat queri builder give entiti type creat condit give attribut path complet later use creat condit give attribut path complet later use creat negat condit complet later use creat negat condit base give negat group
use executor async oper set know class might index index manag clear command index manag comput command index manag comput command index manag comput absent command index manag comput absent command index manag put key valu command index manag put map command index manag read write key command index manag remov command index manag replac command remov entri know index method call datum need remov lucen remov entri index key custom work creation index case remot origin transact chanc visit singl command receiv batch need snapshot type rout cleanup command correct index note need visit commit command index context regist transact sync
run command retri suspect except throw start intern cach lazili



pars give queri string render give sourc queri output queri invok link queri render deleg travers give queri tree resolv element give sourc queri output queri invok link queri resolv deleg travers give queri tree
set properti path repres one properti selec group b claus give queri set sort direct either asc desc current properti properti previous specifi link properti path properti path
add criterion implement equal predic comparison predic could constant subfunct random type paramet tree node detail current tree render pass text figur option see rule name set properti path repres one properti selec group b claus give queri add field sort criterion

notifi deleg pars properti path select complet






remov one handler dequ freez dequ element

method call mark transfer complet key manual process return entri rais event manual mark indic creat event occur see valu call listen event gener possibl queue queue caller take appropri action manual fire invoc invok key actual process datum way handler know keep new event come iter invok key success process tell handler key do need tell handler complet iter do depend implement could also fire queu event remain














return full uri give server number cach name key key null key part ommit normal get without assert caller decid case request fail



return key cach entri event return valu cach entri event return valu cach entri event whether old valu avail doc
tod initi doc statist also automat clear intern counter overflow mean time execut get cach time take load entri miss includ get time mean time execut put mean time execut remov total number request cach equal sum hit miss get oper return current previou valu return cach hit percentag total get return cach miss percentag total get total number put cach put count even immedi evict replac includ put remov total number remov cach includ evict cach initi remov make space tod initi map infinispan statist valu accept j cach specif

creat object name use scheme cach statist configur cach manag manag name name check whether object name alreadi regist filter invalid object name charact string util method regist cach statist platform bean server tod origin remov regist cach statist cach tod initi



test whether flag set util method set valu give flag true util method set valu flag fals




realli invok unless local mode appli function entri without datum


check provid set empti do iter valu find key map give segment p method alway prefer check size see empti p time complex method n return size read set do iter valu count segment p use method verifi set empti instead use link read segment awar entri collect empti perform good size use purpos p time complex method alway n



check provid map empti do iter key find key map give segment p method alway prefer check size see empti p time complex method n return size read map do iter key count segment p use method verifi map empti instead use link read segment awar entri map empti perform good size use purpos p time complex method alway n method support due natur map want copi underli valu collect thu almost oper requir n therefor method provid









add listen invok action readi cleanup command throw except execut invok alway command execut repli send










return true transact fail phase p commit e g transact success prepar commit fail due network issu
check transact origin long part cluster orphan transact updat link orphan follow valu might return ul li link statu statu prepar tx prepar li link statu statu committ tx commit li link statu statu rolledbac tx rollback li null otherwis transact doubt prepar orphan remot transact orphan node transact origin ie origin long part cluster call phase pc success

first move prepar transact origin leaver recoveri cach clean transact yet prepar iter remot transact return xid one intern id equal suppli intern id mark transact prepar point origin fail transact remov form normal transact collect move cach hold transact see link leaver transact list

determin recoveri enabl cach set name cach recoveri relat inform hold specifi default cach name link recoveri configur defaul recov inf cach
disabl recoveri cach enabl recoveri cach enabl recoveri cach set name cach recoveri relat inform hold specifi default cach name link recoveri configur defaul recov inf cach


replay give transact prepar commit call expect transact exist node either local remot transact method invok link transact complet xid boolean specifi node link doubt transact info cluster return transact local node return link set contain transact cluster includ local node includ transact prepar success origin still cluster local call return list contain pre remot transact prepar node origin e node tx stare long part cluster local origin transact prepar commit fail local call return remot transact identifi suppli xid null return list transact prepar state local remot cluster node implement take advantag sever optimis ul li order get tx cluster broadcast perform perform assum call success first time method call local cach list tx prepar node return li broadcast return list prepar transact origin activ node cluster check intern state transact tabl state give tx find return true tx prepar link recoveri inform xid identifi tx intern id remov specifi node node valu null recoveri inform associ xid remov recoveri inform store node involv rpc link recoveri inform collect xid boolean global transact boolean transact identifi intern id xid







return set method contain give method annot includ public protect packag privat method well superclass note includ overridden method return set method contain give method annot includ public protect packag privat method superclass interfac inspect class pass class level annot specifi annot avail method recurs inspect superclass interfac find requir annot return null annot find retriev valu field object instanc via reflect inspect class superclass way link object method instanc contain give annot even identifi privat packag protect method public one invok method use reflect access manner use link method access test whether annot present class order test ul class implement interfac superclass test whether method alreadi find e overridden
p perform runtim cast similar link class object use link class object type wish cast p link class object use possibl get declar field class hierarchi b return overrid field get declar method class hierarchi b return overridden method p get valu field specifi instanc cast valu field expect type p method wrap link field object convert check except link field object specifi runtim except inspect annot element give meta annot use user defin meta annot annot must physic present extract qualifi set annot extract qualifi set annot extract raw type give type p invok method instanc argument specifi cast result invok method expect return type p method wrap link method object object convert check except link method object object specifi runtim except p instruct method attempt set access flag method link privileg action invok method p invok specifi method provid instanc pass addit argument includ method argument specifi method p method attempt set access flag method link privileg action invok method first argument true method provid function throw except link reflect method method class object object expect return type set link object p invok specifi method provid instanc pass addit argument includ method argument specifi method method provid function throw except link reflect method method class object object expect return type set link object honor access method check assign one type anoth take account actual type arguement check class serializ check whether whether match type set access flag link access object describ link access object access within context link privileg action


regist object resourc









remot cach name valu provid default cach assum

add client listen receiv event happen remot cach listen object must annot link client listen annot add client listen receiv event happen remot cach listen object must annot client listen annot execut remot script pass set name paramet retriev entri provid key key present result map entri find cach bulk get oper return entri within remot cach link bulk limit return set valu specifi size order guarante guarante size element return e g number element server small size return link cach topolog info cach return set listen regist client give cach return hot rod protocol version support remot cach implement return link remot cach manag creat cach return link version valu associ suppli key param null exist return link metadata valu associ suppli key param null exist synthet oper synthet oper client iter set key call put one result oper atom failur happen put roll back costli key paramet map remot call perform synthet oper synthet oper synthet oper synthet oper doc p return valu send back link flag forc retur valu enabl doc p method requir round trip server first retriev valu version second remov key version valu match possibl user use link remot cach metadata object link remot cach version object long remov previous add client listen listen add oper remov give entri version match suppli version typic use case look like pre version entri cach version process cach version version lat call version make sure entri remov chang doc p method requir round trip server first retriev valu version second replac key version valu match possibl user use link remot cach metadata object link remot cach version object object long doc p method requir round trip server first retriev valu version second replac key version valu match possibl user use link remot cach metadata object link remot cach version object object long long time unit long time unit doc p method requir round trip server first retriev valu version second replac key version valu match possibl user use link remot cach metadata object link remot cach version object object long long time unit long time unit possibl replac give valu version match suppli version see link version object long sampl usag method overload form link version object object long take lifespan paramet overload form link version object object long take lifespan maximum idl time paramet overload form link version object object long take lifespan maximum idl time paramet retriev entri server retriev entri server match queri retriev entri metadata inform return cach valu manipul use link input stream link output stream appli one link flag scope singl invoc see link flag enumer inform avail flag p sampl usag pre cach flag flag forc retur valu world
retriev configur current use configur object immut wish chang configur use follow pattern pre code configur builder builder new configur builder cach manag configur modifi builder cach manag cach manag new remot cach manag switch remot cach manag differ cluster previous declar via configur switch complet success method return code true otherwis return code fals switch remot cach manag default cluster previous declar via configur switch complet success method return code true otherwis return code fals

retriev default cach remot server retriev name cach remot server cach defin otherwis cach name undefin return null stop remot cach manag disconnect exist connect part disconnect regist client cach listen remov sinc client long receiv callback
creat cach remot server cluster use specifi templat creat cach remot server cluster use specifi templat flag perform mass reindex specifi cach command return immedi reindex perform asynchron remov cach remot server cluster


stop manag creat factori


retriev link remot annot instanc give annot element produc remot cach retriev link remot cach manag bean follow qualifi
store entri local cach verifi local cach third one evict verifi evict entri anyth els remot cach retriev evict entri local cach call remot cach intern verifi evict entri remov remot cach test attribut store true entri write store

intent method mean integr point bytecod manipul remov alter signatur even might look like unreach code implementor perform put oper optim return valu requir







creat command un sens paramet set compon specif cach question set would typic set paramet use link command factori replic command replic command resolv link cach rpc command stream





decid whether command send sync async error happen new index backend provid safe assum error relat fact current backend long valid point still forward work current stack next backend creat link list forward right backend


return lock owner key p usual transact cach link global transact cach link command invoc id return link collect key lock p may return empti collect key need lock independ return valu link skip lock may contain duplic key code null valid return valu check command acquir lock




get protobuf serial context code null use protobuf







sort field contain doc valu hibern search forc uninvert





todo anistor use remot queri lucen engin









add new remot server configur executor servic use asynchron work transport includ asynchron marshal cach oper cach async replic vs distribut hot rod server cluster client balanc request server accord strategi configur connect pool properti defin maximum socket connect timeout give connect server whether implicitli forc retur valu call configur remot store enabl set need creat entri serv hot rod endpoint exampl perform roll upgrad class name driver use connect databas allow specifi custom link marshal implement serial deseri user object allow specifi custom link marshal implement serial deseri user object properti defin protocol version client use default link protocol version defaul protoco versio properti defin protocol version client use default link protocol version defaul protoco versio normal link remot store store valu wrap link intern cach entri set properti true caus raw valu store instead interoper direct access link remot cach manag name remot cach remot infinispan cluster connect unspecifi default cach use configur connect secur properti defin maximum socket read timeout millisecond give wait byte server default minut affect tcp nodelay tcp stack default enabl control transport use current tcp transport support control transport use current tcp transport support hint allow size byte buffer serial deseri valu minim array resiz







invok remot valu find remot sourc invok remot valu find remot sourc give key





attribut write handler perform special process alia attribut remov alia list model node exist alia get whether link oper context stage runtim handler add default implement return code true link oper context process type process type server link oper context boot boot return code fals



perform expir specifi entri








descript resolv oper




expect specif set command link rpc block command detect expect command moment singl command detect link rpc command unblock expect command within transact scope e payload prepar command cach mode synchron commit command expect well expect specif set command within transact scope e payload prepar command cach mode synchron commit command expect well block predefin amount time second command defin expect method detect command detect time except throw link rpc except allow specifi max wait time






true command process asynchron thread provid infinispan thread pool otherwis command process directli j group thread featur allow avoid keep j group thread busi origin discard messag retransmiss command block wait state acquir lock etc return true use marshal convert command id stream invok command synchron p method option unless command never block pleas implement link async instead invok command asynchron p method replac link invoc context remot execut default implement link invoc context remov futur version true return valu provid perform remot otherwis remot link respons gener may choos simpli return null save marshal cost true return valu marshal link success respons otherwis marshal link unsuccess respons perform primari function command pleas see specif implement class detail perform well return type import method invok end interceptor chain never call directli custom interceptor read instanc stream write link object output set sender link address p default set anyth implement method sender link address need write instanc link object output



use creat subsystem descript
use creat subsystem descript





send back return valu sender
complet request except releas resourc call node receiv new cluster view call respons receiv respons








configur builder use specifi express resolv model
creat builder resourc servic
instal runtim servic resourc configur specifi model remov runtim servic resourc



call respons receiv target node becom unavail target node leav cluster method call link cach find respons return code null result request complet code null wait respons method throw except request complet except last respons receiv code respons still return code null link finish also call obtain result thread safeti code respons call concurr multipl thread request complet code respons run call link respons address respons return code null last respons code finish finish normal request complet return valu even code null code finish throw except request complet except except wrap link complet except unless except alreadi link complet except

determin whether respons give sender add respons list request right call link accept respons address method call see whether do request unblock caller



write respons channel









creat netti respons base error




build link rest router configur

get authent mechan return netti channel initi re set authent mechan



doc doc doc




determin whether append cach name path ur default fals configur connect pool host connect class link key string mapper use map key string suitabl re tful default link wrap byte array primit mapper class name link key string mapper use map key string suitabl re tful default link wrap byte array primit mapper set maximum content length default class link metadata helper use manag appropri metadata entri default link emb metadata helper class name link metadata helper use manag appropri metadata entri default link emb metadata helper path portion re tful servic default port connect default read raw valu rest server instead marshal use roll upgrad featur













method must call iter finish local remot resourc free



invok remot command use code transport pass paramet build new instanc destin site command retri polici
doc








creat databas exist





return access mask contain permiss specifi role return name role return list permiss associ role








regist migrat specif datum format endpoint infinispan ecosystem typic one migrat implement hot rod one memcach one rest one vm mode would typic add upgrad manag first access via protocol



return valu link failov request balanc strategi server set without modifi



get link router ip address may return link option link router stop get link router port may return link option link router stop get link protocol implement link router start link router stop link router








add link rout link rout tabl
return number link rout present rout tabl return stream link rout rout tabl return link stream link rout match initi criterion


appli datum convers input row modifi new one equal differ size creat




return address associ rpc manag null part cluster creat new link rpc option builder link rpc option builder configur link deliv order non param sync code true otherwis link deliv order pe send creat new link rpc option builder return member cluster scop cach own rpc manag note list alway subset link transport member creat new link rpc option builder link rpc option builder configur link respons mode link deliv order non link respons mode synchron otherwis link deliv order pe send asynchron creat new link rpc option builder return current topolog id oppos id updat whenev cluster chang id updat new cach instanc start remov necessarili coincid node cluster invok rpc call cach cluster invok command remot node asynchron send link replic command destin use specifi link deliv order asynchron send link replic command set destin use specifi link deliv order

jmx inform mainli unit test

set link respons filter code null default mean wait none respons depend remot invoc synchron asynchron respect set link respons mode remot invoc see link respons mode document see avail valu see link timeout long time unit set timeout valu link time unit














close output stream releas system resourc associ stream flush output stream












return iter regist code sasl client factori order base order provid registr class path order return iter regist code sasl client factori order base order provid registr class path order class path provid list global provid event name conflict class path provid prefer return iter regist code sasl server factori order base order provid registr class path order return iter regist code sasl server factori order base order provid registr class path order class path provid list global provid event name conflict class path provid prefer

prefer owner second hash effect make ch ch think
merg two consist hash object number segment owner hash function segment primari owner first ch prioriti primari owner becom backup leaver remov segment without owner assign new owner joiner might get segment otherwis take account happen rebal



confirm node receiv cach topolog give id move segment accord consist hash link scatter version manag segment state own state
method handl creat backup copi invalid node segment node keep previou topolog
forget invalid schedul link key invalid object entri version boolean gener new version entri give segment key version datum give segment receiv key transfer fail entri receiv put segment own accord consist hash link segment state own state move segment link segment state block state notifi manag oper give key version previous retriev link version finish oper execut origin oper entri store node eventu order version entri remov node entri complet remov oper node store tombston entri old version drop regularli confirm tombston invalid move segment link segment state own link segment state own without transfer datum set current topolog id move segment link segment state block link segment state ke transf state move segment link segment state own state call preload make sure cach start topolog high one store cach store
preload state consum impl state transfer manag impl


add properti pair executor factori configur specifi factori class executor current infinispan use object instanc instead instanti new instanc class therefor expect state surviv provid constructor instanc resolv infinispan set properti executor factori configur







method custom schema regist


perform specifi action everi entri state return checksum properti exclud prefix retriev float state properti retriev integ state properti retriev state properti return name persist state scope set float state properti set integ state properti set state properti valu write









add new name script retriev sourc code exist script retriev name avail script remov script run name script run name script use specifi link task context





check index exist give class intend test whether entiti class index via annot programmat
experiment provid hibern search dsl build full text queri retriev scop analyz give class type retriev analyz instanc definit name experiment use tri newli introduc distribut queri mass index use rebuild lucen index entri store infinispan simpl method return link cach queri filter accord set class pass class pass assum type filter perform know type search get access queri specif statist search manag instanc remov entiti particular class index method give access intern infinispan type normal need api intern type probabl chang without notic
javadoc see search manag queri builder class class probabl hide queri method javadoc see search manag queri queri class intern experiment creat link cach queri filter accord give link hs queri
regist link transform suppli key class store key cach neither simpl string int annot transform infinispan queri need know transform use transform key string client must specifi transform use particular key class regist method defin timeout except factori custom except throw queri timeout exceed




creat work instanc give entiti creat collect work instanc hibern search perform entiti give entiti type creat collect work instanc hibern search perform give entiti



creat forward commit rollback command send member execut transact commit rollback transact commit rollback local transact commit rollback transact remot transact sinc member execut transact leav cluster












return link princip base combin
method invok oper know perform give set segment node long own mani return whether lose segment affect result lose true oper invok would normal


acquir readlock order prevent invoc link releas read lock string delet file releas previous acquir lock lock acquir mark file delet soon pend lock releas invok file without pend lock file delet

convert segment valu virtual node valu convert virtual node valu segment valu


signal task call link task background finish option execut anoth task thread stop cancel queue task call task remov permit would otherwis free task finish run asynchron part task finish must call link task finish callabl make permit avail








































helper method allow quick registr link advanc extern implement alongsid correspond identifi rememb identifi need posit number includ clash identifi system helper method allow quick registr link advanc extern implement alongsid correspond identifi rememb identifi need posit number includ clash identifi system helper method allow quick registr link advanc extern implement class resolv use unmarshal object set marshal instanc marshal unmarshal cach entri larg allow version use marshal intern state set low version cach instanc cluster ensur compat commun howev set low mean lose benefit improv new version marshal larg allow version use marshal intern state set low version cach instanc cluster ensur compat commun howev set low mean lose benefit improv new version marshal

specifi extern class use annot class specifi valu match capabl function

specifi extern class use annot class




method custom serial regist kryo paramet
import hot rod protocol agre calcul node address hash code calcul chang implement requir modif protocol overrid def code array code format host byte ut

get callback handler give mechan name method call time mechan select connect result author callback handler cach use multipl time connect author callback handler either thread safe server authent provid provid new instanc time call














set task context store valu task implement abl access cach resourc task


regist server task registri return link server task wrapper task give name server task wrapper wrap link server task make compat link task list regist server task check task give name regist registri unregist server task give name


trigger execut server task give name return complet futur result execut obtain



add link tx state global transact tabl exist alreadi add link emb transact local transact tabl test remov link tx state global transact tabl remov code xid global local transact tabl remov local link emb transact associ code xid updat state global transact tabl


gener friendli version link servic registri servic servic name return valu specifi servic servic exist start gener friendli version link servic registri requir servic servic name return servic valu specifi servic start necessari ensur specifi servic remov ensur specifi servic start ensur specifi servic stop


provid iter collect refer even origin array null explod dictionari list pair return bundl context
return associ servic name

creat new cach return name cach name paramet null current cach return obtain cach manag session attach return current activ codec use return specif codec return list avail codec obtain current select cach none select default cach return return name current select cach none select default cach return return uniqu id session return time session last access reset session abort dangl batch transact updat timestamp set codec use set current cach








return shard id certain key belong initi link shard alloc manag configur number segment shard


helper yet implement marshal














hack allow cast work java like subtyp gener method call contain action method call contain action replac old valu expir
















add user authent tabl doc






write new free entri file also add free list alloc request space file base class implement call link object better keep key memori tri evict entri capac cach store reach free space specifi file entri reus alloc note caller must hold code lock share mode coalesc adjac free entri creat larg free entri probabl find free entri alloc increas manipul free entri optim disk space rebuild index file remov free entri toward end file truncat file

store tri fit new entri exist entri free entri pool one avail howev exist free entri may quit big requir contain new entri may make sens split free entri two part requir contain new entri request remain part return pool free entri factor decid split free entri valu set free entri split new entri equal less time size free entri set locat disk store write order speed lookup singl file cach store keep index key correspond posit file avoid index result memori consumpt problem cach store bound maximum number entri store limit exceed entri remov perman use lru algorithm index underli file base cach store set maximum limit make sens infinispan use cach whose content recomput retriev authorit datum store maximum limit set infinispan use authorit datum store could lead datum loss henc recommend use case

get databas represent string key store hotrod client use string store simpl test see store work







method call cach either becom coordin stop coordin becom coordin option start state transfer underli cach store method wait cach loader state finish method call case push state alreadi progress need wait finish call singleton store discov cach becom coordin push memori state enabl might actual push state ongo push task run case wait push task finish push state specif cach read cach datum put cach store wait within time constraint task finish


true singleton store cach store enabl state coordin true properti set maximum number millisecond process push state underli cach loader take true node becom coordin transfer state underli cach store use situat coordin crash gap time new coordin elect
enabl singleton store cach store enabl singleton store cach store true singleton store cach store enabl state coordin true properti set maximum number millisecond process push state underli cach loader take state coordin true properti set maximum number millisecond process push state underli cach loader take true node becom coordin transfer state underli cach store use situat coordin crash gap time new coordin elect


return name local site must valid name defin link configur
set name local site must valid name list site defin





return list site cach might back datum list actual site defin link use backup site return true cach will backup datum remot would still accept site back datum site return list link backup configur link backup configur true
defin site name list site name defin within element cach backup datum return true cach will backup datum remot would still accept site back datum site















observ cach start event cach associ cach
add integ set without box paramet check set contain integ without box paramet remov integ set without box add integ set without box paramet check integ alreadi present set code valu code true add integ set otherwis remov integ set





return code true handshak success

method call reflect get info key test tool










field path indic sort ascend descend









return link emb cach manag emb cach manag back cach manag stop link emb cach manag emb cach manag cach manag deleg
initi bean dispos bean shut spring emb cach manag instanc creat factori bean factori bean alway return code true

p infinispan final remot cach strong support retriev set cach name hotrod server restrict may lift futur current oper alway throw unsupport oper except return link remot cach manag remot cach manag back spring remot cach manag start link remot cach manag remot cach manag back spring remot cach manag stop link remot cach manag remot cach manag back spring remot cach manag
initi bean dispos bean link remot cach manag code stop remot cach manag creat factori factori bean alway return code true


disabl ssl support enabl ssl support enabl disabl ssl support specifi password need access privat key associ certif store specifi link store file name string password specifi password provid link store password use specifi filenam keystor use creat link ssl context also need specifi link store password altern specifi initi link context ssl context specifi password need open keystor also need specifi link store file name string altern specifi initi link context ssl context specifi type keystor jk jcek default jk configur secur socket protocol specifi tl sni hostnam connect specifi filenam truststor use creat link ssl context also need specifi link store password altern specifi initi link context ssl context specifi password need open truststor also need specifi link store file name string altern specifi initi link context ssl context specifi type truststor jk jcek default jk



select specif key choos keystor specifi password need access privat key associ certif store specifi link store file name string password specifi password provid link store password use specifi filenam keystor use creat link ssl context also need specifi link store password altern specifi initi link context ssl context specifi password need open keystor also need specifi link store file name string altern specifi initi link context ssl context specifi type keystor jk jcek default jk configur secur socket protocol set link ssl context use set ssl connect specifi filenam truststor use creat link ssl context also need specifi link store password altern specifi initi link context ssl context specifi password need open truststor also need specifi link store file name string altern specifi initi link context ssl context specifi type truststor jk jcek default jk
creat netti link ssl context base option standard jd link ssl context link option pass argument method return default link ssl context













receiv notif topolog chang state request command issu segment new member segment long own discard cancel incom state transfer alreadi receiv datum discard execut cach shut stop appli incom state also stop track updat key call end state transfer clear command commit state transfer
use scatter cach use scatter cach cancel transfer segment long use scatter cach check exist transfer restart differ sourc initi sourc long member must run persist manag stop appli incom state also stop track updat key call end state transfer clear command commit state transfer

cancel send cach entri belong give set segment invok respons state request command type state request command type canc stat transf get list transact affect key give segment invok respons state request command type state request command type ge transact receiv notif topolog chang cancel outbound transfer destin long member outbound transfer remain unaffect start send cach entri belong give set segment invok respons state request command type state request command type star stat transf state field set fals upon deliveri destin cach entri process link state receiv appli local cach cancel outbound state transfer execut cach shut

return replica cach entri give segment requir consit hash pass necessari hash last stabl topolog utilis automat merg new merg topolog instal cancel ongo replica request execut cach shut



defin action state state depend anoth state associ action enter action finish equival code enter state exit state equival code enter state timeout unit exit state enter state block depend exit use default timeout enter state block depend exit exit state signal waiter depend state defin logic thread state logic thread implicitli order must enter order defin defin partial order state differ logic thread stop anyth code enter code exit exist thread wait code enter waken
advanc everi state code state list give order code condit true noth code state code null empti start decor compon code class code cach interact code state sequenc method call start decor compon code class code manag interact code state sequenc method call start decor code inbound invoc handler code manag interact code state sequenc code cach rpc command receiv start decor interceptor code class code cach interact code state sequenc start decor code rpc manag code manag interact code state sequenc command send start build link command matcher start build link invoc matcher

code true caus first call method code cach manag cach joiner node block wait join complet cach finish receiv state neighbor cach memori state enabl option appli distribut replic cach enabl default pleas note set code fals make cach object avail immedi access key avail local yet transfer actual caus transpar remot access impact logic applic might impact perform state transfer batch code size cach entri size equal integ valu state transfer recommend code true cach fetch datum neighbor cach start cach start although impact startup time distribut mode state transfer run cach well ownership key chang e g cach leav cluster disabl set mean key sometim less code owner owner want rememb user configur initi transfer default cach maximum amount time millisecond wait state neighbor cach throw except abort startup maximum amount time millisecond wait state neighbor cach throw except abort startup
code true caus first call method code cach manag cach joiner node block wait join complet cach finish receiv state neighbor cach memori state enabl option appli distribut replic cach enabl default pleas note set code fals make cach object avail immedi access key avail local yet transfer actual caus transpar remot access impact logic applic might impact perform state transfer batch code size cach entri size equal integ valu state transfer recommend code true cach fetch datum neighbor cach start cach start although impact startup time distribut mode state transfer run cach well ownership key chang e g cach leav cluster disabl set mean key sometim less code owner owner maximum amount time millisecond wait state neighbor cach throw except abort startup maximum amount time millisecond wait state neighbor cach throw except abort startup

write command retri command local topolog chang retri origin command code cach mod loca flag special process requir transact command
topolog chang lock topolog instal latch todo move cluster local topolog manag impl start request state everi node jgroup view local node transact datum latch

state transfer happen moment method forward suppli command node new owner datum order assur consist todo anistor inaccur node hold state yet current implement check inbound state transfer progress check inbound state transfer progress give key
decor give cach topolog add key partition key partition may includ support group well todo investig merg datum first topolog member serv similar purpos consist hash factori explicitli configur choos suitabl one base cach mode need distribut manag cach loader manag init preload

















option paramet defin order method call compon registri move stop state default




whether store share amongst node cach
enabl defens copi enabl store key valu binari enabl store key binari enabl store valu binari
defens copi disabl infinispan keep object refer around marshal key lazili client modifi entri via origin object refer marshal happen entri store cach store sinc client refer valid client make chang entri cach use refer modif local still need call one cach method order chang replic defens copi enabl infinispan marshal object moment store henc chang make object refer store cach even local cach disabl store key valu binari enabl store key valu binari set whether featur enabl disabl specifi whether key store binari specifi whether valu store binari
configur async cach loader enabl provid asynchron write cach store give cach true fetch persist state join cluster multipl cach store chain one properti enabl persist state transfer share cach store make sens persist store provid datum end receiv therefor share cach store use cach allow persist state transfer even cach store properti set true final set true make sens cluster environ cluster mode support true oper modifi cach put remov clear store etc will appli cach store mean cach store could becom sync cach true purg cach store start singleton store deleg cach store use situat one instanc cluster interact underli store coordin cluster respons underli cach store singleton store simpli facad real cach store implement alway deleg read real cach store

p defin singl properti use multipl time defin need properti full set overridden link properti properti p properti pass directli cach store configur async cach store enabl provid asynchron write cach store give cach true fetch persist state join cluster multipl cach store chain one properti enabl persist state transfer share cach store make sens persist store provid datum end receiv therefor share cach store use cach allow persist state transfer even cach store properti set true final set true make sens cluster environ cluster mode support true oper modifi cach put remov clear store etc will appli cach store mean cach store could becom sync cach maximum size batch store valu less one upper limit place number oper batch true cach start datum store cach store memori particularli use datum cach store need immedi startup want avoid cach oper delay result load datum lazili use provid startup howev perform penalti startup time affect process true purg cach store start set set true multipl cach instanc share cach store e g multipl node cluster use jdb cach store point share databas set true avoid multipl cach instanc write modif multipl time enabl node modif origin write cach store disabl individu cach react potenti remot updat store datum cach store note could use individu node cach store perhap local singleton store deleg cach store use situat one instanc cluster interact underli store coordin cluster respons underli cach store singleton store simpli facad real cach store implement alway deleg read real cach store set set true underli cach store support transact desir underli store cach remain synchron enabl except throw whilst write underli store result store cach transact rollingback enabl store share write store perform prepar time infinispan tx except encount store prepar time result global tx rolledback along store write otherwis write store commit commit phase p enabl write cach store perform commit phase tx note requir link share boolean set true properti pass cach store loader








predic taht alway return true irrespect valu provid provid function return key entri invok provid function return valu entri invok provid predic return true object equal provid function give key return link cach entri map key function work use link cach stream return desir link cach entri read cach cach stream creat predic return true object pass null



add key read add lock inform key name key suffer content key lock add key put add key write skew fail see link top k stream summari contain stat int link top k stream summari contain stat key return string format link top k stream summari contain stat int key return string format reset collect far set capac capac defin maximum number key track rememb probabilist counter high number key precis counter enabl disabl collect tri flush enqueu offer visibl global
finish use give object input open object input call object stream multipl time use method flush datum close necessari finish use give object output open object output call object stream multipl time use method flush datum close necessari unmarshal object link input stream unmarshal object link object input marshal object give link object output creat open new object input give input stream method use open data input multipl object stream call make stream close method also take boolean repres whether particular call object input reentrant call object input mark reentrant whenev call method make without call object input first potenti speed call object input multipl time way e object input object input object input object input common case stream marshal implement could potenti use mechan speed object input call creat open object output instanc give output stream method use open data output multipl object stream call make stream close call object output method also take boolean repres whether particular call object output reentrant call object output mark reentrant whenev call method make without call object output first potenti speed call object output multipl time way e object output object output object output object output common case stream marshal implement could potenti use mechan speed object output call hand call reentrant e object output object output object output object output stream marshal implement might treat differ exampl reentranc would marshal link marshal valu send store marshal valu call object output would occur stream open follow call could occur marshal valu raw byte array version calcul send across enabl store binari receiv side perform gain stream marshal implement could decid need separ object output similar call sinc aim get raw byte array version close finish stop marshal implement method clear cach datum close resourc alreadi close
retriev valu specifi key link input stream applic ensur stream consum close marshal ignor e datum read raw binari form return input stream implement link version metadata interfac return input stream initi stream put oper applic write return link output stream close datum write marshal ignor e datum write raw binari form return output stream overload form link object take lifespan paramet return output stream overload form link object take lifespan idl paramet return output stream condit form put insert entri cach map key alreadi present oper atom server perform oper stream close return output stream overload form link absent object take lifespan paramet return output stream overload form link absent object take lifespan idl paramet return output stream form link object take version valu replac server exist entri version match return output stream overload form link version object long take lifespan paramet return output stream overload form link version object long take lifespan idl paramet return output stream

close attempt close input stream attempt close array input stream attempt close output stream attempt close array output stream attempt close input stream output stream attempt close array input stream output stream copi byte input stream output stream copi byte input stream output stream copi byte input stream output stream copi limit number byte input stream output stream copi limit number byte input stream output stream copi limit number byte input stream output stream copi byte input stream output stream wrap stream buffer need attempt flush close output stream attempt flush close array output stream flush attempt flush output stream attempt flush array output stream


node join cluster fetch state cach cluster also underli cach store contain state immedi ensur attribut singleton attribut ensur coordin cluster work underli cach store even key store cach store underli cach store coordin





go input string replac occur p system properti valu properti p defin p refer remain unchang properti refer form p v properti p default valu v return properti refer form v primari secondari properti tri turn return either unchang input default valu properti replac system properti valu properti replac system properti go input string replac occur p properti valu properti p defin p refer remain unchang properti refer form p v properti p default valu v return properti refer form v primari secondari properti tri turn return either unchang input default valu properti replac system properti valu properti replac system properti tri resolv key provid properti check actual case tri first fail return null also accept


calcul segment object belong
retriev read write lock attribut give object use code lookup retriev lock associ give code retriev give lock provid offset note code base method requir care knowledg mani lock use iter lock lock write lock ensur link strip lock call proper final block unlock write lock use link strip lock invok

atom add give valu return new valu regist link counter listen counter atom set valu give updat valu current valu code expect valu atom decrement counter return new valu fetch current valu p may go remot fetch current valu atom increment counter return new valu reset counter initi valu

set low bound inclus counter bound counter desir p default valu link long mi valu set upper bound inclus counter bound counter desir p default valu link long valu


get princip user return subject get name user



determin output type accumul






timeout use wait acknowledg make remot call call abort except throw timeout use wait acknowledg make remot call call abort except throw
timeout use wait acknowledg make remot call call abort except throw timeout use wait acknowledg make remot call call abort except throw













return appropri folder store datum logic method use os name decid good current use name unix linux per freedesktop appdat sun java name window librari java name mac os x





determin whether databas tabl creat store startup name databas column use store entri type databas column use store entri determin whether databas tabl drop store shutdown db queri fetch size link result set fetch size option paramet specifi default link tabl manag defaul fetc siz name databas column use store key type databas column use store key set prefix name tabl datum store cach name append prefix order enforc uniqu tabl name cach name databas column use store timestamp type databas column use store timestamp


number fail request oper site take offlin default never neg valu would mean site take offlin time wait minim number milli wait take site offlin even case failur reach small equal failur consid
disconnect target sourc oper last step must perform roll upgrad return name migrat perform synchron datum sourc target perform synchron datum sourc target

add name paramet task context cach task execut task default cach cach obtain cach manag cach manag task execut default cach cach obtain cach manag link cach cach manag cach manag task execut marshal task execut get map name paramet task option link subject execut task whether execut task gener event event log whether execut gener event event log marshal task execut map name paramet pass task invok method overwrit previous set paramet subject imperson run task unspecifi subject retriev via link secur subject

return name engin return list task manag engin return whether task engin know specifi name task execut name task specifi cach pass map name paramet
return name task return time task start option context task appli usual name cach task initi option name princip execut task task trigger intern method return empti link option



retriev current execut task run cluster oper return task run node retriev instal task engin retriev list avail task regist new link task engin execut name task pass option cach map name paramet






make sure evictor thread kick idl set want caller thread user note return request balanc strategi may note return consist hash may



handl inject compon variou intermedi oper actual run termin oper return result oper set local supplier stream invok remot node object unmarshal set supplier use


particular case memcach end signal charact end oper find method would return true contrari space find instead end oper charact return element fals

creat threshold filter
format thread name string ul li code emit percent sign li code emit thread sequenc number li code g emit global thread sequenc number li code f emit factori sequenc number li code p emit code thread group path li code emit thread li code g emit thread group name li code n emit node name li code c emit compon name






valid paramet thread pool executor factori




equival code durat time time time unit








use test purpos









notifi cach topolog chang











wait synchron block unblock unblock synchron block

ensur valid order transact correspond prepar command allow prepar command move thread pool notifi end state transfer possibl unblock wait prepar notifi state transfer start releas lock key possibl unblock wait prepar

return link total order remot transact state associ transact creat one one associ transact mark prepar phase pc appli immedi modif use code commit command receiv code prepar command signal write skew check need version entri use code commit command receiv code prepar command
check transact mark commit commit command check transact mark rollback rollback command mark transact prepar valid finish notifi possibl pend commit rollback command mark transact prepar block commit rollback command link prepar invok set code total order latch associ transact commit rollback command invok method block state prepar














cach transact e link mode transact mode transactiona auto commit enabl singl oper transact user need manual start transact transact inject system default true ongo transact cach stop infinispan wait ongo remot local transact finish amount time wait defin cach stop timeout recommend valu exceed transact timeout even new transact start cach stop could last long transact timeout allow ongo transact cach stop infinispan wait ongo remot local transact finish amount time wait defin cach stop timeout recommend valu exceed transact timeout even new transact start cach stop could last long transact timeout allow configur whether cach use optimist pessimist lock cach transact lock mode ignor configur whether cach use optimist pessimist lock cach transact lock mode ignor method allow configur transact recoveri cach method call automat enabl recoveri want disabl make sure call link recoveri configur builder fals paramet true commit phase commit p transact synchron infinispan wait respons node commit send otherwis commit phase asynchron keep fals improv perform pc transact lead inconsist primari owner releas lock backup commit chang true commit phase commit p transact synchron infinispan wait respons node commit send otherwis commit phase asynchron keep fals improv perform pc transact lead inconsist primari owner releas lock backup commit chang true rollback phase commit p transact synchron infinispan wait respons node rollback send otherwis rollback phase asynchron keep fals improv perform pc transact true rollback phase commit p transact synchron infinispan wait respons node rollback send configur transact manag lookup directli use instanc transact manag lookup call method mark cach transact configur transact synchron registri lookup directli use instanc transact manag lookup call method mark cach transact infinispan could access cach transact natur access fast offer less consist guarante infinispan onward mix access longer support wan to speed transact cach readi trade consist guarante enabl pc auto commit transact configur option forc induc transact start infinispan result enabl commit commit singl phase rpc instead rp c case full phase commit p b n b option use modifi key multipl transact pc offer consist guarante concurr access
cach transact e link mode transact mode transact mode transactiona auto commit enabl singl oper transact user need manual start transact transact inject system default true ongo transact cach stop infinispan wait ongo remot local transact finish amount time wait defin cach stop timeout recommend valu exceed transact timeout even new transact start cach stop could last long transact timeout allow configur properti may adjust runtim ongo transact cach stop infinispan wait ongo remot local transact finish amount time wait defin cach stop timeout recommend valu exceed transact timeout even new transact start cach stop could last long transact timeout allow configur properti may adjust runtim durat milli keep inform complet transact default configur whether cach use optimist pessimist lock cach transact lock mode ignor time interv milli thread clean transact complet inform kick default method allow configur transact recoveri cach method call automat enabl recoveri want disabl make sure call link recoveri configur builder see link commit phase true commit phase commit p transact synchron infinispan wait respons node commit send otherwis commit phase asynchron keep fals improv perform pc transact lead inconsist backup owner commit transact primari owner releas lock true rollback phase commit p transact synchron infinispan wait respons node rollback send otherwis rollback phase asynchron keep fals lead inconsist transact roll back commit timeout backup owner could commit transact primari releas lock configur transact manag lookup directli use instanc transact manag lookup call method mark cach transact see link protocol transact protocol configur transact synchron registri lookup directli use instanc transact manag lookup call method mark cach transact infinispan could access cach transact natur access fast offer less consist guarante infinispan onward mix access longer support wan to speed transact cach readi trade consist guarante enabl pc auto commit transact configur option forc induc transact start infinispan result enabl commit commit singl phase rpc instead rp c case full phase commit p see link synchron configur whether cach regist synchron transact manag regist xa resourc often unnecessari regist full xa resourc unless intend make use recoveri well regist synchron significantli effici



advanc link tx state forget transact global local transact tabl rollback transact remov cluster member



attempt commit transact de xa resourc transact enlist xa resourc transact get statu transact must defin increas perform regist link synchron callback transact roll back transact run second phase protocol p code rollback code true link rollback except throw messag link forc rollbac messag mark transact possibl outcom rollback



return new transact manag
doc










add valu statist collect transact copi statist valu add anoth statist merg statist global contain increment statist valu equival code valu set transact write transact see also link read signal recept link prepar command set transact outcom see link commit signal transact complet updat statist final valu readi merg cach statist method abstract order overrid local remot transact signal transact complet updat statist final valu readi merg cach statist

return new transact synchron registri





comment link xid appli commit situat return true xa resourc pertain cach node call transact object see section resourc share jta spec comment link xid appli commit
commit provid transact chang underli store write modif store prepar phase way know final valu entri requir handl scenario object valu chang put command execut commit call tx rollback provid transact chang underli store

return jta transact return boolean valu whether transact progress jta transact case org hibern transact regist synchron pass paramet ongo transact ongo transact method noth simpli return

doc
creat transact context
remov lock without commit pend chang involv transact use lucen directori creation expect lock exist case clear lock eventu suspend run transact make sure releas immedi take effect commit exist transact illeg call transact start sinc lucen method releas renam close start new transact use batch chang lucen directori transact creat lock acquir close releas also commit start index writer


realli class extend transform howev sinc migrat j boss log use annot processor gener log object previou definit use compil bug hit find info isp





return address endpoint transport connect code null unconnect invalid transport instanc read vint size array size






call test thread idl



dump servic via jmx find whether executor pick set stack attribut transport config element tcp protocol bean avail via jm attribut must match standalon xml config file fact default valu take xml configur file subsystem set stack attribut transport config element udp protocol bean avail via jm attribut must match standalon xml config file fact default valu take xml configur file subsystem
termin oper return whether element travers match provid predic import reason keep method fact oppos reduct must evalu element travers method could stop soon find element match predic termin oper return whether element travers match provid predic import reason keep method fact oppos reduct must evalu element travers method could stop soon find element match termin oper transform travers result contain first construct give supplier accumul element give consum combin use combin accumul result execut parallel come differ node distribut environ distribut environ key remot link supplier link bi consum instanc pass send node henc need marshal collect oper defin use helper method link collector recommend use easili make marshal use code cach collector collector method termin oper transform travers result contain use code collector distribut environ key remot link collector instanc pass send node henc need marshal easili make achiev use code cach collector collector method termin oper return number element travers intermedi oper return travers contain element match give predic termin oper return option contain element travers empti option empti intermedi oper return travers contain result replac element travers content travers produc appli provid function element function map perspect oper particularli handi valu collect termin oper appli oper element travers intermedi oper return travers contain result appli give function element travers termin oper return option contain maximum element travers base compar pass travers empti return empti option termin oper return option contain minimum element travers base compar pass travers empti return empti option termin oper return whether element travers match provid predic import reason keep method fact oppos reduct must evalu element travers method could stop soon find element match predic termin oper appli binari fold oper start valu result element map function appli combin could potenti do effici map execut reduc termin oper appli binari fold oper start valu element travers termin oper appli binari fold oper element travers wrap result option travers empti return empti option

conveni method take string represen fqn otherwis ident link datum fqn remov key properti name node conveni method retriev node get key node directli test fqn exist conveni method link fqn test fqn exist conveni method take string represent fqn otherwis ident link fqn object conveni method allow direct access datum link node retriev defens copi datum map underli node conveni method retriev node get datum node directli conveni method take string represen fqn otherwis ident link key fqn return set attribut key fqn return null node find otherwis set set copi actual key node conveni method retriev node get key node directli conveni method take string represent fqn otherwis ident link node fqn conveni method retriev node directli cach equival call root child return root node cach conveni method take string represent fqn otherwis ident link fqn fqn move part cach differ subtre e g assum cach structur pre fqn fqn string fqn fqn string cach move result pre pre fqn fqn string fqn fqn string cach move result pre node move root node note use mvcc lock specif behaviour defin follow ul node move unto e g tt move fqn parent anyth target node exist creat silent consist ap tt put nonexist node sourc node exist consist ap tt get nonexist node conveni method take string represent fqn otherwis ident link fqn object object conveni method take string represent fqn otherwis ident link fqn map associ specifi valu specifi key link node cach link node previous contain map key old valu replac specifi valu copi map specifi map link node conveni method take string represent fqn otherwis ident link fqn object remov map key node return valu node previous associ key code null node contain map key conveni method take string represent fqn otherwis ident link node fqn remov link node indic absolut link fqn
creat tree cach instanc take link cach paramet
noth differ deleg cach
return string represent tree cach
perform oper give argument

tod overrid non tx write command function command triangel


action interfac lock listen interfac

map string back origin key



happen state transfer




within one transact will replic replic would perform commit time oper origin local will replic either tx boundari command



regist new particip transact return set key affect transact use gener appropri recipi group prepar commit call return id transact associ current call return modif perform scope current transact modif flag cach mod local ignor return list null return tx associ current thread method must guard call link origin local link transact propag node tx start check modif perform within tx scope modif flag cach mod local ignor

need intercept prepar command invalid command sinc intercept take place entri wrap interceptor prepar command multiplex invalid command part entri wrap interceptor






return actual intern represent entiti might class anyth els return type name repres entiti

appli configur overrid link type overrid instanc cach configur builder pass paramet maximum number entri cach cach type cach size guarante exceed upper limit specifi max entri howev due natur evict unlik ever exactli maximum number entri specifi set evict strategi cach type set often evict process run cach type maximum lifespan cach entri entri expir millisecond mean entri never expir maximum idl time cach entri maintain cach millisecond idl time exceed entri expir mean entri never expir enabl statist gather report via jm valid configur cach type
get properti associ key option appli string properti replac defin link string properti replac properti result factori method convert jdk link properti instanc instanc type properti need




synchron check classpath look correct uber jar usag asynchron check classpath look correct uber jar usag











specifi whether infinispan allow disregard link map contract provid return valu link cach object object link cach object method
specifi whether infinispan allow disregard link map contract provid return valu link cach object object link cach object method p provid return valu expens may entail read disk across network usag method never make use return valu allow unreli return valu help infinispan optim away remot call disk read p

read int store format read one five byte small valu take few byte neg number support read int store format read one five byte small valu take few byte neg number support read int store format read one nine byte small valu take few byte neg number support read long store format read one nine byte small valu take few byte neg number support write int format write one five byte small valu take few byte neg number support write int format write one five byte small valu take few byte neg number support write int format write one nine byte small valu take few byte neg number support write long format write one nine byte small valu take few byte neg number support






















await counter oper throw except link counter except calcul link counter state use base valu boundari p valu less low bound link counter state low boun reach return hand valu high upper bind link counter state upp boun reach return otherwis link counter state vali return check valu insid boundari return link counter except throwabl




process except target process target leav cluster stop cach process valid respons target











gener new entri version






creat error respons base throwabl instanc receiv creat respons get request creat respons indic oper could execut creat respons indic key messag tri oper exist creat respons stat command creat success respons read oper specif datum oper requir header handl protocol specif key read handl protocol specif valu read get optim cach instanc depend oper paramet read messag id read rest hot rod header give buffer return return whether entir header read read paramet oper present

write event includ header use give channel buffer write header give channel buffer write oper respons use give channel buffer







entri use version enabl situat version gener intern assign differ stage rest metadata keep version apu make easi appli version inform need









block certain amount time view chang receiv note class start listen view chang moment construct


get current list member get previou list member get j group view id

accept visitor return result accept visitor use determin whether command invok command opt discard case cach statu suit link invalid command perform primari function command pleas see specif implement class detail perform well return type import method invok end interceptor chain never call directli custom interceptor use inbound invoc handler determin whether command invok



add give valu new valu add link counter listen counter decrement counter return counter valu p valu may mot valu increment counter reset counter initi valu

set counter concurr level p set number concurr updat counter high valu support high number updat increas read counter valu p default valu
debug debug initi key set p one key initi valu remain zero

creat new valu ref instanc creat map creat map creat map remov entri whose valu discard













return last oper thread finish return thread add give key valu put worker thread wait put oper finish howev wait previou oper thread finish return without wait thread finish start cach put oper loop worker thread wait loop finish fact loop finish worker stop howev wait previou oper thread finish


use marshal valu extern deseri use marshal valu extern serial

offset datum start back array retriev byte give offset offset alway less link wrap byte length back array one otherwis null return caller use link wrap byte array offset know read byte byte never modifi caller length underli wrap byte alway





make subsequ invoc link success return code fals certain command work base certain condit state cach exampl link cach absent object object anyth condit meet e entri question alreadi present method test whether command question condit command may want provid inform whether command success differ failur usual would result except throw exampl absent anyth key question present would result success call return fals indic whether command mean make attempt read previous associ valu key command direct use condit command updat statu command origin base result execut primari owner













get valu attribut string list return schema current process handl code xs nest element pass give valu return end element must posit code star elemen except occur return cursor posit correspond code en elemen set current schema






debug




appli state site notifi end state transfer site notifi start state transfer site

cancel state transfer remot site state transfer avail noth notifi node start send state remot site also keep inform node request state transfer order send back notif finish




gt state transfer batch code size cach entri lt state transfer recommend default maximum number retri push state command fail valu zero mean command retri default valu time millisecond wait backup site acknowledg state chunk receiv appli default valu min wait time millisecond retri valu zero default valu second

make node coordin state transfer site name method invok coordin die node receiv late start state transfer request cancel run state transfer set cluster normal state main use method link site break receiv site keep state transfer state forev clear complet state transfer statu cluster clear complet state transfer statu receiv notif local site node finish push state remot site notifi node local site start transfer state remot site




convers recoveri enabl start cach loader manag

escap backslash addit backslash give string return new escap string retriev valu give attribut first encount instanc tag element e g link element repres follow xml snippet pre item quantiti colour red item quantiti item quantiti colour blue item quantiti item quantiti colour black item quantiti pre follow result could expect pre attribut valu item quantiti colour red tag content blah colour null tag content item quantiti blah null none paramet null otherwis method may throw null pointer except return root element give input stream read content element pass none paramet null otherwis method may throw null pointer except get first child element element return name current element pass none paramet null otherwis method may throw null pointer except return content specif node give element name provid certain attribut exist set valu e g link element repres follow xml snippet pre item quantiti colour red item quantiti item quantiti colour blue item quantiti item quantiti colour black item quantiti pre follow result could expect pre tag content red item quantiti colour tag content black item quantiti colour tag content blah item quantiti colour null tag content red blah colour null tag content black item quantiti blah null none paramet null otherwis method may throw null pointer except retriev boolean valu give attribut first encount instanc name similar link string content element string except return boolean similar link string content element string except return boolean read content name sub element within give element attempt pars content java properti file e g link element repres follow xml snippet pre lt prop gt attrib blah attrib blahblah lt gt pre follow result could expect pre properti p properti content prop properti blah properti blahblah none paramet null otherwis method may throw null pointer except read content first occurr name give element trim result whitespac none paramet null otherwis method may throw null pointer except convert string repres xml snippet link element

