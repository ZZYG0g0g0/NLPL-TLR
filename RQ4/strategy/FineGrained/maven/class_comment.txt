
Base class for artifact resolution exceptions.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. A skeleton eventspy that does nothing other than helping implementors.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Provides a skeleton implementation for execution listeners. The methods of this class are empty.
Allows core extensions to participate in Maven build session lifecycle. All callback methods (will) follow beforeXXX/afterXXX naming pattern to indicate at what lifecycle point it is being called.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Provides a skeleton implementation for model building listeners. The methods of this class are empty.
Abstract class to provide most of the infrastructure required to implement a <code>Mojo</code> except for the execute method.<br> The implementation should have a <code>Mojo</code> annotation with the name of the goal: <pre> &#64;Mojo( name = "&lt;goal-name&gt;" ) </pre> <p> There are also a number of attributes which can be used to control how and when the <code>Mojo</code> is executed: </p> <table border="1" summary="mojo annotation attributes"> <tr bgcolor="#CCCCCC"> <th>Descriptor Element</th> <th>Annotation</th> <th>Required?</th> <th>Notes</th> </tr> <tr> <td>goal</td> <td>name = "&lt;goal-name&gt;"</td> <td>Yes</td> <td>The name for the Mojo that users will reference from the command line to execute the Mojo directly, or inside a POM in order to provide Mojo-specific configuration.</td> </tr> <tr> <td>implementation</td> <td>none (detected)</td> <td>Yes</td> <td>The Mojo's fully-qualified class name (or script path in the case of non-Java Mojos).</td> </tr> <tr> <td>language</td> <td>none (detected)</td> <td>No. Default: <code>java</code></td> <td>The implementation language for this Mojo (Java, beanshell, etc.).</td> </tr> <tr> <td>configurator</td> <td>configurator = "&lt;role-hint&gt;"</td> <td>No</td> <td>The configurator type to use when injecting parameter values into this Mojo. The value is normally deduced from the Mojo's implementation language, but can be specified to allow a custom ComponentConfigurator implementation to be used. <br> <i>NOTE: This will only be used in very special cases, using a highly controlled vocabulary of possible values. (Elements like this are why it's a good idea to use the descriptor tools.)</i> </td> </tr> <tr> <td>phase</td> <td>defaultPhase = LifecyclePhase.&lt;phase&gt;</td> <td>No</td> <td>Binds this Mojo to a particular phase of the standard build lifecycle, if specified. <br> <i>NOTE: This is only required if this Mojo is to participate in the standard build process.</i> </td> </tr> <tr> <td>execute</td> <td>@Execute ( phase=LifecyclePhase.&lt;phase&gt;, goal= "&lt;goal-name&gt;", lifecycle="&lt;lifecycle-id&gt;" )</td> <td>No</td> <td>When this goal is invoked, it will first invoke a parallel lifecycle, ending at the given phase. If a goal is provided instead of a phase, that goal will be executed in isolation. The execution of either will not affect the current project, but instead make available the <code>${executedProject}</code> expression if required. An alternate lifecycle can also be provided: for more information see the documentation on the <a href="https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html" target="_blank">build lifecycle</a>. </td> </tr> <tr> <td>requiresDependencyResolution</td> <td>requiresDependencyResolution = ResolutionScope.&lt;scope&gt;</td> <td>No</td> <td>Flags this Mojo as requiring the dependencies in the specified scope (or an implied scope) to be resolved before it can execute. <br> <i>NOTE: Currently supports <b>compile</b>, <b>runtime</b>, and <b>test</b> scopes.</i> </td> </tr> <tr> <td>description</td> <td>none (detected)</td> <td>No</td> <td>The description of this Mojo's functionality. Using the toolset, this will be the class-level Javadoc description provided.<br> <i>NOTE: While this is not a required part of the Mojo specification, it <b>SHOULD</b> be provided to enable future tool support for browsing, etc. and for clarity.</i> </td> </tr> <tr> <td>parameters</td> <td>N/A</td> <td>No</td> <td>Specifications for the parameters which this Mojo uses will be provided in <b>parameter</b> sub-elements in this section. <br> <i>NOTE: Parameters are discussed in more detail below.</i> </td> </tr> </table> <p>This is only a small set of all the options. A complete list can be found at <a href="https://maven.apache.org/components/plugin-tools/maven-plugin-tools-annotations/index.html" target="_blank"> Maven Plugin Tool for Annotations</a>.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Base exception.
Shared methods of the repository metadata handling.
Filter to only retain objects in the given artifactScope or better.
Use a regular expression search to find and resolve expressions within the POM.
Describes a version transformation during artifact resolution.
The conditions within the build runtime environment which will trigger the automatic inclusion of the parent build profile.
This is the file specification used to activate a profile. The missing value will be a the location of a file that needs to exist, and if it doesn't the profile must run.  On the other hand exists will test for the existence of the file and if it is there will run the profile.
This is an activator which will detect an operating system's attributes in order to activate its profile.
This is the property specification used to activate a profile. If the value field is empty, then the existence of the named property will activate the profile, otherwise it does a case-sensitive match against the property value as well.
Wraps an active project instance to be able to receive updates from its artifact without affecting the original attributes of this artifact.
Apply multiple filters.
Hello world!
Maven Artifact interface. Notice that it mixes artifact definition concepts (groupId, artifactId, version) with dependency information (version range, scope).



Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Populates Aether {@link ArtifactDescriptorResult} from Maven project {@link Model}. <strong>Note:</strong> This class is part of work in progress and can be changed or removed without notice.
<strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.




Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.



Abstraction of an artifact repository. Artifact repositories can be remote, local, or even build reactor or IDE workspace.



Metadata for the artifact directory of the repository.
Describes a set of policies for a repository to use under certain conditions.

A resolution request allows you to either use an existing MavenProject, or a coordinate (gid:aid:version) to process a POMs dependencies.
Specific problems during resolution that we want to account for: <ul> <li>missing metadata</li> <li>version range violations</li> <li>version circular dependencies</li> <li>missing artifacts</li> <li>network/transfer errors</li> <li>file system errors: permissions</li> </ul>
Just hide the one method we want behind the RepositorySystem interface.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Type safe reincarnation of Artifact scope. Also supplies the {@code DEFAULT_SCOPE} as well as convenience method to deal with scope relationships.
Type safe enumeration for the artifact status field.
TransferEvent is used to notify TransferListeners about progress in transfer of resources form/to the repository
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a resource being uploaded or downloaded by the repository system.

Manages multiple ArtifactTransformation instances and applies them in succession.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes an artifact version in terms of its components, converts it to/from a string and compares two versions.

<strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice. Use {@link org.apache.maven.project.MavenProjectHelper#attachArtifact} instead.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Abstract implementation.
A path translator that resolves relative paths against a specific base directory.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Thrown when a bean couldn't be configured.
Postprocesses filesystem paths. For instance, a path translator might want to resolve relative paths given in the bean configuration against some base directory.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. A request to configure a bean from some configuration in the POM or similar.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Preprocesses a value from a bean configuration before the bean configurator unmarshals it into a bean property. A common use case for such preprocessing is the evaluation of variables within the configuration value.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Unmarshals some textual configuration from the POM or similar into the properties of a bean. This component works similar to the way Maven configures plugins from the POM, i.e. some configuration like {@code <param>value</param>} is mapped to an equally named property of the bean and converted. The properties of the bean are supposed to either have a public setter or be backed by an equally named field (of any visibility).

The <code>&lt;build&gt;</code> element contains informations required to build the project. Default values are defined in Super POM.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. A special throwable used to signal a graceful abort of the build.
Generic informations for a build.
Summarizes the result of a failed project build in the reactor.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. One or more builds failed.
<strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.


Summarizes the result of a successful project build in the reactor.
Summarizes the result of a project build in the reactor.
Simple {@link ThreadFactory} implementation that ensures the corresponding threads have a meaningful name.

<p> A {@link Builder} encapsulates a strategy for building a set of Maven projects. The default strategy in Maven builds the the projects serially, but a {@link Builder} can employ any type of concurrency model to build the projects. </p> <strong>Note:</strong> This interface is part of work in progress and can be changed or removed without notice.
Common code that is shared by the LifecycleModuleBuilder and the LifeCycleWeaveBuilder
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Utility class used to report errors, statistics, application version info, etc.

Occurs when a download checksum fails.
The <code>&lt;CiManagement&gt;</code> element contains informations required to the continuous integration system of the project.
Describes a constituent of a class realm.
Manages the class realms used by Maven. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
ClassRealmManagerDelegate is used to perform addition configuration of class realms created by ClassRealmManager.
Describes the requirements for a new class realm.

classpath container that is aware of the classpath scope ------------------------------------------------------------------------------------------- -------------------------------------------------------------------------------------------
Helper class to conver an Md Graph into some form of a classpath


<p> Generic implementation of version comparison. </p> Features: <ul> <li>mixing of '<code>-</code>' (hyphen) and '<code>.</code>' (dot) separators,</li> <li>transition between characters and digits also constitutes a separator: <code>1.0alpha1 =&gt; [1, 0, alpha, 1]</code></li> <li>unlimited number of version components,</li> <li>version components in the text can be digits or strings,</li> <li>strings are checked for well-known qualifiers and the qualifier ordering is used for version ordering. Well-known qualifiers (case insensitive) are:<ul> <li><code>alpha</code> or <code>a</code></li> <li><code>beta</code> or <code>b</code></li> <li><code>milestone</code> or <code>m</code></li> <li><code>rc</code> or <code>cr</code></li> <li><code>snapshot</code></li> <li><code>(the empty string)</code> or <code>ga</code> or <code>final</code></li> <li><code>sp</code></li> </ul> Unknown qualifiers are considered after known qualifiers, with lexical order (always case insensitive), </li> <li>a hyphen usually precedes a qualifier, and is always less important than something preceded with a dot.</li> </ul>





<p> Presents a view of the Dependency Graph that is suited for concurrent building. </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
Contains the configuration information of the container like Plugin.

Determines which version of an artifact to use when there are conflicting declarations.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. A factory that produces conflict resolvers of various types.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Indicates that a specified conflict resolver implementation could not be found.
Console download progress meter.


Interface to allow <code>Mojos</code> to communicate with each others <code>Mojos</code>, other than project's source root and project's attachment.<br> The plugin manager would pull the context out of the plugin container context, and populate it into the Mojo.
Description of a person who has contributed to the project, but who does not have commit privileges. Usually, these contributions come in the form of patches submitted.
Provides information about artifacts (identified by groupId:artifactId string key) and classpath elements exported by Maven core itself and loaded Maven core extensions.

Describes a build extension to utilise.
Provides information about artifacts (identified by groupId:artifactId string key) and classpath elements exported by Maven core itself or a Maven core extension.
Extensions to load.
Class CoreExtensionsXpp3Reader.
Class CoreExtensionsXpp3Writer.
Filter to only retain objects in the given scope or better. This implementation allows the accumulation of multiple scopes and their associated implied scopes, so that the user can filter apply a series of implication rules in a single step. This should be a more efficient implementation of multiple standard {@link ScopeArtifactFilter} instances ORed together.
Exception occurring trying to resolve a plugin.
Indicates a cycle in the dependency graph.
Log at debug level the mojo configuration.
Send resolution events to the debug log.









This class is an abstraction of the location from/to resources can be transfered.



Default implementation of artifact versioning.
A basic bean configuration request.
<strong>Warning:</strong> This is an internal class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
TODO the antrun plugin has its own configurator, the only plugin that does. might need to think about how that works TODO remove the coreArtifactFilterManager
Manages the class realms used by Maven. <strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.

default implementation of the metadata classpath transformer ---------------------------------------------------------------------------------------------------- ----------------------------------------------------------------------------------------------------
The default conflict resolver that delegates to the nearest strategy.
A conflict resolver factory that obtains instances from a plexus container.
Handles the import of dependency management from other models into the target model.
Handles injection of dependency management into the model.



- test projects for each of these - how to categorize the problems so that the id of the problem can be match to a page with descriptive help and the test project - nice little sample projects that could be run in the core as well as integration tests All Possible Errors - invalid lifecycle phase (maybe same as bad CLI param, though you were talking about embedder too) - <module> specified is not found - malformed settings - malformed POM - local repository not writable - remote repositories not available - artifact metadata missing - extension metadata missing - extension artifact missing - artifact metadata retrieval problem - version range violation - circular dependency - artifact missing - artifact retrieval exception - md5 checksum doesn't match for local artifact, need to redownload this - POM doesn't exist for a goal that requires one - parent POM missing (in both the repository + relative path) - component not found Plugins: - plugin metadata missing - plugin metadata retrieval problem - plugin artifact missing - plugin artifact retrieval problem - plugin dependency metadata missing - plugin dependency metadata retrieval problem - plugin configuration problem - plugin execution failure due to something that is know to possibly go wrong (like compilation failure) - plugin execution error due to something that is not expected to go wrong (the compiler executable missing) - asking to use a plugin for which you do not have a version defined - tools to easily select versions - goal not found in a plugin (probably could list the ones that are) PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException, CycleDetectedInPluginGraphException;
Holds data relevant for an execution event.
Assists in firing execution events. <strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
Default extension realm cache implementation. Assumes cached data does not change.


Default conflict resolver.Implements closer newer first policy by default, but could be configured via plexus ------------------------------------------------------------------------------------- -------------------------------------------------------------------------------------
Handles inheritance of model values.
Provides backwards compatibility with Maven 3.2.3 and earlier. Clients that do not require compatibility with Maven 3.2.3 and earlier are encouraged to use {@link JavaToolchainImpl}. <strong>Note:</strong> This is an internal component whose interface can change without prior notice.

Helps to provide backward-compatibility with plugins that use legacy components. <strong>Warning:</strong> This is an internal utility component that is only public for technical reasons, it is not part of the public API. In particular, this component can be changed or deleted without prior notice.
Handles injection of plugin executions induced by the lifecycle bindings for a packaging.
<strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
A facade that provides lifecycle services to components outside maven core. Note that this component is not normally used from within core itself.


<strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
<p> Calculates the task segments in the build </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
TODO The configuration for the lifecycle needs to be externalized so that I can use the annotations properly for the wiring and reference and external source for the lifecycle configuration.




end[MAVEN4]


Provides basic services to manage Maven plugins and their mojos. This component is kept general in its design such that the plugins/mojos can be used in arbitrary contexts. In particular, the mojos can be used for ordinary build plugins as well as special purpose plugins like reports.




Handles deserialization of metadata from some kind of textual format like XML.
Forms a request to retrieve artifact metadata.
This realizes the metadata source via the default hint to provide backward-compat with Maven 2.x whose Plexus version registered component descriptors twice: once keyed by role+roleHint and once keyed by role only. This effectively made the metadata source available with its original role hint ("maven") as well as the default hint.


A factory to create model builder instances when no dependency injection is available. <em>Note:</em> This class is only meant as a utility for developers that want to employ the model builder outside of the Maven build system, Maven plugins should always acquire model builder instances via dependency injection. Developers might want to subclass this factory to provide custom implementations for some of the components used by the model builder.
Holds data relevant for a model building event.
Processes events from the model builder while building the effective model for a {@link MavenProject} instance.
Collects settings that control building of effective models.
Collects the output of the model builder.
A model builder cache backed by the repository system cache.

Locates a POM file within a project base directory.
Handles normalization of a model.
Resolves relative paths within a model against a specific base directory.
Describes a problem that was encountered during model building. A problem can either be an exception that was thrown or a simple string message. In addition, a problem carries a hint about its source, e.g. the POM file that exhibits the problem.
Collects problems that are encountered during model building. The primary purpose of this component is to account for the fact that the problem reporter has/should not have information about the calling context and hence cannot provide an expressive source hint for the model problem. Instead, the source hint is configured by the model builder before it delegates to other components that potentially encounter problems. Then, the problem reporter can focus on providing a simple error message, leaving the donkey work of creating a nice model problem to this component.

Handles deserialization of a model from some kind of textual format like XML.
A model resolver to assist building of dependency POMs. This resolver gives priority to those repositories that have been initially specified and repositories discovered in dependency POMs are recessively merged into the search chain.
Normalizes URLs to remove the ugly parent references "../" that got potentially inserted by URL adjustment during model inheritance.

Handles serialization of a model into some kind of textual format like XML.

Resolves relative paths against a specific base directory.

Handles expansion of general build plugin configuration into individual executions.
Assists in resolving the dependencies of a plugin. <strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
Caches raw plugin descriptors. A raw plugin descriptor is a descriptor that has just been extracted from the plugin artifact and does not contain any runtime specific data. The cache must not be used for descriptors that hold runtime data like the plugin realm. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
Handles injection of plugin management into the model.

Collects settings required to resolve a plugin prefix.
Resolves a plugin prefix.
Describes the result of a plugin prefix resolution request.
Default PluginCache implementation. Assumes cached data does not change.
Collects settings required to resolve the version for a plugin.
Resolves a version for a plugin.
Describes the result of a plugin version resolution request.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a problem that was encountered during settings building. A problem can either be an exception that was thrown or a simple string message. In addition, a problem carries a hint about its source, e.g. the settings file that exhibits the problem.
Collects problems that are encountered during settings building.
Describes the environmental context used to determine the activation status of profiles.
Handles profile injection into the model.

Calculates the active profiles among a given collection of profiles.




Assists the project builder. <strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.

Collects the output of the project builder.

Describes the inter-dependencies between projects in the reactor.
Default project realm cache implementation. Assumes cached data does not change.
Handles expansion of general report plugin configuration into individual report sets.
Handles conversion of the <code>&lt;reporting&gt;</code> section into the configuration of Maven Site Plugin 3.x, i.e. <code>reportPlugins</code> and <code>outputDirectory</code> parameters.


Collects basic settings to access the repository system.


Provides information about the current Maven runtime.
Builds the effective settings from a user settings file and/or a global settings file.
A factory to create settings builder instances when no dependency injection is available. <em>Note:</em> This class is only meant as a utility for developers that want to employ the settings builder outside of the Maven build system, Maven plugins should always acquire settings builder instances via dependency injection. Developers might want to subclass this factory to provide custom implementations for some of the components used by the settings builder.
Collects settings that control building of effective settings.
Collects the output of the settings builder.
Decrypts passwords in the settings.
Collects parameters that control the decryption of settings.
Collects the output of the settings decrypter.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a problem that was encountered during settings building. A problem can either be an exception that was thrown or a simple string message. In addition, a problem carries a hint about its source, e.g. the settings file that exhibits the problem.
Collects problems that are encountered during settings building.
Handles deserialization of settings from the default textual format.

Handles serialization of settings into the default textual format.
Provides the super POM that all models implicitly inherit from.
Default abstract toolchain implementation, to be used as base class for any toolchain implementation to avoid rewriting usual code. should have been AbstractToolchain...



Collects toolchains that control building of effective toolchains.
Holds the result of the merged toolchains and holds the problems during this build, if any.
Handles deserialization of toolchains from the default textual format.

Normalizes a URL.



Delegating local artifact repository chains the reactor, IDE workspace and user local repository.


The <code>&lt;dependency&gt;</code> element contains information about a dependency of the project.
<p> Context of dependency artifacts for a particular project. </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice. TODO From a concurrency perspective, this class is not good. The combination of mutable/immutable state is not nice
Section for management of default dependency information for use in a group of POMs.
Handles the import of dependency management from other models into the target model.
Handles injection of dependency management into the model.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
A request to resolve the dependencies of a project.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Exception that occurs when an artifact file is used, but has not been resolved.
The result of a project dependency resolution.
Repository contains the information needed for deploying to the remote repository.

Information about one of the committers on this project.
This elements describes all that pertains to distribution for a project. It is primarily used for deployment of artifacts and the site produced by the build.
This exception is thrown if an application attempts to attach two of the same artifacts to a single project.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Signals a collision of two or more projects with the same g:a:v during a reactor build.
A stub implementation that assumes an empty lifecycle to bypass interaction with the plugin manager and to avoid plugin artifact resolution from repositories.

A stub implementation to bypass artifact resolution from repositories.
Assists the project builder. <strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
A core extension to monitor Maven's execution. Typically, such an extension gets loaded into Maven by specifying the system property {@code maven.ext.class.path} on the command line. As soon as dependency injection is setup, Maven looks up all implementers of this interface and calls their {@link #init(Context)} method. <em>Note:</em> Implementors are strongly advised to inherit from {@link AbstractEventSpy} instead of directly implementing this interface.
Dispatches callbacks to all registered eventspies.
Forwards execution events to eventspies.
Forwards repository events to eventspies.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Transform an exception into useful end-user message.
Provide a summary of the exception, containing:<ul> <li>the exception itself,</li> <li>useful end-user message,</li> <li>useful reference to a solution, or set of solutions: this is usually a wiki page url in <a href="http://cwiki.apache.org/confluence/display/MAVEN/">http://cwiki.apache.org/confluence/display/MAVEN/</a>, </li> <li>child exception summaries.</li> </ul>
Filter to exclude from a list of artifact patterns.
The <code>&lt;exclusion&gt;</code> element contains informations required to exclude an artifact to the project.

A set of goals to execute.
Holds data relevant for an execution event.
Assists in firing execution events. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.

Logs execution events to logger, eventually user-supplied.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Defines events that Maven fires during a build. <strong>Warning:</strong> This interface might be extended in future Maven versions to support further events. Hence it is strongly recommended to derive custom listeners from {@link AbstractExecutionListener} in order to avoid interoperability problems.
<p> Wraps individual MojoExecutions, containing information about completion status and scheduling. </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
A plugin parameter expression supported by Maven.
The root of a parameter plugin expression document.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Describes a build extension to utilise.
Provides metadata about a build extension. <strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
Creates an extension descriptor from some XML stream.
Caches extension class realms. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
Resolves conflicting artifacts by always selecting the <em>farthest</em> declaration. Farthest is defined as the declaration that has the most transitive steps away from the project being built.
Wraps an ordinary {@link File} as a model source.
Determines profile activation based on the existence/absence of some file. File name interpolation support is limited to <code>${basedir}</code> (since Maven 3, see <a href="https://issues.apache.org/jira/browse/MNG-2363">MNG-2363</a>), System properties and request properties. <code>${project.basedir}</code> is intentionally not supported as this form would suggest that other <code>${project.*}</code> expressions can be used, which is however beyond the design.
A PatternSet for files.
Wraps an ordinary {@link File} as a settings source.
Wraps an ordinary {@link File} as a source.
A model building request that delegates all methods invocations to another request, meant for easy transformations by subclassing.
Provides a sub view of another dependency graph.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. <p> A task that is a goal </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
Builds the {@link ProjectDependencyGraph inter-dependencies graph} between projects in the reactor.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. MetadataGraph edge selection policy. Complements GraphConflictResolver by being injected into it
Resolves conflicts in the supplied dependency graph. Different implementations will implement different conflict resolution policies.
Metadata for the group directory of the repository.
Base class for <code>Mirror</code>, <code>Profile</code>, <code>Proxy</code> and <code>Server</code>.
Filter to include from a list of artifact patterns.
Handles inheritance of model values.
Class InputLocation.
Interface InputLocationTracker.
Class InputSource.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Signals an internal error in Maven itself, e.g. a programming bug.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Exception thrown when the identity of an artifact can not be established, eg. one of groupId, artifactId, version or type is null.
Thrown if a dependency has an invalid version.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Thrown when a plugin is not internally consistent.


Error constructing an artifact repository.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Occurs when a version is invalid.

Information about the issue tracking (or bug tracking) system used to manage this project.
JDK toolchain interface. /** * Returns a list of {@link java.io.File}s which represents the bootstrap libraries for the * runtime environment. The Bootstrap libraries include libraries in JRE's * extension directory, if there are any. * * @return List */ List getBootstrapLibraries();  /** * Returns a list of {@link java.io.File}s which represent the libraries recognized by * default by the platform. Usually it corresponds to contents of CLASSPATH * environment variable. * * @return List */ List getStandardLibraries();  /** * Returns a {@link java.io.File}s which represent the locations of the source of the JDK, * or an empty collection when the location is not set or is invalid. * * @return List */ List getSourceDirectories();  /** * Returns a {@link java.io.File}s which represent the locations of the Javadoc for this platform, * or empty collection if the location is not set or invalid * * @return List */ List getJavadocFolders();
JDK toolchain factory. This is a <code>ToolchainFactory</code> Plexus component registered with <code>jdk</code> hint.
JDK toolchain implementation.

Determines profile activation based on the version of the current Java runtime.

Artifact collector - takes a set of original artifacts and resolves all of the best versions to use along with their metadata. No artifacts are downloaded.
<strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.


Helps to provide backward-compatibility with plugins that use legacy components. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
Describes the licenses for this project. This is used to generate the license page of the project's web site, as well as being taken into consideration in other reporting and validation. The licenses listed for the project are that of the project itself, and not of dependencies.


Class Lifecycle.
Handles injection of plugin executions induced by the lifecycle bindings for a packaging.
Root element of the <code>lifecycle.xml</code> file.
<p> Logs debug output from the various lifecycle phases. </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
<p> Resolves dependencies for the artifacts in context of the lifecycle build </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.



A facade that provides lifecycle services to components outside Maven core.

Lifecycle mapping delegate component interface. Calculates project build execution plan given {@link Lifecycle} and lifecycle phase. Standard lifecycles use plugin execution {@code <phase>} or mojo default lifecycle phase to calculate the execution plan, but custom lifecycles can use alternative mapping strategies. <p> Implementations of this interface must be annotated with either {@code @Named("lifecycle-id")} or equivalent plexus {@code @Component} annotations.
Class LifecycleMappingsXpp3Reader.
Class LifecycleMappingsXpp3Writer.
<p> Builds one or more lifecycles for a full module </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Signals a failure to locate a lifecycle.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Signals a failure to locate the lifecycle for some phase.
<strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
Starts the build life cycle
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. <p> A task that is a lifecycle </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
<p> Calculates the task segments in the build </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.


Signals a failure to store files within the local repository.


Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. This interface supplies the API for providing feedback to the user from the <code>Mojo</code>, using standard <code>Maven</code> channels.<br> There should be no big surprises here, although you may notice that the methods accept <code>java.lang.CharSequence</code> rather than <code>java.lang.String</code>. This is provided mainly as a convenience, to enable developers to pass things like <code>java.lang.StringBuffer</code> directly into the logger, rather than formatting first by calling <code>toString()</code>.
Configuration for slf4j-log4j2.
Configuration for slf4j-logback.


This element describes all of the mailing lists associated with a project. The auto-generated site references this information.

The main Maven execution entry point, which will execute a full Maven execution session.


Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
TODO completely separate local and remote artifact repositories

TODO push all common bits back to plexus cli and prepare for transition to Guice. We don't need 50 ways to make CLIs

TODO lifecycles being executed TODO what runs in each phase TODO plugins that need downloading TODO project dependencies that need downloading TODO unfortunately the plugins need to be downloaded in order to get the plugin.xml file. need to externalize this from the plugin archive. TODO this will be the class that people get in IDEs to modify

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Assists in populating an execution request for invocation of Maven. end[MAVEN4]




The domain-specific model merger for the Maven POM, overriding generic code from parent class when necessary with more adapted algorithms.
Provides basic services to manage Maven plugins and their mojos. This component is kept general in its design such that the plugins/mojos can be used in arbitrary contexts. In particular, the mojos can be used for ordinary build plugins as well as special purpose plugins like reports.


The concern of the project is provide runtime values based on the model. <p> The values in the model remain untouched but during the process of building a project notions like inheritance and interpolation can be added. This allows to have an entity which is useful in a runtime while preserving the model so that it can be marshalled and unmarshalled without being tainted by runtime requirements. </p> <p> With changes during 3.2.2 release MavenProject is closer to being immutable after construction with the removal of all components from this class, and the upfront construction taken care of entirely by the @{ProjectBuilder}. There is still the issue of having to run the lifecycle in order to find all the compile source roots and resource directories but I hope to take care of this during the Maven 4.0 release (jvz). </p>

Convenience interface for plugins to add or replace artifacts and resources on projects.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. An exception occurring during the execution of a Maven report.

A utility class to assist in setting up a Maven-like repository system. <em>Note:</em> This component is meant to assist those clients that employ the repository system outside of an IoC container, Maven plugins should instead always use regular dependency injection to acquire the repository system.

A Maven execution session. end[MAVEN4]


Logger for Maven, that support colorization of levels and stacktraces. This class implements 2 methods introduced in slf4j-simple provider local copy.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Utility for Maven to access Slf4j internals through package access. Use with precaution, since this is not normally intended for production use.
Utility for Maven to access Slf4j-Simple internals through package access. Use with precaution, since this is not normally intended for production use.


Class MavenToolchainsXpp3Reader.
Class MavenToolchainsXpp3Writer.

Class MavenXpp3Reader.
Class MavenXpp3ReaderEx.
Class MavenXpp3Writer.
Class Metadata.
<strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
maven dependency metadata graph ------------------------------------------------------------------------ ------------------------------------------------------------------------
metadata graph edge - combination of version, scope and depth define an edge in the graph ---------------------------------------------------------------------------- ----------------------------------------------------------------------------
MetadataGraph node - as it's a directed graph - holds adjacency lists for incident and exident nodes
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
metadata graph vertice - just a wrapper around artifact's metadata --------------------------------------------------------------------- ---------------------------------------------------------------------
Signals a failure to parse the metadata due to invalid syntax (e.g. non-wellformed XML or unknown elements).
Handles deserialization of metadata from some kind of textual format like XML.
------------------------------------------------------------------- -------------------------------------------------------------------
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Forms a request to retrieve artifact metadata.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
This object is tinted with ClasspathTransformation and GraphConflictResolver. Get rid of them after debugging ---------------------------------------------------------------------------- ----------------------------------------------------------------------------
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Error while retrieving repository metadata from the repository.
Provides some metadata operations, like querying the remote repository for a list of versions available for an artifact.
metadata [dirty] Tree ------------------------------------------------------------------------ ------------------------------------------------------------------------
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Assists in handling repository metadata.
Class MetadataXpp3Reader.
Class MetadataXpp3Writer.
A download mirror for a given repository.
Handles the selection of mirrors for repositories.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Signals a failure to execute a lifecycle phase or mojo because a project is required but not present.

The <code>&lt;project&gt;</code> element is the root of the descriptor. The following table lists all of the possible child elements.
Base class for the <code>Model</code> and the <code>Profile</code> objects.
Builds the effective model from a POM.
Holds data relevant for a model building event.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Signals one ore more errors during model building. The model builder tries to collect as many problems as possible before eventually failing to provide callers with rich error information. Use {@link #getProblems()} to query the details of the failure.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Defines events that the model builder fires during construction of the effective model. When a listener encounters errors while processing the event, it can report these problems via {@link ModelBuildingEvent#getProblems()}. <em>Note:</em> To cope with future extensions to this interface, it is strongly recommended to extend {@link AbstractModelBuildingListener} rather than to directly implement this interface.
Collects settings that control the building of effective models.
Collects the output of the model builder.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Caches auxiliary data used during model building like already processed raw/effective models. The data in the cache is meant for exclusive consumption by the model builder and is opaque to the cache implementation. The cache key is formed by a combination of group id, artifact id, version and tag. The first three components generally refer to the identify of a model. The tag allows for further classification of the associated data on the sole discretion of the model builder.
Describes a tag used by the model builder to access a {@link ModelCache}. This interface basically aggregates a name and a class to provide some type safety when working with the otherwise untyped cache.
Holds a model along with some auxiliary information. This internal utility class assists the model builder during POM processing by providing a means to transport information that cannot be (easily) extracted from the model itself.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Replaces expressions of the form <tt>${token}</tt> with their effective values. Effective values are basically calculated from the elements of the model itself and the execution properties from the building request.
Locates a POM file within a project base directory.
This is a hand-crafted prototype of the default model merger that should eventually be generated by Modello by a new Java plugin. Code structure to merge source (read-only) object into the target object is:<ul> <li><code>merge<i>Classname</i>( <i>Classname</i> target, <i>Classname</i> source, boolean sourceDominant, Map&lt;Object, Object&gt; context )</code> for each model class</li> <li><code>merge<i>Classname</i>_<i>FieldName</i>( <i>Classname</i> target, <i>Classname</i> source, boolean sourceDominant, Map&lt;Object, Object&gt; context )</code> for each field of each model class</li> <li><code>Object get<i>Classname</i>Key( <i>Classname</i> <i>classname</i> )</code> for each class that is used in a list</li> </ul> Code is written like it could be generated, with default behaviour to be overridden when necessary. This is particularly the case for <code>Object get<i>Classname</i>Key( <i>Classname</i> <i>classname</i> )</code> method, which by default return the object itself and is expected to be overridden to calculate better suited key value.
Handles normalization of a model. In this context, normalization is the process of producing a canonical representation for models that physically look different but are semantically equivalent.
Signals a failure to parse the POM due to invalid syntax (e.g. non-wellformed XML or unknown elements).
Resolves relative paths of a model against a specific base directory.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a problem that was encountered during model building. A problem can either be an exception that was thrown or a simple string message. In addition, a problem carries a hint about its source, e.g. the POM file that exhibits the problem.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Collects problems that are encountered during model building. The primary purpose of this component is to account for the fact that the problem reporter has/should not have information about the calling context and hence cannot provide an expressive source hint for the model problem. Instead, the source hint is configured by the model builder before it delegates to other components that potentially encounter problems. Then, the problem reporter can focus on providing a simple error message, leaving the donkey work of creating a nice model problem to this component.
Extends the ModelproblemCollector by the capacity of returning the collected problems.
Class to wrap request parameters to ModelProblemCollector.addProblem
Assists in the handling of model problems.

Handles deserialization of a model from some kind of textual format like XML.
Resolves a POM from its coordinates. During the build process, the {@link org.apache.maven.model.building.ModelBuilder} will add any relevant repositories to the model resolver. In other words, the model resolver is stateful and should not be reused across multiple model building requests.
Provides access to the contents of a POM independently of the backing store (e.g. file system, database, memory). <p> This interface does not support loading of parent POM(s) from the same backing store, integrators are strongly encouraged to implement {@link ModelSource2} instead of implementing this interface directly.
Provides access to the contents of a POM independently of the backing store (e.g. file system, database, memory). <p> Unlike {@link ModelSource}, this interface supports loading of parent POM(s) from the same backing store and allows construction of MavenProject instances without the need to have parent POM(s) available from local or remote repositories. <p> ModelSource2 instances are cached in {@link ModelBuildingRequest#getModelCache()}. Implementations must guarantee that the connection to the backing store remains active until request's {@link ModelCache} is discarded or flushed.
Normalizes URLs to remove the ugly parent references "../" that got potentially inserted by URL adjustment during model inheritance.


Checks the model for missing or invalid values.
Handles serialization of a model into some kind of textual format like XML.
This interface forms the contract required for <code>Mojos</code> to interact with the <code>Maven</code> infrastructure.<br> It features an <code>execute()</code> method, which triggers the Mojo's build-process behavior, and can throw a MojoExecutionException or MojoFailureException if error conditions occur.<br> Also included is the <code>setLog(...)</code> method, which simply allows Maven to inject a logging mechanism which will allow the Mojo to communicate to the outside world through standard Maven channels.
The bean containing the Mojo descriptor.<br> For more information about the usage tag, have a look to: <a href="https://maven.apache.org/developers/mojo-api-specification.html"> https://maven.apache.org/developers/mojo-api-specification.html</a> TODO is there a need for the delegation of MavenMojoDescriptor to this? Why not just extend ComponentDescriptor here?
<p> Resolves dependencies for the artifacts in context of the lifecycle build </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.

<p> A MojoExecutionConfigurator is responsible for creating the configuration for Mojo based on configuration for a Mojo in the MavenProject and the default configuration for the Mojo from the containing plugin's plugin.xml descriptor. </p> <strong>Note:</strong> This interface is part of work in progress and can be changed or removed without notice.
<p> Encapsulates parameters of MojoExecutionListener callback methods and is meant to provide API evolution path should it become necessary to introduce new parameters in the existing callbacks in the future. </p> <strong>Note:</strong> This class is part of work in progress and can be changed or removed without notice.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. An exception occurring during the execution of a plugin.<br> Throwing this exception causes a "BUILD ERROR" message to be displayed.
<p> Extension point that allows build extensions observe and possibly veto mojo executions. </p> <strong>Note:</strong> This interface is part of work in progress and can be changed or removed without notice.



Indicates that annotated component should be instantiated before mojo execution starts and discarded after mojo execution completes.

<p> Executes an individual mojo </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. An exception occurring during the execution of a plugin (such as a compilation failure).<br> Throwing this exception causes a "BUILD FAILURE" message to be displayed.

Builds the full lifecycle in weave-mode (phase by phase as opposed to project-by-project). <p> This builder uses a number of threads equal to the minimum of the degree of concurrency (which is the thread count set with <code>-T</code> on the command-line) and the number of projects to build. As such, building a single project will always result in a sequential build, regardless of the thread count. </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
Exception caused when one or more artifacts can not be resolved because they are not found in the local or remote repositories.
Resolves conflicting artifacts by always selecting the <em>nearest</em> declaration. Nearest is defined as the declaration that has the least transitive steps away from the project being built.
Resolves conflicting artifacts by always selecting the <em>newest</em> declaration. Newest is defined as the declaration whose version is greater according to <code>ArtifactVersion.compareTo</code>.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Signals a failure to build because no goal was specified.

Configures one method for notifying users/developers when a build breaks.
Resolves conflicting artifacts by always selecting the <em>oldest</em> declaration. Oldest is defined as the declaration whose version is less according to <code>ArtifactVersion.compareTo</code>.
Determines profile activation based on the operating system of the current runtime platform.
Apply multiple filters, accepting an artifact if at least one of the filters accepts it.
Specifies the organization that produces this project.
Occurs when ranges exclude each other and no valid value remains.
Class ParamdocXpp3Reader.
Class ParamdocXpp3Writer.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
The <code>&lt;parent&gt;</code> element contains information required to locate the parent project from which this project will inherit from. <strong>Note:</strong> The children of this element are not interpolated and must be given as literal values.


Definition of include or exclude patterns.
Wagon with per-lookup instantiation strategy.
The <code>&lt;toolchains&gt;</code> element is the root of the descriptor. The following table lists all of the possible child elements.
A phase mapping definition.
<strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
Injects plexus-utils:1.1 into a plugin's class path if it doesn't already declare a dependency on plexus-utils. This is another legacy bit to provide backward-compat with Maven 2.x.
Mapping information for a single plugin within this group.

Caches plugin artifacts. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
Contains the plugins management informations for the project.

Handles expansion of general build plugin configuration into individual executions.
Contains the plugins informations for the project.
Exception which occurs to indicate that the plugin cannot be initialized due to some deeper problem with Plexus. Context information includes the groupId, artifactId, and version for the plugin; at times, the goal name for which execution failed; a message detailing the problem; the ClassRealm used to lookup the plugin; and the Plexus exception that caused this error.
Assists in resolving the dependencies of a plugin. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
Assists in detecting wagon providers brought into the plugin class path via legacy Maven core artifacts (e.g. maven-core:2.0.6) and excluding them. A plugin should be able to explicitly declare dependencies on specific wagons for its use. However, the (old) wagons pulled in transitively via legacy Maven core artifacts are usually not intended as dependencies and more importantly screw up artifact resolution because they would get preferred over the core wagon versions. This is a hack to provide backward-compat with Maven 2 (MNG-4528, MNG-4561).


Caches raw plugin descriptors. A raw plugin descriptor is a descriptor that has just been extracted from the plugin artifact and does not contain any runtime specific data. The cache must not be used for descriptors that hold runtime data like the plugin realm. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.

The <code>&lt;execution&gt;</code> element contains informations required for the execution of a plugin.

Signals a plugin which is not compatible with the current Maven runtime.
Signifies a failure to load a plugin. This is used to abstract the specific errors which may be encountered at lower levels, and provide a dependable interface to the plugin-loading framework.
Section for management of default plugin information for use in a group of POMs.
Handles injection of plugin management into the model.

Exception in the plugin manager.
Exception occurring trying to resolve a plugin.

Evaluator for plugin parameters expressions. Content surrounded by <code>${</code> and <code>}</code> is evaluated. Recognized values are:<table border="1" summary="Expression matrix"> <tr><th>expression</th>                     <th></th>               <th>evaluation result</th></tr> <tr><td><code>session</code></td>           <td></td>               <td>the actual {@link MavenSession}</td></tr> <tr><td><code>session.*</code></td>         <td>(since Maven 3)</td><td></td></tr> <tr><td><code>localRepository</code></td>   <td></td> <td>{@link MavenSession#getLocalRepository()}</td></tr> <tr><td><code>reactorProjects</code></td>   <td></td>               <td>{@link MavenSession#getProjects()}</td></tr> <tr><td><code>repositorySystemSession</code></td><td> (since Maven 3)</td> <td>{@link MavenSession#getRepositorySession()}</td></tr> <tr><td><code>project</code></td>           <td></td> <td>{@link MavenSession#getCurrentProject()}</td></tr> <tr><td><code>project.*</code></td>         <td></td>               <td></td></tr> <tr><td><code>pom.*</code></td>             <td>(since Maven 3)</td><td>same as <code>project.*</code></td></tr> <tr><td><code>executedProject</code></td>   <td></td> <td>{@link MavenProject#getExecutionProject()}</td></tr> <tr><td><code>settings</code></td>          <td></td>               <td>{@link MavenSession#getSettings()}</td></tr> <tr><td><code>settings.*</code></td>        <td></td>               <td></td></tr> <tr><td><code>basedir</code></td>           <td></td> <td>{@link MavenSession#getExecutionRootDirectory()} or <code>System.getProperty( "user.dir" )</code> if null</td></tr> <tr><td><code>mojoExecution</code></td>     <td></td>               <td>the actual {@link MojoExecution}</td></tr> <tr><td><code>mojo</code></td>              <td>(since Maven 3)</td><td>same as <code>mojoExecution</code></td></tr> <tr><td><code>mojo.*</code></td>            <td>(since Maven 3)</td><td></td></tr> <tr><td><code>plugin</code></td>            <td>(since Maven 3)</td> <td>{@link MojoExecution#getMojoDescriptor()}.{@link MojoDescriptor#getPluginDescriptor() getPluginDescriptor()}</td></tr> <tr><td><code>plugin.*</code></td>          <td></td>               <td></td></tr> <tr><td><code>*</code></td>                 <td></td>               <td>system properties</td></tr> <tr><td><code>*</code></td>                 <td></td>               <td>project properties</td></tr> </table> <i>Notice:</i> <code>reports</code> was supported in Maven 2.x but was removed in Maven 3
Collects settings required to resolve a plugin prefix.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Resolves a plugin prefix.

Describes the result of a plugin prefix resolution request.
Caches plugin class realms. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
Exception occurring trying to resolve a plugin.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Collects settings required to resolve the version for a plugin.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Resolves a version for a plugin.

Describes the result of a plugin version resolution request.
Describes the prerequisites a project can have.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a problem that was encountered during settings building. A problem can either be an exception that was thrown or a simple string message. In addition, a problem carries a hint about its source, e.g. the settings file that exhibits the problem.
Collects problems that are encountered during settings building.

Wraps another value source and intercepts interpolated expressions, checking for problems.
Modifications to the build process which is keyed on some sort of environmental parameter.
Describes the environmental context used to determine the activation status of profiles.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Determines whether a profile should be activated.
Handles profile injection into the model.

Calculates the active profiles among a given collection of profiles.

Root element of the profiles.xml file.
Class ProfilesXpp3Reader.
Class ProfilesXpp3Writer.

<p> Component interface responsible for creation of MavenProject#dependencyArtifacts instances. </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.
Attach a POM to an artifact.
Caches project artifacts. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
Exception which occurs when a normal (i.e. non-aggregator) mojo fails to execute. In this case, the mojo failed while executing against a particular project instance, so we can wrap the {@link MojoFailureException} with context information including projectId that caused the failure.
<p> A list of project segments, ordered so that all ProjectSegments from first TaskSegment come before any subsequent TaskSegments. </p> <strong>Note:</strong> This interface is part of work in progress and can be changed or removed without notice.
Builds in-memory descriptions of projects.


Assists the project builder. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.

Collects the output of the project builder.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Resolves the transitive dependencies of a project.

Describes the inter-dependencies between projects in the reactor.
A stub dependency graph that is custom made for testing concurrent build graph evaluations. <p> Implements a graph as follows: A has no dependencies B depends on A C depends on A X depends on B &amp; C Y depends on B Z depends on C </p>
<p> Encapsulates parameters of ProjectExecutionListener callback methods and is meant to provide API evolution path should it become necessary to introduce new parameters in the existing callbacks in the future. </p> <strong>Note:</strong> This class is part of work in progress and can be changed or removed without notice.
<p> Extension point that allows build extensions observe and possibly veto project build execution. </p> <strong>Note:</strong> This interface is part of work in progress and can be changed or removed without notice.
<p> Provides the positional index of the project </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice. TODO Kristian wonders if this class really is necessary and if it overlaps other concepts.
A model resolver to assist building of projects. This resolver gives priority to those repositories that have been declared in the POM.
Caches project class realms. <strong>Warning:</strong> This is an internal utility interface that is only public for technical reasons, it is not part of the public API. In particular, this interface can be changed or deleted without prior notice.
A build context that matches a mavenproject to a given tasksegment, and the session to be used. <p> A note to the reader; </p> <p> There are several issues/discussions regarding how "aggregator" plugins should be handled. Read for instance http://docs.codehaus.org/display/MAVEN/Deterministic+Lifecycle+Planning </p> <p> In their current implementation they are "bolted" onto the lifecycle by separating them into TaskSegments. This class represents the execution context of one such task segment. </p> <p> Wise voices have suggested that maybe aggregators shouldn't be bound to the ordinary lifecycle at all, in which case we wouldn't be needing this class at all ( and ProjectBuildList.getByTaskSegments). Or maybe they should be introduced in the calculation of the execution plan instead, which seems much nicer. </p> <p> Additionally this class contains a clone of the MavenSession, which is *only* needed because it has as notion of a "current" project. </p> <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice.

This class needs to stick around because it was exposed the the remote resources plugin started using it instead of getting the repositories from the project.
Determines profile activation based on the existence or value of some execution property.
The <code>&lt;proxy&gt;</code> element contains informations required to a proxy settings.

Contains status information that is global to an entire reactor build.
Context that is fixed for the entire reactor build.

A simple model cache used to accelerate model building during a reactor build.
Holds all POM files that are known to the reactor. This allows the project builder to resolve imported POMs from the reactor when building another project's effective model.
An implementation of a workspace reader that knows how to search the Maven reactor for artifacts, either as packaged jar if it has been built, or only compile output directory if packaging hasn't happened yet.
Use a regular expression search to find and resolve expressions within the POM.
Change the version <code>RELEASE</code> to the appropriate release version from the remote repository.

Describes where an artifact has moved to. If any of the values are omitted, it is assumed to be the same as it was before.


Handles expansion of general report plugin configuration into individual report sets.
The <code>&lt;plugin&gt;</code> element contains informations required for a report plugin.
Represents a set of reports and configuration to be used to generate them.
Section for management of reports and their configuration.
Handles conversion of the <code>&lt;reporting&gt;</code> section into the configuration of Maven Site Plugin 3.x, i.e. <code>reportPlugins</code> and <code>outputDirectory</code> parameters.
Repository contains the information needed for establishing connections with remote repository .
Repository contains the information needed for establishing connections with remote repository .
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Caches auxiliary data used during repository access like already processed metadata. The data in the cache is meant for exclusive consumption by the repository system and is opaque to the cache implementation.  Used by Tycho and will break users and force them to upgrade to Maven 3.1 so we should really leave this here, possibly indefinitely.
Describes repository directory metadata.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Error while deploying repository metadata.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Error while installing repository metadata.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Problem storing the repository metadata in the local repository.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Error while retrieving repository metadata from the repository.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Problem storing the repository metadata in the local repository.
Download policy.
Collects basic settings to access the repository system.
Component interface that allows per-project customization of Aether repository system sessions. <strong>Note:</strong> This interface is part of work in progress and can be changed or removed without notice.

<strong>Warning:</strong> This is an internal utility class that is only public for technical reasons, it is not part of the public API. In particular, this class can be changed or deleted without prior notice.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a component requirement.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.

Listens to the resolution process and handles events.
Do not use! <p> Should only be implemented by DebugResolutionListener.  Remove this when the ResolutionListener interface deprecation of the manageArtifact method (and the [yet to be done] addition of these methods to that interface) has had a chance to propagate to all interested plugins.

This element describes all of the classpath resources associated with a project or unit tests.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a restriction in versioning.
There are various forms of results that are represented by this class: <ol> <li>success - in which case only the model field is set <li>success with warnings - model field + non-error model problems <li>error - no model, but diagnostics <li>error - (partial) model and diagnostics </ol> Could encode these variants as subclasses, but kept in one for now
To handle runtime informations like local repository or profiles.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Provides information about the current Maven runtime.
The <code>&lt;scm&gt;</code> element contains informations required to the SCM (Source Control Management) of the project.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Filter to only retain objects in the given artifactScope or better.
The <code>&lt;server&gt;</code> element contains informations required to a server settings.


Indicates that annotated component should be instantiated before session execution starts and discarded after session execution completes.
Root element of the user configuration file.
Adapt a {@link MavenExecutionRequest} to a {@link Settings} object for use in the Maven core. We want to make sure that what is ask for in the execution request overrides what is in the settings. The CLI feeds into an execution request so if a particular value is present in the execution request then we will take that over the value coming from the user settings.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Builds the effective settings from a user settings file and/or a global settings file.
Signals one ore more errors during settings building. The settings builder tries to collect as many problems as possible before eventually failing to provide callers with rich error information. Use {@link #getProblems()} to query the details of the failure.
Collects settings that control the building of effective settings.
Collects the output of the settings builder.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. If there was an error in the settings file.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Decrypts passwords in the settings.
Collects parameters that control the decryption of settings.
Collects the output of the settings decrypter.
Signals a failure to parse the settings due to invalid syntax (e.g. non-wellformed XML or unknown elements).
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Describes a problem that was encountered during settings building. A problem can either be an exception that was thrown or a simple string message. In addition, a problem carries a hint about its source, e.g. the settings file that exhibits the problem.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Collects problems that are encountered during settings building.
Handles deserialization of settings from some kind of textual format like XML.
Provides access to the contents of settings independently of the backing store (e.g. file system, database, memory).
Several convenience methods to handle settings
Validate a model settings
Handles serialization of settings into some kind of textual format like XML.

Class SettingsXpp3Reader.
Class SettingsXpp3Writer.

<p>Simple implementation of {@link Logger} that sends all enabled log messages, for all defined loggers, to the console ({@code System.err}). The following system properties are supported to configure the behavior of this logger:</p> <ul> <li><code>org.slf4j.simpleLogger.logFile</code> - The output target which can be the <em>path</em> to a file, or the special values "System.out" and "System.err". Default is "System.err". <li><code>org.slf4j.simpleLogger.defaultLogLevel</code> - Default log level for all instances of SimpleLogger. Must be one of ("trace", "debug", "info", "warn", "error" or "off"). If not specified, defaults to "info". </li> <li><code>org.slf4j.simpleLogger.log.<em>a.b.c</em></code> - Logging detail level for a SimpleLogger instance named "a.b.c". Right-side value must be one of "trace", "debug", "info", "warn", "error" or "off". When a SimpleLogger named "a.b.c" is initialized, its level is assigned from this property. If unspecified, the level of nearest parent logger will be used, and if none is set, then the value specified by <code>org.slf4j.simpleLogger.defaultLogLevel</code> will be used.</li> <li><code>org.slf4j.simpleLogger.showDateTime</code> - Set to <code>true</code> if you want the current date and time to be included in output messages. Default is <code>false</code></li> <li><code>org.slf4j.simpleLogger.dateTimeFormat</code> - The date and time format to be used in the output messages. The pattern describing the date and time format is defined by <a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/text/SimpleDateFormat.html"><code>SimpleDateFormat</code></a>. If the format is not specified or is invalid, the number of milliseconds since start up will be output. </li> <li><code>org.slf4j.simpleLogger.showThreadName</code> -Set to <code>true</code> if you want to output the current thread name. Defaults to <code>true</code>.</li> <li><code>org.slf4j.simpleLogger.showLogName</code> - Set to <code>true</code> if you want the Logger instance name to be included in output messages. Defaults to <code>true</code>.</li> <li><code>org.slf4j.simpleLogger.showShortLogName</code> - Set to <code>true</code> if you want the last component of the name to be included in output messages. Defaults to <code>false</code>.</li> <li><code>org.slf4j.simpleLogger.levelInBrackets</code> - Should the level string be output in brackets? Defaults to <code>false</code>.</li> <li><code>org.slf4j.simpleLogger.warnLevelString</code> - The string value output for the warn level. Defaults to <code>WARN</code>.</li> </ul> <p>In addition to looking for system properties with the names specified above, this implementation also checks for a class loader resource named <code>"simplelogger.properties"</code>, and includes any matching definitions from this resource (if it exists).</p> <p>With no configuration, the default output includes the relative time in milliseconds, thread name, the level, logger name, and the message followed by the line separator for the host.  In log4j terms it amounts to the "%r [%t] %level %logger - %m%n" pattern. </p> <p>Sample output follows.</p> <pre> 176 [main] INFO examples.Sort - Populating an array of 2 elements in reverse order. 225 [main] INFO examples.SortAlgo - Entered the sort method. 304 [main] INFO examples.SortAlgo - Dump of integer array: 317 [main] INFO examples.SortAlgo - Element [0] = 0 331 [main] INFO examples.SortAlgo - Element [1] = 1 343 [main] INFO examples.Sort - The next log statement should be an error message. 346 [main] ERROR examples.SortAlgo - Tried to dump an uninitialized array. at org.log4j.examples.SortAlgo.dump(SortAlgo.java:58) at org.log4j.examples.Sort.main(Sort.java:64) 467 [main] INFO  examples.Sort - Exiting main method. </pre> <p>This implementation is heavily inspired by <a href="http://commons.apache.org/logging/">Apache Commons Logging</a>'s SimpleLog.</p>
An implementation of {@link ILoggerFactory} which always returns {@link SimpleLogger} instances.
A simple model problem collector for testing the model building components.

Contains the information needed for deploying websites.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Interface for configuration operations on loggers, which are not available in slf4j, then require per-slf4f-binding implementation.
Slf4jConfiguration factory, loading implementations from <code>META-INF/maven/slf4j-configuration.properties</code> configuration files in class loader: key is the class name of the ILoggerFactory, value is the class name of the corresponding Slf4jConfiguration.
Adapt an SLF4J logger to a Plexus logger, ignoring Plexus logger API parts that are not classical and probably not really used.
Use an SLF4J {@link org.slf4j.ILoggerFactory} as a backing for a Plexus {@link org.codehaus.plexus.logging.LoggerManager}, ignoring Plexus logger API parts that are not classical and probably not really used.

Configuration for slf4j-simple.

Snapshot data for the current artifact version.
Metadata for the artifact version directory of the repository.


Versioning information for a sub-artifact of the current snapshot artifact.
Provides access to the contents of a source independently of the backing store (e.g. file system, database, memory).
The binding of {@link LoggerFactory} class with an actual instance of {@link ILoggerFactory} is performed using information returned by this class.
This implementation is bound to {@link NOPMDCAdapter}.
The binding of {@link MarkerFactory} class with an actual instance of {@link IMarkerFactory} is performed using information returned by this class.
Wraps an ordinary {@link CharSequence} as a model source.

Wraps an ordinary {@link CharSequence} as a settings source.
Wraps an ordinary {@link CharSequence} as a source.

Provides the super POM that all models implicitly inherit from.


Logger with "standard" output and error output stream.
Describes the required task segment as provided on the maven command line; i.e. "clean jetty:run install" <strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice. TODO Consider throwing UnsupportedSomething on hashCode/equals
<strong>NOTE:</strong> This class is not part of any public api and can be changed or deleted without prior notice. This class in particular may spontaneously self-combust and be replaced by a plexus-compliant thread aware logger implementation at any time.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Toolchain interface.
Internal toolchain factory, to prepare toolchains instances.
Public API for a toolchain-aware plugin to get expected toolchain instance.
Component for use by the <code>maven-toolchains-plugin</code> only. It provides API: <ol> <li>to retrieve every toolchains available in user settings,</li> <li>to store chosen toolchain into build context for later use by toolchain-aware plugins.</li> </ol>
Definition of a toolchain instance.
a private contract between the toolchains plugin and the components.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Builds the effective toolchains from a user toolchains file and/or a global toolchains file.

Collects toolchains that control the building of effective toolchains.
Collects the output of the toolchains builder.
Signals a failure to parse the toolchains due to invalid syntax (e.g. non-wellformed XML or unknown elements).
Handles deserialization of toolchains from some kind of textual format like XML.
common base class that contains code to track the source for this instance (USER|GLOBAL) .

Artifact Filter which filters on artifact type
Exception which is meant to occur when a layout specified for a particular repository doesn't have a corresponding {@link org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout} component in the current container.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Signals an error when resolving the path to an external model.
A simple recording of the Artifacts that could not be resolved for a given resolution request, along with the remote repositories where attempts were made to resolve the artifacts.
Pseudo-configuration for unsupported slf4j binding.

Wraps an ordinary {@link URL} as a model source.
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Normalizes a URL to remove the ugly parent references "../" that got potentially inserted by URL adjustment during model inheritance.
Ensures that expressions referring to URLs evaluate to normalized URLs.
Wraps an ordinary {@link URL} as a settings source.
Wraps an ordinary {@link URL} as a source.

A configuration listener to help validate the plugin configuration. For instance, check for required but missing parameters.
Thrown if a dependency has an invalid version.
Construct a version range from a specification.
Versioning information for an artifact (un-versioned or snapshot).



Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Wagon for testing, for protocol <code>a</code>
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Wagon for testing, for protocols <code>b1</code> and <code>b2</code>
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License. Wagon for testing, for protocol <code>c</code>
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
Assists in detecting wagon providers brought into the plugin class path via legacy Maven core artifacts (e.g. maven-core:2.0.6) and excluding them. A plugin should be able to explicitly declare dependencies on specific wagons for its use. However, the (old) wagons pulled in transitively via legacy Maven core artifacts are usually not intended as dependencies and more importantly screw up artifact resolution because they would get preferred over the core wagon versions. This is a hack to provide backward-compat with Maven 2 (MNG-4528, MNG-4561).
Manages <a href="https://maven.apache.org/wagon">Wagon</a> related operations in Maven.
Mock of a Wagon for testing
Send resolution warning events to the warning log.
Extension point that allows build extensions observe and possibly veto mojo executions. <p> Unlike {@link org.apache.maven.execution.MojoExecutionListener}, this extension point does not trigger instantiation of the component, hence "weak" class name prefix. Only applies to mojo execution scoped components. </p> <strong>Note:</strong> This interface is part of work in progress and can be changed or removed without notice.

An attribute iterator for JXPath to support <code>Xpp3Dom</code>.
An attribute pointer for JXPath to support <code>Xpp3Dom</code>.
A node iterator for JXPath to support <code>Xpp3Dom</code>.
A node pointer for JXPath to support <code>Xpp3Dom</code>.
A node pointer factory for JXPath to support <code>Xpp3Dom</code>.

